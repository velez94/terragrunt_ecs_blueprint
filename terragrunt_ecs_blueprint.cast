{"version": 2, "width": 228, "height": 41, "timestamp": 1691422871, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.377104, "o", "\u001b[?2004h\u001b]0;labvel@VelPro: ~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint\u0007\u001b[01;32mlabvel@VelPro\u001b[00m:\u001b[01;34m~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint\u001b[00m$ "]
[2.720886, "o", "c"]
[2.727776, "o", "d"]
[2.841771, "o", " "]
[2.974243, "o", "i"]
[3.132859, "o", "n"]
[3.245743, "o", "f"]
[3.494545, "o", "rastructure/"]
[4.055658, "o", "\r\n\u001b[?2004l\r"]
[4.055884, "o", "\u001b[?2004h\u001b]0;labvel@VelPro: ~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure\u0007\u001b[01;32mlabvel@VelPro\u001b[00m:\u001b[01;34m~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure\u001b[00m$ "]
[7.814603, "o", "T"]
[8.016007, "o", "F"]
[8.599481, "o", "_"]
[8.780983, "o", "V"]
[9.342396, "o", "A"]
[9.523198, "o", "R"]
[10.264582, "o", "_"]
[10.761299, "o", "e"]
[10.984818, "o", "v"]
[11.524233, "o", "\b\u001b[K"]
[11.838862, "o", "n"]
[11.930809, "o", "v"]
[12.919715, "o", "="]
[13.167214, "o", "d"]
[13.346569, "o", "e"]
[13.482052, "o", "v"]
[14.136507, "o", " "]
[15.194498, "o", "t"]
[15.417035, "o", "e"]
[15.597319, "o", "r"]
[15.731826, "o", "r"]
[15.889095, "o", "a"]
[16.048359, "o", "gr"]
[16.1834, "o", "u"]
[16.31774, "o", "n"]
[16.432667, "o", "t"]
[16.655024, "o", " "]
[18.568033, "o", "u"]
[18.927379, "o", "\b\u001b[K"]
[18.996038, "o", "r"]
[19.175094, "o", "u"]
[19.310422, "o", "n"]
[19.648872, "o", "-"]
[19.782362, "o", "a"]
[19.94064, "o", "l"]
[20.074706, "o", "l"]
[20.345628, "o", " "]
[20.974477, "o", "p"]
[21.201026, "o", "l"]
[21.313931, "o", "a"]
[21.470375, "o", "n"]
[21.765087, "o", " "]
[24.41186, "o", "\r\n\u001b[?2004l\r"]
[24.660987, "o", "\u001b[36mINFO\u001b[0m[0000] The stack at /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure will be processed in the following order for command plan:\r\nGroup 1\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Operations/ResourceGroup\r\n\r\nGroup 2\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB\r\n\r\nGroup 3\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ECS/SampleService\r\n\r\nGroup 4\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSServices/SampleService\r\n \r\n"]
[24.800442, "o", "\u001b[33mWARN\u001b[0m[0000] No double-slash (//) found in source URL /terraform-aws-modules/ecs/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster] \r\n"]
[24.802333, "o", "\u001b[33mWARN\u001b[0m[0000] No double-slash (//) found in source URL /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/modules/Resource_Groups. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Operations/ResourceGroup] \r\n\u001b[33mWARN\u001b[0m[0000] No double-slash (//) found in source URL /terraform-aws-modules/vpc/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC] \r\n"]
[27.44213, "o", "\r\n\u001b[0m\u001b[1mInitializing the backend...\u001b[0m\r\n"]
[27.762912, "o", "\r\n\u001b[0m\u001b[1mInitializing the backend...\u001b[0m\r\n"]
[27.873703, "o", "\r\n\u001b[0m\u001b[1mInitializing the backend...\u001b[0m\r\n"]
[28.763718, "o", "\u001b[0m\u001b[32m\r\nSuccessfully configured the backend \"s3\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\u001b[0m\r\n"]
[29.036572, "o", "\u001b[0m\u001b[32m\r\nSuccessfully configured the backend \"s3\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\u001b[0m\r\n"]
[29.123982, "o", "\u001b[0m\u001b[32m\r\nSuccessfully configured the backend \"s3\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\u001b[0m\r\n"]
[29.945958, "o", "\r\n\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m\r\n- Reusing previous version of hashicorp/aws from the dependency lock file\r\n"]
[30.17681, "o", "\u001b[0m\u001b[1mInitializing modules...\u001b[0m\r\n"]
[30.181839, "o", "- cluster in modules/cluster\r\n"]
[30.192332, "o", "- service in modules/service\r\n"]
[30.194563, "o", "- service.container_definition in modules/container-definition\r\n"]
[30.197045, "o", "\r\n\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m\r\n- Reusing previous version of hashicorp/aws from the dependency lock file\r\n"]
[30.314847, "o", "\r\n\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m\r\n- Reusing previous version of hashicorp/aws from the dependency lock file\r\n"]
[30.839821, "o", "- Using hashicorp/aws v5.9.0 from the shared cache directory\r\n"]
[31.230845, "o", "- Using hashicorp/aws v5.11.0 from the shared cache directory\r\n"]
[31.382239, "o", "- Using hashicorp/aws v5.9.0 from the shared cache directory\r\n"]
[32.506187, "o", "\r\n\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m\r\n\u001b[0m\u001b[32m\r\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\r\nany changes that are required for your infrastructure. All Terraform commands\r\nshould now work.\r\n\r\nIf you ever set or change modules or backend configuration for Terraform,\r\nrerun this command to reinitialize your working directory. If you forget, other\r\ncommands will detect it and remind you to do so if necessary.\u001b[0m\r\n"]
[32.952296, "o", "\r\n\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m\r\n\u001b[0m\u001b[32m\r\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\r\nany changes that are required for your infrastructure. All Terraform commands\r\nshould now work.\r\n\r\nIf you ever set or change modules or backend configuration for Terraform,\r\nrerun this command to reinitialize your working directory. If you forget, other\r\ncommands will detect it and remind you to do so if necessary.\u001b[0m\r\n"]
[32.998665, "o", "\r\n\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m\r\n\u001b[0m\u001b[32m\r\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\r\nany changes that are required for your infrastructure. All Terraform commands\r\nshould now work.\r\n\r\nIf you ever set or change modules or backend configuration for Terraform,\r\nrerun this command to reinitialize your working directory. If you forget, other\r\ncommands will detect it and remind you to do so if necessary.\u001b[0m\r\n"]
[35.096688, "o", "Acquiring state lock. This may take a few moments...\r\n"]
[35.437031, "o", "Acquiring state lock. This may take a few moments...\r\n"]
[40.27078, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # aws_resourcegroups_group.resource_group[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_resourcegroups_group\" \"resource_group\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description = \"Resource group for terragrunt-ecs-blueprint  Resources for dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name        = \"terragrunt-ecs-blueprint-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags        = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Contact\"     = \"Platform Architects\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Transversal\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Owner\"       = \"Lead Platform\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Protected\"   = \"true\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Contact\"     = \"Platform Architects\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Transversal\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Owner\"       = \"Lead Platform\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Protected\"   = \"true\"\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m resource_query {\r\n          \u001b[32m+\u001b[0m\u001b[0m query = jsonencode(\r\n                {\r\n                  \u001b[32m+\u001b[0m\u001b[0m ResourceTypeFilters = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m \"AWS::AllSupported\",\r\n                    ]\r\n                  \u001b[32m+\u001b[0m\u001b[0m TagFilters          = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m {\r\n                          \u001b[32m+\u001b[0m\u001b[0m Key    = \"Project\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m Values = [\r\n                              \u001b[32m+\u001b[0m\u001b[0m \"terragrunt-ecs-blueprint\",\r\n                            ]\r\n                        },\r\n                    ]\r\n                }\r\n            )\r\n          \u001b[32m+\u001b[0m\u001b[0m type  = \"TAG_FILTERS_1_0\"\r\n        }\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 1 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m resource_group_arn     = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n\u001b[90m\r\n─────────────────────────────────────────────────────────────────────────────\u001b[0m\r\n\r\nNote: You didn't use the -out option to save this plan, so Terraform can't\r\nguarantee to take exactly these actions if you run \"terraform apply\" now.\r\n"]
[40.671664, "o", "Releasing state lock. This may take a few moments...\r\n"]
[40.970206, "o", "\u001b[0m\u001b[1mmodule.cluster.data.aws_partition.current: Reading...\u001b[0m\u001b[0m\r\n"]
[40.970712, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Reading...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1mdata.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Reading...\u001b[0m\u001b[0m\r\n"]
[40.971407, "o", "\u001b[0m\u001b[1mmodule.cluster.data.aws_partition.current: Read complete after 0s [id=aws]\u001b[0m\r\n"]
[40.97289, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Read complete after 0s [id=1021377347]\u001b[0m\r\n"]
[40.973183, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Read complete after 0s [id=2053943846]\u001b[0m\r\n"]
[41.10538, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # module.cluster.aws_cloudwatch_log_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_cloudwatch_log_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name              = \"/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m retention_in_days = 90\r\n      \u001b[32m+\u001b[0m\u001b[0m skip_destroy      = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all          = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # module.cluster.aws_ecs_cluster.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_ecs_cluster\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name     = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags     = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m configuration {\r\n          \u001b[32m+\u001b[0m\u001b[0m execute_command_configuration {\r\n              \u001b[32m+\u001b[0m\u001b[0m logging = \"DEFAULT\"\r\n            }\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m setting {\r\n          \u001b[32m+\u001b[0m\u001b[0m name  = \"containerInsights\"\r\n          \u001b[32m+\u001b[0m\u001b[0m value = \"enabled\"\r\n        }\r\n    }\r\n"]
[41.105645, "o", "\r\n\u001b[1m  # module.cluster.aws_ecs_cluster_capacity_providers.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_ecs_cluster_capacity_providers\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m capacity_providers = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"FARGATE\",\r\n          \u001b[32m+\u001b[0m\u001b[0m \"FARGATE_SPOT\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m cluster_name       = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id                 = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m default_capacity_provider_strategy {\r\n          \u001b[32m+\u001b[0m\u001b[0m base              = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m capacity_provider = \"FARGATE\"\r\n          \u001b[32m+\u001b[0m\u001b[0m weight            = 50\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m default_capacity_provider_strategy {\r\n          \u001b[32m+\u001b[0m\u001b[0m base              = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m capacity_provider = \"FARGATE_SPOT\"\r\n          \u001b[32m+\u001b[0m\u001b[0m weight            = 50\r\n        }\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 3 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m autoscaling_capacity_providers = {}\r\n  \u001b[32m+\u001b[0m\u001b[0m cloudwatch_log_group_arn       = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m cloudwatch_log_group_name      = \"/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\n  \u001b[32m+\u001b[0m\u001b[0m cluster_arn                    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m cluster_capacity_providers     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m cluster_id                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m cluster_name                   = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n  \u001b[32m+\u001b[0m\u001b[0m services                       = {}\r\n\u001b[90m\r\n─────────────────────────────────────────────────────────────────────────────\u001b[0m\r\n\r\nNote: You didn't use the -out option to save this plan, so Terraform can't\r\nguarantee to take exactly these actions if you run \"terraform apply\" now.\r\n"]
[41.11834, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # aws_cloudwatch_log_group.flow_log[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_cloudwatch_log_group\" \"flow_log\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name              = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m retention_in_days = 0\r\n      \u001b[32m+\u001b[0m\u001b[0m skip_destroy      = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all          = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_db_subnet_group.database[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_db_subnet_group\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description             = \"Database subnet group for terragrunt-ecs-blueprint-dev-vpc\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                    = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_ids              = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m supported_network_types = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                  = (known after apply)\r\n    }\r\n"]
[41.118641, "o", "\r\n\u001b[1m  # aws_default_network_acl.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_default_network_acl\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m egress {\r\n          \u001b[32m+\u001b[0m\u001b[0m action          = \"allow\"\r\n          \u001b[32m+\u001b[0m\u001b[0m from_port       = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block = \"::/0\"\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol        = \"-1\"\r\n          \u001b[32m+\u001b[0m\u001b[0m rule_no         = 101\r\n          \u001b[32m+\u001b[0m\u001b[0m to_port         = 0\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m egress {\r\n          \u001b[32m+\u001b[0m\u001b[0m action     = \"allow\"\r\n          \u001b[32m+\u001b[0m\u001b[0m cidr_block = \"0.0.0.0/0\"\r\n          \u001b[32m+\u001b[0m\u001b[0m from_port  = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol   = \"-1\"\r\n          \u001b[32m+\u001b[0m\u001b[0m rule_no    = 100\r\n          \u001b[32m+\u001b[0m\u001b[0m to_port    = 0\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress {\r\n          \u001b[32m+\u001b[0m\u001b[0m action          = \"allow\"\r\n          \u001b[32m+\u001b[0m\u001b[0m from_port       = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block = \"::/0\"\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol        = \"-1\"\r\n          \u001b[32m+\u001b[0m\u001b[0m rule_no         = 101\r\n          \u001b[32m+\u001b[0m\u001b[0m to_port         = 0\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress {\r\n          \u001b[32m+\u001b[0m\u001b[0m action     = \"allow\"\r\n          \u001b[32m+\u001b[0m\u001b[0m cidr_block = \"0.0.0.0/0\"\r\n          \u001b[32m+\u001b[0m\u001b[0m from_port  = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol   = \"-1\"\r\n          \u001b[32m+\u001b[0m\u001b[0m rule_no    = 100\r\n          \u001b[32m+\u001b[0m\u001b[0m to_port    = 0\r\n        }\r\n    }\r\n"]
[41.1188, "o", "\r\n\u001b[1m  # aws_default_route_table.default[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_default_route_table\" \"default\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"5m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m update = \"5m\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_default_security_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_default_security_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_flow_log.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_flow_log\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m iam_role_arn             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m log_destination          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m log_destination_type     = \"cloud-watch-logs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m log_format               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m log_group_name           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_aggregation_interval = 600\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                     = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                 = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m traffic_type             = \"ALL\"\r\n"]
[41.119033, "o", "      \u001b[32m+\u001b[0m\u001b[0m vpc_id                   = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_iam_policy.vpc_flow_log_cloudwatch[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_policy\" \"vpc_flow_log_cloudwatch\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix = \"vpc-flow-log-to-cloudwatch-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path        = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m policy      = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = [\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:PutLogEvents\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:DescribeLogStreams\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:DescribeLogGroups\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:CreateLogStream\",\r\n                        ]\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"AWSVPCFlowLogsPushToCloudWatch\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags        = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_iam_role.vpc_flow_log_cloudwatch[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role\" \"vpc_flow_log_cloudwatch\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assume_role_policy    = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action    = \"sts:AssumeRole\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect    = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Principal = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m Service = \"vpc-flow-logs.amazonaws.com\"\r\n                        }\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid       = \"AWSVPCFlowLogsAssumeRole\""]
[41.11921, "o", "\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m create_date           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m force_detach_policies = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m managed_policy_arns   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_session_duration  = 3600\r\n      \u001b[32m+\u001b[0m\u001b[0m name                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix           = \"vpc-flow-log-role-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path                  = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                  = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m unique_id             = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role_policy_attachment\" \"vpc_flow_log_cloudwatch\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_arn = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m role       = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_internet_gateway.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_internet_gateway\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags     = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id   = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route.public_internet_gateway[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route\" \"public_internet_gateway\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m destination_cidr_block = \"0.0.0.0/0\"\r\n      \u001b[32m+\u001b[0m\u001b[0m gateway_id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m instance_id            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m instance_owner_id      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m network_interface_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m origin                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m state                  = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"5m\"\r\n        }\r\n    }\r\n"]
[41.119449, "o", "\r\n\u001b[1m  # aws_route_table.private[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn              = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m propagating_vgws = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags             = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all         = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id           = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table.public[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn              = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m propagating_vgws = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags             = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all         = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id           = (known after apply)\r\n    }\r\n"]
[41.119626, "o", "\r\n\u001b[1m  # aws_route_table_association.database[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.database[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.private[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.private[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.public[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.public[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n"]
[41.119732, "o", "\r\n\u001b[1m  # aws_subnet.database[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.5.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2a\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2a\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[41.119886, "o", "\r\n\u001b[1m  # aws_subnet.database[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2b\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.6.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2b\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2b\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[41.120039, "o", "\r\n\u001b[1m  # aws_subnet.private[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.3.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2a\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2a\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[41.120229, "o", "\r\n\u001b[1m  # aws_subnet.private[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2b\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.4.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2b\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2b\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[41.120374, "o", "\r\n\u001b[1m  # aws_subnet.public[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.1.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = true\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2a\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2a\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[41.12046, "o", "\r\n\u001b[1m  # aws_subnet.public[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2b\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.2.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = true\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2b\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2b\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[41.120791, "o", "\r\n\u001b[1m  # aws_vpc.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_vpc\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                           = \"10.10.0.0/16\"\r\n      \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m default_security_group_id            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m dhcp_options_id                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns_hostnames                 = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns_support                   = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_network_address_usage_metrics = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m instance_tenancy                     = \"default\"\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_association_id                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_network_border_group = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m main_route_table_id                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                 = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                             = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 26 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m azs                                         = [\r\n      \u001b[32m+\u001b[0m\u001b[0m \"us-east-2a\",\r\n      \u001b[32m+\u001b[0m\u001b[0m \"us-east-2b\",\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m cgw_arns                                    = []\r\n  \u001b[32m+\u001b[0m\u001b[0m cgw_ids                                     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m database_nat_gateway_route_ids              = []\r\n  \u001b[32m+\u001b[0m\u001b[0m database_route_table_association_ids        = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m database_route_table_ids                    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnet_arns                        = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnet_group                       = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnet_group_name                  = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnets                            = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnets_cidr_blocks                = [\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.5.0/24\",\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.6.0/24\",\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnets_ipv6_cidr_blocks           = []\r\n  \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id                      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m default_route_table_id                      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m default_security_group_id                   = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_route_table_association_ids     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_route_table_ids                 = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_subnet_arns                     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_subnets                         = []\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_subnets_cidr_blocks             = []\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_subnets_ipv6_cidr_blocks   "]
[41.12103, "o", "     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m igw_arn                                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m igw_id                                      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_route_table_association_ids           = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_route_table_ids                       = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_subnet_arns                           = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_subnets                               = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_subnets_cidr_blocks                   = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_subnets_ipv6_cidr_blocks              = []\r\n  \u001b[32m+\u001b[0m\u001b[0m name                                        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n  \u001b[32m+\u001b[0m\u001b[0m nat_ids                                     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m nat_public_ips                              = []\r\n  \u001b[32m+\u001b[0m\u001b[0m natgw_ids                                   = []\r\n  \u001b[32m+\u001b[0m\u001b[0m outpost_subnet_arns                         = []\r\n  \u001b[32m+\u001b[0m\u001b[0m outpost_subnets                             = []\r\n  \u001b[32m+\u001b[0m\u001b[0m outpost_subnets_cidr_blocks                 = []\r\n  \u001b[32m+\u001b[0m\u001b[0m outpost_subnets_ipv6_cidr_blocks            = []\r\n  \u001b[32m+\u001b[0m\u001b[0m private_ipv6_egress_route_ids               = []\r\n  \u001b[32m+\u001b[0m\u001b[0m private_nat_gateway_route_ids               = []\r\n  \u001b[32m+\u001b[0m\u001b[0m private_route_table_association_ids         = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_route_table_ids                     = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_subnet_arns                         = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_subnets                             = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_subnets_cidr_blocks                 = [\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.3.0/24\",\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.4.0/24\",\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_subnets_ipv6_cidr_blocks            = []\r\n  \u001b[32m+\u001b[0m\u001b[0m public_internet_gateway_route_id            = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m public_route_table_association_ids          = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_route_table_ids                      = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_subnet_arns                          = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_subnets                              = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_subnets_cidr_blocks                  = [\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.1.0/24\",\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.2.0/24\",\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_subnets_ipv6_cidr_blocks             = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_public_route_table_association_ids = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_route_table_association_ids        = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_route_table_ids                    = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_subnet_arns                        = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_subnets                            = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_subnets_cidr_blocks                = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_subnets_ipv6_cidr_blocks           = []\r\n  \u001b[32m+\u001b[0m\u001b[0m this_customer_gateway                       = {}\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_arn                                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_cidr_block                              = \"10.10.0.0/16\"\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_enable_dns_hostnames                    = true\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_enable_dns_support                      = true\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_flow_log_cloudwatch_iam_role_arn        = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_flow_log_destination_arn                = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_flow_log_destination_type          "]
[41.121081, "o", "     = \"cloud-watch-logs\"\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_flow_log_id                             = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_id                                      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_instance_tenancy                        = \"default\"\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_ipv6_association_id                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_ipv6_cidr_block                         = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_main_route_table_id                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_owner_id                                = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_secondary_cidr_blocks                   = []\r\n\u001b[90m\r\n─────────────────────────────────────────────────────────────────────────────\u001b[0m\r\n\r\nNote: You didn't use the -out option to save this plan, so Terraform can't\r\nguarantee to take exactly these actions if you run \"terraform apply\" now.\r\n"]
[41.506062, "o", "Releasing state lock. This may take a few moments...\r\n"]
[41.521233, "o", "Releasing state lock. This may take a few moments...\r\n"]
[42.173871, "o", "time=2023-08-07T10:41:53-05:00 level=warning msg=No double-slash (//) found in source URL /terraform-aws-modules/vpc/aws. Relative paths in downloaded Terraform code may not work. prefix=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC] \r\n"]
[45.030128, "o", "\u001b[33mWARN\u001b[0m[0020] No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB] \r\n"]
[47.545581, "o", "\r\n\u001b[0m\u001b[1mInitializing the backend...\u001b[0m\r\n"]
[49.06759, "o", "\u001b[0m\u001b[32m\r\nSuccessfully configured the backend \"s3\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\u001b[0m\r\n"]
[50.576816, "o", "\r\n\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m\r\n- Reusing previous version of hashicorp/aws from the dependency lock file\r\n"]
[51.632509, "o", "- Using hashicorp/aws v5.9.0 from the shared cache directory\r\n"]
[53.045985, "o", "\r\n\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m\r\n\u001b[0m\u001b[32m\r\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\r\nany changes that are required for your infrastructure. All Terraform commands\r\nshould now work.\r\n\r\nIf you ever set or change modules or backend configuration for Terraform,\r\nrerun this command to reinitialize your working directory. If you forget, other\r\ncommands will detect it and remind you to do so if necessary.\u001b[0m\r\n"]
[55.480144, "o", "Acquiring state lock. This may take a few moments...\r\n"]
[59.455238, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # aws_security_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description            = \"Security group for service with HTTP ports open for ALB\"\r\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                   = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = \"vpc-04e3e1e302f8c8f06\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"10m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m delete = \"15m\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_security_group_rule.egress_with_cidr_blocks[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"egress_with_cidr_blocks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_blocks              = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Egress Rule\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 0\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 65535\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"egress\"\r\n    }\r\n"]
[59.455474, "o", "\r\n\u001b[1m  # aws_security_group_rule.ingress_with_cidr_blocks[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"ingress_with_cidr_blocks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_blocks              = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Service ports (ipv4). All\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"ingress\"\r\n    }\r\n\r\n\u001b[1m  # aws_security_group_rule.ingress_with_cidr_blocks[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"ingress_with_cidr_blocks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_blocks              = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Service ports (ipv4). All\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 443\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 443\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"ingress\"\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 4 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_arn         = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_description = \"Security group for service with HTTP ports open for ALB\"\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_id          = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_name        = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_owner_id    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_vpc_id      = \"vpc-04e3e1e302f8c8f06\"\r\n\u001b[90m\r\n─────────────────────────────────────────────────────────────────────────────\u001b[0m\r\n\r\nNote: You didn't use the -out option to save this plan, so Terraform can't\r\nguarantee to take exactly these actions if you run \"terraform apply\" now.\r\n"]
[59.856597, "o", "Releasing state lock. This may take a few moments...\r\n"]
[60.531979, "o", "time=2023-08-07T10:42:11-05:00 level=warning msg=No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work. prefix=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB] \r\n"]
[63.453915, "o", "\u001b[33mWARN\u001b[0m[0039] No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ECS/SampleService] \r\n"]
[63.454295, "o", "\u001b[33mWARN\u001b[0m[0039] No double-slash (//) found in source URL /terraform-aws-modules/alb/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB] \r\n"]
[65.982108, "o", "\r\n\u001b[0m\u001b[1mInitializing the backend...\u001b[0m\r\n"]
[66.314414, "o", "\r\n\u001b[0m\u001b[1mInitializing the backend...\u001b[0m\r\n"]
[67.310846, "o", "\u001b[0m\u001b[32m\r\nSuccessfully configured the backend \"s3\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\u001b[0m\r\n"]
[67.628271, "o", "\u001b[0m\u001b[32m\r\nSuccessfully configured the backend \"s3\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\u001b[0m\r\n"]
[68.48396, "o", "\r\n\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m\r\n- Reusing previous version of hashicorp/aws from the dependency lock file\r\n"]
[68.786025, "o", "\r\n\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m\r\n- Reusing previous version of hashicorp/aws from the dependency lock file\r\n"]
[69.386455, "o", "- Using hashicorp/aws v5.11.0 from the shared cache directory\r\n"]
[69.695093, "o", "- Using hashicorp/aws v5.9.0 from the shared cache directory\r\n"]
[70.940575, "o", "\r\n\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m\r\n\u001b[0m\u001b[32m\r\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\r\nany changes that are required for your infrastructure. All Terraform commands\r\nshould now work.\r\n\r\nIf you ever set or change modules or backend configuration for Terraform,\r\nrerun this command to reinitialize your working directory. If you forget, other\r\ncommands will detect it and remind you to do so if necessary.\u001b[0m\r\n"]
[71.131427, "o", "\r\n\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m\r\n\u001b[0m\u001b[32m\r\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\r\nany changes that are required for your infrastructure. All Terraform commands\r\nshould now work.\r\n\r\nIf you ever set or change modules or backend configuration for Terraform,\r\nrerun this command to reinitialize your working directory. If you forget, other\r\ncommands will detect it and remind you to do so if necessary.\u001b[0m\r\n"]
[73.529877, "o", "Acquiring state lock. This may take a few moments...\r\n"]
[77.843351, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # aws_security_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description            = \"Security group for service with HTTP ports open for ALB\"\r\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                   = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = \"vpc-04e3e1e302f8c8f06\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"10m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m delete = \"15m\"\r\n        }\r\n    }\r\n"]
[77.843906, "o", "\r\n\u001b[1m  # aws_security_group_rule.egress_with_cidr_blocks[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"egress_with_cidr_blocks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_blocks              = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Egress Rule\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 0\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 65535\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"egress\"\r\n    }\r\n"]
[77.84432, "o", "\r\n\u001b[1m  # aws_security_group_rule.ingress_with_source_security_group_id[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"ingress_with_source_security_group_id\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Security Groups for inbound traffic to service\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = \"sg-0417d4404d84892fa\"\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"ingress\"\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 3 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_arn         = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_description = \"Security group for service with HTTP ports open for ALB\"\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_id          = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_name        = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_owner_id    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_vpc_id      = \"vpc-04e3e1e302f8c8f06\"\r\n\u001b[90m\r\n─────────────────────────────────────────────────────────────────────────────\u001b[0m\r\n\r\nNote: You didn't use the -out option to save this plan, so Terraform can't\r\nguarantee to take exactly these actions if you run \"terraform apply\" now.\r\n"]
[77.860272, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # aws_lb.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_lb\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn_suffix                                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m desync_mitigation_mode                      = \"defensive\"\r\n      \u001b[32m+\u001b[0m\u001b[0m dns_name                                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m drop_invalid_header_fields                  = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_deletion_protection                  = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_http2                                = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_tls_version_and_cipher_suite_headers = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_waf_fail_open                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_xff_client_port                      = true\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m idle_timeout                                = 60\r\n      \u001b[32m+\u001b[0m\u001b[0m internal                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m ip_address_type                             = \"ipv4\"\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancer_type                          = \"application\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name                                        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n      \u001b[32m+\u001b[0m\u001b[0m preserve_host_header                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m security_groups                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnets                                     = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"subnet-0f37739f11ebd1234\",\r\n          \u001b[32m+\u001b[0m\u001b[0m \"subnet-0f37739f11ebd1235\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                        = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m xff_header_processing_mode                  = \"append\"\r\n      \u001b[32m+\u001b[0m\u001b[0m zone_id                                     = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"10m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m delete = \"10m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m update = \"10m\"\r\n        }\r\n    }\r\n"]
[77.860706, "o", "\r\n\u001b[1m  # aws_lb_listener.frontend_http_tcp[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_lb_listener\" \"frontend_http_tcp\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancer_arn = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m port              = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol          = \"HTTP\"\r\n      \u001b[32m+\u001b[0m\u001b[0m ssl_policy        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all          = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m default_action {\r\n          \u001b[32m+\u001b[0m\u001b[0m order            = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m target_group_arn = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m type             = \"forward\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_lb_target_group.main[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_lb_target_group\" \"main\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn_suffix                         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m connection_termination             = false\r\n      \u001b[32m+\u001b[0m\u001b[0m deregistration_delay               = \"10\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ip_address_type                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m lambda_multi_value_headers_enabled = false\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancing_algorithm_type      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancing_cross_zone_enabled  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix                        = \"demo-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m port                               = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m preserve_client_ip                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                           = \"HTTP\"\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol_version                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m proxy_protocol_v2                  = false\r\n      \u001b[32m+\u001b[0m\u001b[0m slow_start                         = 0\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"demo-\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"demo-\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m target_type                        = \"ip\"\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                             = \"vpc-04e3e1e302f8c8f06\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m health_check {\r\n          \u001b[32m+\u001b[0m\u001b[0m enabled             = true\r\n          \u001b[32m+\u001b[0m\u001b[0m healthy_threshold   = 5\r\n          \u001b[32m+\u001b[0m\u001b[0m interval            = 30\r\n          \u001b[32m+\u001b[0m\u001b[0m matcher             = \"200-399\"\r\n          \u001b[32m+\u001b[0m\u001b[0m path                = \"/\"\r\n          \u001b[32m+\u001b[0m\u001b[0m port                = \"traffic-port\"\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol            = \"HTTP\"\r\n          \u001b[32m+\u001b[0m\u001b[0m timeout             = 10\r\n          \u001b[32m+\u001b[0m\u001b[0m unhealthy_threshold = 5\r\n        }\r\n    }\r\n"]
[77.860908, "o", "\r\n\u001b[1m  # aws_security_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description            = \"Managed by Terraform\"\r\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = \"terragrunt-ecs-blueprint-dev-alb-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = \"vpc-04e3e1e302f8c8f06\"\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 4 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m http_tcp_listener_arns    = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m http_tcp_listener_ids     = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m https_listener_arns       = []\r\n  \u001b[32m+\u001b[0m\u001b[0m https_listener_ids        = []\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_arn                    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_arn_suffix             = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_dns_name               = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_id                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_zone_id                = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_arn        = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_id         = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m target_group_arn_suffixes = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m target_group_arns         = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m target_group_attachments  = {}\r\n  \u001b[32m+\u001b[0m\u001b[0m target_group_names        = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n\u001b[90m\r\n─────────────────────────────────────────────────────────────────────────────\u001b[0m\r\n\r\nNote: You didn't use the -out option to save this plan, so Terraform can't\r\nguarantee to take exactly these actions if you run \"terraform apply\" now.\r\n"]
[78.244469, "o", "Releasing state lock. This may take a few moments...\r\n"]
[78.261418, "o", "Releasing state lock. This may take a few moments...\r\n"]
[79.083793, "o", "time=2023-08-07T10:42:30-05:00 level=warning msg=No double-slash (//) found in source URL /terraform-aws-modules/ecs/aws. Relative paths in downloaded Terraform code may not work. prefix=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster] \r\n"]
[79.092026, "o", "time=2023-08-07T10:42:30-05:00 level=warning msg=No double-slash (//) found in source URL /terraform-aws-modules/alb/aws. Relative paths in downloaded Terraform code may not work. prefix=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB] \r\n"]
[85.642073, "o", "\r\n\u001b[0m\u001b[1mInitializing the backend...\u001b[0m\r\n"]
[87.073699, "o", "\u001b[0m\u001b[32m\r\nSuccessfully configured the backend \"s3\"! Terraform will automatically\r\nuse this backend unless the backend configuration changes.\u001b[0m\r\n"]
[88.35716, "o", "\u001b[0m\u001b[1mInitializing modules...\u001b[0m\r\n"]
[88.360707, "o", "- container_definition in ../container-definition\r\n"]
[88.362168, "o", "\r\n\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m\r\n- Reusing previous version of hashicorp/aws from the dependency lock file\r\n"]
[89.596032, "o", "- Using hashicorp/aws v5.11.0 from the shared cache directory\r\n"]
[91.064682, "o", "\r\n\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m\r\n\u001b[0m\u001b[32m\r\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\r\nany changes that are required for your infrastructure. All Terraform commands\r\nshould now work.\r\n\r\nIf you ever set or change modules or backend configuration for Terraform,\r\nrerun this command to reinitialize your working directory. If you forget, other\r\ncommands will detect it and remind you to do so if necessary.\u001b[0m\r\n"]
[93.539575, "o", "Acquiring state lock. This may take a few moments...\r\n"]
[97.799266, "o", "\u001b[0m\u001b[1mdata.aws_caller_identity.current: Reading...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1mmodule.container_definition[\"ecs-sample\"].data.aws_region.current: Reading...\u001b[0m\u001b[0m\r\n"]
[97.799833, "o", "\u001b[0m\u001b[1mdata.aws_partition.current: Reading...\u001b[0m\u001b[0m\r\n"]
[97.800185, "o", "\u001b[0m\u001b[1mdata.aws_region.current: Reading...\u001b[0m\u001b[0m\r\n"]
[97.800299, "o", "\u001b[0m\u001b[1mmodule.container_definition[\"ecs-sample\"].data.aws_region.current: Read complete after 0s [id=us-east-2]\u001b[0m\r\n"]
[97.800711, "o", "\u001b[0m\u001b[1mdata.aws_partition.current: Read complete after 0s [id=aws]\u001b[0m"]
[97.80099, "o", "\r\n\u001b[0m\u001b[1mdata.aws_iam_policy_document.task_exec[0]: Reading...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1mdata.aws_region.current: Read complete after 0s [id=us-east-2]\u001b[0m\r\n"]
[97.804614, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.task_exec_assume[0]: Reading...\u001b[0m\u001b[0m\r\n"]
[97.804753, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.task_exec[0]: Read complete after 0s [id=1415633931]\u001b[0m\r\n"]
[97.805839, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.task_exec_assume[0]: Read complete after 0s [id=2291109037]\u001b[0m\r\n"]
[98.139039, "o", "\u001b[0m\u001b[1mdata.aws_caller_identity.current: Read complete after 1s [id=123456789012]\u001b[0m\r\n"]
[98.140858, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.tasks_assume[0]: Reading...\u001b[0m\u001b[0m\r\n"]
[98.142199, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.tasks_assume[0]: Read complete after 0s [id=2015757145]\u001b[0m\r\n"]
[98.224478, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n \u001b[36m<=\u001b[0m read (data resources)\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # data.aws_ecs_task_definition.this[0]\u001b[0m will be read during apply\r\n  # (depends on a resource or a module with changes pending)\r\n\u001b[0m \u001b[36m<=\u001b[0m\u001b[0m data \"aws_ecs_task_definition\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn_without_revision = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m execution_role_arn   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m family               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m network_mode         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revision             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m status               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m task_definition      = \"sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m task_role_arn        = (known after apply)\r\n    }\r\n"]
[98.224753, "o", "\r\n\u001b[1m  # aws_appautoscaling_policy.this[\"cpu\"]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_appautoscaling_policy\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m alarm_arns         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name               = \"cpu\"\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_type        = \"TargetTrackingScaling\"\r\n      \u001b[32m+\u001b[0m\u001b[0m resource_id        = \"service/panther-web-cluster/sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m scalable_dimension = \"ecs:service:DesiredCount\"\r\n      \u001b[32m+\u001b[0m\u001b[0m service_namespace  = \"ecs\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m target_tracking_scaling_policy_configuration {\r\n          \u001b[32m+\u001b[0m\u001b[0m disable_scale_in   = false\r\n          \u001b[32m+\u001b[0m\u001b[0m scale_in_cooldown  = 300\r\n          \u001b[32m+\u001b[0m\u001b[0m scale_out_cooldown = 60\r\n          \u001b[32m+\u001b[0m\u001b[0m target_value       = 75\r\n\r\n          \u001b[32m+\u001b[0m\u001b[0m predefined_metric_specification {\r\n              \u001b[32m+\u001b[0m\u001b[0m predefined_metric_type = \"ECSServiceAverageCPUUtilization\"\r\n            }\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_appautoscaling_policy.this[\"memory\"]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_appautoscaling_policy\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m alarm_arns         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name               = \"memory\"\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_type        = \"TargetTrackingScaling\"\r\n      \u001b[32m+\u001b[0m\u001b[0m resource_id        = \"service/panther-web-cluster/sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m scalable_dimension = \"ecs:service:DesiredCount\"\r\n      \u001b[32m+\u001b[0m\u001b[0m service_namespace  = \"ecs\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m target_tracking_scaling_policy_configuration {\r\n          \u001b[32m+\u001b[0m\u001b[0m disable_scale_in   = false\r\n          \u001b[32m+\u001b[0m\u001b[0m scale_in_cooldown  = 300\r\n          \u001b[32m+\u001b[0m\u001b[0m scale_out_cooldown = 60\r\n          \u001b[32m+\u001b[0m\u001b[0m target_value       = 75\r\n\r\n          \u001b[32m+\u001b[0m\u001b[0m predefined_metric_specification {\r\n              \u001b[32m+\u001b[0m\u001b[0m predefined_metric_type = \"ECSServiceAverageMemoryUtilization\"\r\n            }\r\n        }\r\n    }\r\n"]
[98.224854, "o", "\r\n\u001b[1m  # aws_appautoscaling_target.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_appautoscaling_target\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_capacity       = 10\r\n      \u001b[32m+\u001b[0m\u001b[0m min_capacity       = 1\r\n      \u001b[32m+\u001b[0m\u001b[0m resource_id        = \"service/panther-web-cluster/sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m role_arn           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m scalable_dimension = \"ecs:service:DesiredCount\"\r\n      \u001b[32m+\u001b[0m\u001b[0m service_namespace  = \"ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\" = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"  = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"    = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n"]
[98.225185, "o", "\r\n\u001b[1m  # aws_ecs_service.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_ecs_service\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cluster                            = \"arn:aws:ecs:us-east-1:123456789012:cluster/panther-web-cluster\"\r\n      \u001b[32m+\u001b[0m\u001b[0m deployment_maximum_percent         = 200\r\n      \u001b[32m+\u001b[0m\u001b[0m deployment_minimum_healthy_percent = 66\r\n      \u001b[32m+\u001b[0m\u001b[0m desired_count                      = 1\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_ecs_managed_tags            = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_execute_command             = false\r\n      \u001b[32m+\u001b[0m\u001b[0m force_new_deployment               = true\r\n      \u001b[32m+\u001b[0m\u001b[0m iam_role                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m launch_type                        = \"FARGATE\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name                               = \"sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m platform_version                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m scheduling_strategy                = \"REPLICA\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m task_definition                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m triggers                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m wait_for_steady_state              = false\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancer {\r\n          \u001b[32m+\u001b[0m\u001b[0m container_name   = \"ecs-sample\"\r\n          \u001b[32m+\u001b[0m\u001b[0m container_port   = 80\r\n          \u001b[32m+\u001b[0m\u001b[0m target_group_arn = \"arn:aws:elasticloadbalancing:eu-west-1:123456789012:targetgroup/bluegreentarget1/209a844cd01825a4\"\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m network_configuration {\r\n          \u001b[32m+\u001b[0m\u001b[0m assign_public_ip = true\r\n          \u001b[32m+\u001b[0m\u001b[0m subnets          = [\r\n              \u001b[32m+\u001b[0m\u001b[0m \"subnet-0d5061f70b69eda14\",\r\n              \u001b[32m+\u001b[0m\u001b[0m \"subnet-0e4c5aedfc2101502\",\r\n            ]\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {}\r\n    }\r\n"]
[98.225668, "o", "\r\n\u001b[1m  # aws_ecs_task_definition.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_ecs_task_definition\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn_without_revision     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m container_definitions    = jsonencode(\r\n            [\r\n              \u001b[32m+\u001b[0m\u001b[0m {\r\n                  \u001b[32m+\u001b[0m\u001b[0m cpu                    = 256\r\n                  \u001b[32m+\u001b[0m\u001b[0m essential              = true\r\n                  \u001b[32m+\u001b[0m\u001b[0m image                  = \"public.ecr.aws/ecs-sample-image/amazon-ecs-sample:latest\"\r\n                  \u001b[32m+\u001b[0m\u001b[0m interactive            = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m logConfiguration       = {\r\n                      \u001b[32m+\u001b[0m\u001b[0m logDriver = \"awslogs\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m options   = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m awslogs-create-group  = \"true\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m awslogs-group         = \"amazon-ecs-sample\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m awslogs-region        = \"us-east-2\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m awslogs-stream-prefix = \"sample\"\r\n                        }\r\n                    }\r\n                  \u001b[32m+\u001b[0m\u001b[0m memory                 = 512\r\n                  \u001b[32m+\u001b[0m\u001b[0m name                   = \"ecs-sample\"\r\n                  \u001b[32m+\u001b[0m\u001b[0m portMappings           = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m {\r\n                          \u001b[32m+\u001b[0m\u001b[0m containerPort = 80\r\n                          \u001b[32m+\u001b[0m\u001b[0m name          = \"ecs-sample\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m protocol      = \"tcp\"\r\n                        },\r\n                    ]\r\n                  \u001b[32m+\u001b[0m\u001b[0m privileged             = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m pseudoTerminal         = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m readonlyRootFilesystem = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m startTimeout           = 30\r\n                  \u001b[32m+\u001b[0m\u001b[0m stopTimeout            = 120\r\n                },\r\n            ]\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m cpu                      = \"256\"\r\n      \u001b[32m+\u001b[0m\u001b[0m execution_role_arn       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m family                   = \"sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m memory                   = \"512\"\r\n      \u001b[32m+\u001b[0m\u001b[0m network_mode             = \"awsvpc\"\r\n      \u001b[32m+\u001b[0m\u001b[0m requires_compatibilities = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"FARGATE\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m revision                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m skip_destroy             = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                     = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                 = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m task_role_arn            = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m runtime_platform {\r\n          \u001b[32m+\u001b[0m\u001b[0m cpu_architecture        = \"X86_64\"\r\n          \u001b[32m+\u001b[0m\u001b[0m operating_system_family = \"LINUX\"\r\n        }\r\n    }\r\n"]
[98.226047, "o", "\r\n\u001b[1m  # aws_iam_policy.task_exec[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_policy\" \"task_exec\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description = \"Task execution role IAM policy\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix = \"dev-terragrunt-ecs-blueprint-ecs-role-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path        = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m policy      = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = [\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:PutLogEvents\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:CreateLogStream\",\r\n                        ]\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"Logs\"\r\n                    },\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = [\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"ecr:GetDownloadUrlForLayer\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"ecr:GetAuthorizationToken\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"ecr:BatchGetImage\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"ecr:BatchCheckLayerAvailability\",\r\n                        ]\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"ECR\"\r\n                    },\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = \"ssm:GetParameters\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"arn:aws:ssm:*:*:parameter/*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"GetSSMParams\"\r\n                    },\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = \"secretsmanager:GetSecretValue\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"arn:aws:secretsmanager:*:*:secret:*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"GetSecrets\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags        = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n"]
[98.226304, "o", "\r\n\u001b[1m  # aws_iam_role.task_exec[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role\" \"task_exec\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assume_role_policy    = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action    = \"sts:AssumeRole\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect    = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Principal = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m Service = \"ecs-tasks.amazonaws.com\"\r\n                        }\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid       = \"ECSTaskExecutionAssumeRole\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m create_date           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description           = \"Task execution role for dev-terragrunt-ecs-blueprint-ecs-role\"\r\n      \u001b[32m+\u001b[0m\u001b[0m force_detach_policies = true\r\n      \u001b[32m+\u001b[0m\u001b[0m id                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m managed_policy_arns   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_session_duration  = 3600\r\n      \u001b[32m+\u001b[0m\u001b[0m name                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix           = \"dev-terragrunt-ecs-blueprint-ecs-role-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path                  = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                  = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m unique_id             = (known after apply)\r\n    }\r\n"]
[98.22669, "o", "\r\n\u001b[1m  # aws_iam_role.tasks[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role\" \"tasks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assume_role_policy    = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action    = \"sts:AssumeRole\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Condition = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m ArnLike      = {\r\n                              \u001b[32m+\u001b[0m\u001b[0m \"aws:SourceArn\" = \"arn:aws:ecs:us-east-2:123456789012:*\"\r\n                            }\r\n                          \u001b[32m+\u001b[0m\u001b[0m StringEquals = {\r\n                              \u001b[32m+\u001b[0m\u001b[0m \"aws:SourceAccount\" = \"123456789012\"\r\n                            }\r\n                        }\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect    = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Principal = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m Service = \"ecs-tasks.amazonaws.com\"\r\n                        }\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid       = \"ECSTasksAssumeRole\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m create_date           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m force_detach_policies = true\r\n      \u001b[32m+\u001b[0m\u001b[0m id                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m managed_policy_arns   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_session_duration  = 3600\r\n      \u001b[32m+\u001b[0m\u001b[0m name                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix           = \"sample-dev-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path                  = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                  = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m unique_id             = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_iam_role_policy_attachment.task_exec[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role_policy_attachment\" \"task_exec\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_arn = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m role       = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_iam_role_policy_attachment.task_exec_additional[\"logs_full\"]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role_policy_attachment\" \"task_exec_additional\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_arn = \"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\"\r\n      \u001b[32m+\u001b[0m\u001b[0m role       = (known after apply)\r\n    }\r\n"]
[98.226838, "o", "\r\n\u001b[1m  # module.container_definition[\"ecs-sample\"].aws_cloudwatch_log_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_cloudwatch_log_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name              = \"/aws/ecs/sample-dev/ecs-sample\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m retention_in_days = 14\r\n      \u001b[32m+\u001b[0m\u001b[0m skip_destroy      = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all          = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 11 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m autoscaling_policies          = {\r\n      \u001b[32m+\u001b[0m\u001b[0m cpu    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m alarm_arns                                   = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m arn                                          = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m id                                           = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m name                                         = \"cpu\"\r\n          \u001b[32m+\u001b[0m\u001b[0m policy_type                                  = \"TargetTrackingScaling\"\r\n          \u001b[32m+\u001b[0m\u001b[0m resource_id                                  = \"service/panther-web-cluster/sample-dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m scalable_dimension                           = \"ecs:service:DesiredCount\"\r\n          \u001b[32m+\u001b[0m\u001b[0m service_namespace                            = \"ecs\"\r\n          \u001b[32m+\u001b[0m\u001b[0m step_scaling_policy_configuration            = []\r\n          \u001b[32m+\u001b[0m\u001b[0m target_tracking_scaling_policy_configuration = [\r\n              \u001b[32m+\u001b[0m\u001b[0m {\r\n                  \u001b[32m+\u001b[0m\u001b[0m customized_metric_specification = []\r\n                  \u001b[32m+\u001b[0m\u001b[0m disable_scale_in                = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m predefined_metric_specification = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m {\r\n                          \u001b[32m+\u001b[0m\u001b[0m predefined_metric_type = \"ECSServiceAverageCPUUtilization\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m resource_label         = \u001b[90mnull\u001b[0m\u001b[0m\r\n                        },\r\n                    ]\r\n                  \u001b[32m+\u001b[0m\u001b[0m scale_in_cooldown               = 300\r\n                  \u001b[32m+\u001b[0m\u001b[0m scale_out_cooldown              = 60\r\n                  \u001b[32m+\u001b[0m\u001b[0m target_value                    = 75\r\n                },\r\n            ]\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m memory = {\r\n          \u001b[32m+\u001b[0m\u001b[0m alarm_arns                                   = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m arn                                          = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m id                                           = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m name                                         = \"memory\"\r\n          \u001b[32m+\u001b[0m\u001b[0m policy_type                                  = \"TargetTrackingScaling\"\r\n          \u001b[32m+\u001b[0m\u001b[0m resource_id                                  = \"service/panther-web-cluster/sample-dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m scalable_dimension                           = \"ecs:service:DesiredCount\"\r\n          \u001b[32m+\u001b[0m\u001b[0m service_namespace                            = \"ecs\"\r\n          \u001b[32m+\u001b[0m\u001b[0m step_scaling_policy_configuration            = []\r\n          \u001b[32m+\u001b[0m\u001b[0m target_tracking_scaling_policy_configuration = [\r\n              \u001b[32m+\u001b[0m\u001b[0m {\r\n                  \u001b[32m+\u001b[0m\u001b[0m customized_metric_specification = []\r\n                  \u001b[32m+\u001b[0m\u001b[0m disable_scale_in                = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m predefined_metric_specification = [\r\n                      \u001b[32m"]
[98.226971, "o", "+\u001b[0m\u001b[0m {\r\n                          \u001b[32m+\u001b[0m\u001b[0m predefined_metric_type = \"ECSServiceAverageMemoryUtilization\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m resource_label         = \u001b[90mnull\u001b[0m\u001b[0m\r\n                        },\r\n                    ]\r\n                  \u001b[32m+\u001b[0m\u001b[0m scale_in_cooldown               = 300\r\n                  \u001b[32m+\u001b[0m\u001b[0m scale_out_cooldown              = 60\r\n                  \u001b[32m+\u001b[0m\u001b[0m target_value                    = 75\r\n                },\r\n            ]\r\n        }\r\n    }\r\n  \u001b[32m+\u001b[0m\u001b[0m autoscaling_scheduled_actions = {}\r\n  \u001b[32m+\u001b[0m\u001b[0m container_definitions         = {\r\n      \u001b[32m+\u001b[0m\u001b[0m ecs-sample = {\r\n          \u001b[32m+\u001b[0m\u001b[0m cloudwatch_log_group_arn  = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m cloudwatch_log_group_name = \"/aws/ecs/sample-dev/ecs-sample\"\r\n          \u001b[32m+\u001b[0m\u001b[0m container_definition      = {\r\n              \u001b[32m+\u001b[0m\u001b[0m cpu                    = 256\r\n              \u001b[32m+\u001b[0m\u001b[0m essential              = true\r\n              \u001b[32m+\u001b[0m\u001b[0m image                  = \"public.ecr.aws/ecs-sample-image/amazon-ecs-sample:latest\"\r\n              \u001b[32m+\u001b[0m\u001b[0m interactive            = false\r\n              \u001b[32m+\u001b[0m\u001b[0m logConfiguration       = {\r\n                  \u001b[32m+\u001b[0m\u001b[0m logDriver = \"awslogs\"\r\n                  \u001b[32m+\u001b[0m\u001b[0m options   = {\r\n                      \u001b[32m+\u001b[0m\u001b[0m awslogs-create-group  = \"true\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m awslogs-group         = \"amazon-ecs-sample\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m awslogs-region        = \"us-east-2\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m awslogs-stream-prefix = \"sample\"\r\n                    }\r\n                }\r\n              \u001b[32m+\u001b[0m\u001b[0m memory                 = 512\r\n              \u001b[32m+\u001b[0m\u001b[0m name                   = \"ecs-sample\"\r\n              \u001b[32m+\u001b[0m\u001b[0m portMappings           = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m containerPort = 80\r\n                      \u001b[32m+\u001b[0m\u001b[0m name          = \"ecs-sample\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m protocol      = \"tcp\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m privileged             = false\r\n              \u001b[32m+\u001b[0m\u001b[0m pseudoTerminal         = false\r\n              \u001b[32m+\u001b[0m\u001b[0m readonlyRootFilesystem = false\r\n              \u001b[32m+\u001b[0m\u001b[0m startTimeout           = 30\r\n              \u001b[32m+\u001b[0m\u001b[0m stopTimeout            = 120\r\n            }\r\n        }\r\n    }\r\n  \u001b[32m+\u001b[0m\u001b[0m id                            = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m name                          = \"sample-dev\"\r\n  \u001b[32m+\u001b[0m\u001b[0m task_definition_arn           = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m task_definition_family        = \"sample-dev\"\r\n  \u001b[32m+\u001b[0m\u001b[0m task_definition_revision      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m task_exec_iam_role_arn        = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m task_exec_iam_role_name       = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m task_exec_iam_role_unique_id  = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m tasks_iam_role_arn            = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m tasks_iam_role_name           = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m tasks_iam_role_unique_id      = (known after apply)\r\n\u001b[90m\r\n─────────────────────────────────────────────────────────────────────────────\u001b[0m\r\n\r\nNote: You didn't use the -out option to save this plan, so Terraform can't\r\nguarantee to take exactly these actions if you run \"terraform apply\" now.\r\n"]
[98.628773, "o", "Releasing state lock. This may take a few moments...\r\n"]
[99.031913, "o", "\u001b[36mINFO\u001b[0m[0074] time=2023-08-07T10:42:30-05:00 level=warning msg=No double-slash (//) found in source URL /terraform-aws-modules/ecs/aws. Relative paths in downloaded Terraform code may not work. prefix=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster] \r\ntime=2023-08-07T10:42:30-05:00 level=warning msg=No double-slash (//) found in source URL /terraform-aws-modules/alb/aws. Relative paths in downloaded Terraform code may not work. prefix=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB]  \r\n\u001b[36mINFO\u001b[0m[0074] time=2023-08-07T10:41:53-05:00 level=warning msg=No double-slash (//) found in source URL /terraform-aws-modules/vpc/aws. Relative paths in downloaded Terraform code may not work. prefix=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC]  \r\n\u001b[36mINFO\u001b[0m[0074] time=2023-08-07T10:42:11-05:00 level=warning msg=No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work. prefix=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB]  \r\n"]
[99.033262, "o", "\u001b[?2004h\u001b]0;labvel@VelPro: ~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure\u0007\u001b[01;32mlabvel@VelPro\u001b[00m:\u001b[01;34m~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure\u001b[00m$ "]
[107.731052, "o", "TF_VAR_env=dev terragrunt run-all plan "]
[109.502943, "o", "\b\u001b[K"]
[109.655299, "o", "\b\u001b[K"]
[109.766751, "o", "\b\u001b[K"]
[109.897935, "o", "\b\u001b[K"]
[110.054731, "o", "\b\u001b[K"]
[111.338742, "o", "a"]
[111.654281, "o", "p"]
[111.810015, "o", "p"]
[111.989672, "o", "l"]
[112.396405, "o", "y"]
[112.530747, "o", " "]
[114.263509, "o", "\r\n"]
[114.263655, "o", "\u001b[?2004l\r"]
[114.511283, "o", "\u001b[36mINFO\u001b[0m[0000] The stack at /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure will be processed in the following order for command apply:\r\nGroup 1\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Operations/ResourceGroup\r\n\r\nGroup 2\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB\r\n\r\nGroup 3\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ECS/SampleService\r\n\r\nGroup 4\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSServices/SampleService\r\n \r\nAre you sure you want to run 'terragrunt apply' in each folder of the stack described above? (y/n) "]
[115.792831, "o", "y"]
[116.332591, "o", "\r\n"]
[116.471716, "o", "\u001b[33mWARN\u001b[0m[0002] No double-slash (//) found in source URL /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/modules/Resource_Groups. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Operations/ResourceGroup] \r\n"]
[116.472637, "o", "\u001b[33mWARN\u001b[0m[0002] No double-slash (//) found in source URL /terraform-aws-modules/ecs/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster] \r\n"]
[116.47494, "o", "\u001b[33mWARN\u001b[0m[0002] No double-slash (//) found in source URL /terraform-aws-modules/vpc/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC] \r\n"]
[120.829968, "o", "Acquiring state lock. This may take a few moments...\r\n"]
[126.122901, "o", "\u001b[0m\u001b[1mmodule.cluster.data.aws_partition.current: Reading...\u001b[0m\u001b[0m\r\n"]
[126.123662, "o", "\u001b[0m\u001b[1mmodule.cluster.data.aws_partition.current: Read complete after 0s [id=aws]\u001b[0m\r\n"]
[126.199412, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # aws_resourcegroups_group.resource_group[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_resourcegroups_group\" \"resource_group\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description = \"Resource group for terragrunt-ecs-blueprint  Resources for dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name        = \"terragrunt-ecs-blueprint-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags        = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Contact\"     = \"Platform Architects\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Transversal\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Owner\"       = \"Lead Platform\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Protected\"   = \"true\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Contact\"     = \"Platform Architects\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Transversal\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Owner\"       = \"Lead Platform\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Protected\"   = \"true\"\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m resource_query {\r\n          \u001b[32m+\u001b[0m\u001b[0m query = jsonencode(\r\n                {\r\n                  \u001b[32m+\u001b[0m\u001b[0m ResourceTypeFilters = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m \"AWS::AllSupported\",\r\n                    ]\r\n                  \u001b[32m+\u001b[0m\u001b[0m TagFilters          = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m {\r\n                          \u001b[32m+\u001b[0m\u001b[0m Key    = \"Project\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m Values = [\r\n                              \u001b[32m+\u001b[0m\u001b[0m \"terragrunt-ecs-blueprint\",\r\n                            ]\r\n                        },\r\n                    ]\r\n                }\r\n            )\r\n          \u001b[32m+\u001b[0m\u001b[0m type  = \"TAG_FILTERS_1_0\"\r\n        }\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 1 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m resource_group_arn     = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n"]
[126.238483, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # module.cluster.aws_cloudwatch_log_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_cloudwatch_log_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name              = \"/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m retention_in_days = 90\r\n      \u001b[32m+\u001b[0m\u001b[0m skip_destroy      = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all          = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n"]
[126.238624, "o", "\r\n\u001b[1m  # module.cluster.aws_ecs_cluster.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_ecs_cluster\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name     = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags     = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m configuration {\r\n          \u001b[32m+\u001b[0m\u001b[0m execute_command_configuration {\r\n              \u001b[32m+\u001b[0m\u001b[0m logging = \"DEFAULT\"\r\n            }\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m setting {\r\n          \u001b[32m+\u001b[0m\u001b[0m name  = \"containerInsights\"\r\n          \u001b[32m+\u001b[0m\u001b[0m value = \"enabled\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # module.cluster.aws_ecs_cluster_capacity_providers.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_ecs_cluster_capacity_providers\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m capacity_providers = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"FARGATE\",\r\n          \u001b[32m+\u001b[0m\u001b[0m \"FARGATE_SPOT\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m cluster_name       = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id                 = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m default_capacity_provider_strategy {\r\n          \u001b[32m+\u001b[0m\u001b[0m base              = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m capacity_provider = \"FARGATE\"\r\n          \u001b[32m+\u001b[0m\u001b[0m weight            = 50\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m default_capacity_provider_strategy {\r\n          \u001b[32m+\u001b[0m\u001b[0m base              = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m capacity_provider = \"FARGATE_SPOT\"\r\n          \u001b[32m+\u001b[0m\u001b[0m weight            = 50\r\n        }\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 3 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m autoscaling_capacity_providers = {}\r\n  \u001b[32m+\u001b[0m\u001b[0m cloudwatch_log_group_arn       = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m cloudwatch_log_group_name      = \"/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\n  \u001b[32m+\u001b[0m\u001b[0m cluster_arn                    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m cluster_capacity_providers     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m cluster_id                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m cluster_name                   = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n  \u001b[32m+\u001b[0m\u001b[0m services                       = {}\r\n"]
[126.328883, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Reading...\u001b[0m\u001b[0m\r\n"]
[126.329385, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Reading...\u001b[0m\u001b[0m\r\n"]
[126.337614, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Read complete after 0s [id=2053943846]\u001b[0m\r\n"]
[126.341592, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Read complete after 0s [id=1021377347]\u001b[0m\r\n"]
[126.685047, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # aws_cloudwatch_log_group.flow_log[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_cloudwatch_log_group\" \"flow_log\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name              = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m retention_in_days = 0\r\n      \u001b[32m+\u001b[0m\u001b[0m skip_destroy      = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all          = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_db_subnet_group.database[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_db_subnet_group\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description             = \"Database subnet group for terragrunt-ecs-blueprint-dev-vpc\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                    = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_ids              = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m supported_network_types = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                  = (known after apply)\r\n    }\r\n"]
[126.685485, "o", "\r\n\u001b[1m  # aws_default_network_acl.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_default_network_acl\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m egress {\r\n          \u001b[32m+\u001b[0m\u001b[0m action          = \"allow\"\r\n          \u001b[32m+\u001b[0m\u001b[0m from_port       = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block = \"::/0\"\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol        = \"-1\"\r\n          \u001b[32m+\u001b[0m\u001b[0m rule_no         = 101\r\n          \u001b[32m+\u001b[0m\u001b[0m to_port         = 0\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m egress {\r\n          \u001b[32m+\u001b[0m\u001b[0m action     = \"allow\"\r\n          \u001b[32m+\u001b[0m\u001b[0m cidr_block = \"0.0.0.0/0\"\r\n          \u001b[32m+\u001b[0m\u001b[0m from_port  = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol   = \"-1\"\r\n          \u001b[32m+\u001b[0m\u001b[0m rule_no    = 100\r\n          \u001b[32m+\u001b[0m\u001b[0m to_port    = 0\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress {\r\n          \u001b[32m+\u001b[0m\u001b[0m action          = \"allow\"\r\n          \u001b[32m+\u001b[0m\u001b[0m from_port       = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block = \"::/0\"\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol        = \"-1\"\r\n          \u001b[32m+\u001b[0m\u001b[0m rule_no         = 101\r\n          \u001b[32m+\u001b[0m\u001b[0m to_port         = 0\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress {\r\n          \u001b[32m+\u001b[0m\u001b[0m action     = \"allow\"\r\n          \u001b[32m+\u001b[0m\u001b[0m cidr_block = \"0.0.0.0/0\"\r\n          \u001b[32m+\u001b[0m\u001b[0m from_port  = 0\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol   = \"-1\"\r\n          \u001b[32m+\u001b[0m\u001b[0m rule_no    = 100\r\n          \u001b[32m+\u001b[0m\u001b[0m to_port    = 0\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_default_route_table.default[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_default_route_table\" \"default\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\""]
[126.685982, "o", "\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"5m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m update = \"5m\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_default_security_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_default_security_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_flow_log.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_flow_log\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m iam_role_arn             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m log_destination          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m log_destination_type     = \"cloud-watch-logs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m log_format               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m log_group_name           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_aggregation_interval = 600\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                     = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                 = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m traffic_type             = \"ALL\"\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                   = (known after apply)\r\n    }\r\n"]
[126.686492, "o", "\r\n\u001b[1m  # aws_iam_policy.vpc_flow_log_cloudwatch[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_policy\" \"vpc_flow_log_cloudwatch\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix = \"vpc-flow-log-to-cloudwatch-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path        = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m policy      = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = [\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:PutLogEvents\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:DescribeLogStreams\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:DescribeLogGroups\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:CreateLogStream\",\r\n                        ]\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"AWSVPCFlowLogsPushToCloudWatch\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags        = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n"]
[126.686856, "o", "\r\n\u001b[1m  # aws_iam_role.vpc_flow_log_cloudwatch[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role\" \"vpc_flow_log_cloudwatch\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assume_role_policy    = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action    = \"sts:AssumeRole\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect    = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Principal = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m Service = \"vpc-flow-logs.amazonaws.com\"\r\n                        }\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid       = \"AWSVPCFlowLogsAssumeRole\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m create_date           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m force_detach_policies = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m managed_policy_arns   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_session_duration  = 3600\r\n      \u001b[32m+\u001b[0m\u001b[0m name                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix           = \"vpc-flow-log-role-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path                  = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                  = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m unique_id             = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role_policy_attachment\" \"vpc_flow_log_cloudwatch\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_arn = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m role       = (known after apply)\r\n    }\r\n"]
[126.687015, "o", "\r\n\u001b[1m  # aws_internet_gateway.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_internet_gateway\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags     = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id   = (known after apply)\r\n    }\r\n"]
[126.687138, "o", "\r\n\u001b[1m  # aws_route.public_internet_gateway[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route\" \"public_internet_gateway\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m destination_cidr_block = \"0.0.0.0/0\"\r\n      \u001b[32m+\u001b[0m\u001b[0m gateway_id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m instance_id            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m instance_owner_id      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m network_interface_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m origin                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m state                  = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"5m\"\r\n        }\r\n    }\r\n"]
[126.68734, "o", "\r\n\u001b[1m  # aws_route_table.private[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn              = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m propagating_vgws = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags             = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all         = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id           = (known after apply)\r\n    }\r\n"]
[126.687475, "o", "\r\n\u001b[1m  # aws_route_table.public[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn              = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m propagating_vgws = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags             = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all         = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id           = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.database[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.database[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.private[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.private[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.public[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_route_table_association.public[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\r\n    }\r\n"]
[126.6877, "o", "\r\n\u001b[1m  # aws_subnet.database[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.5.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2a\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2a\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[126.687953, "o", "\r\n\u001b[1m  # aws_subnet.database[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"database\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2b\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.6.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2b\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2b\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[126.688579, "o", "\r\n\u001b[1m  # aws_subnet.private[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.3.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2a\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2a\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[126.689005, "o", "\r\n\u001b[1m  # aws_subnet.private[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"private\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2b\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.4.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2b\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2b\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[126.689243, "o", "\r\n\u001b[1m  # aws_subnet.public[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n"]
[126.689363, "o", "      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.1.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = true\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2a\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2a\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\r\n    }\r\n"]
[126.68957, "o", "\r\n\u001b[1m  # aws_subnet.public[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"public\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2b\"\r\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.10.2.0/24\"\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = true\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2b\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2b\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                    "]
[126.689724, "o", "                     = (known after apply)\r\n    }\r\n"]
[126.689975, "o", "\r\n\u001b[1m  # aws_vpc.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_vpc\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                           = \"10.10.0.0/16\"\r\n      \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m default_security_group_id            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m dhcp_options_id                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns_hostnames                 = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns_support                   = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_network_address_usage_metrics = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m instance_tenancy                     = \"default\"\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_association_id                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_network_border_group = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m main_route_table_id                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                 = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                             = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 26 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m azs                                         = [\r\n      \u001b[32m+\u001b[0m\u001b[0m \"us-east-2a\",\r\n      \u001b[32m+\u001b[0m\u001b[0m \"us-east-2b\",\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m cgw_arns                                    = []\r\n  \u001b[32m+\u001b[0m\u001b[0m cgw_ids                                     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m database_nat_gateway_route_ids              = []\r\n  \u001b[32m+\u001b[0m\u001b[0m database_route_table_association_ids        = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m database_route_table_ids                    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnet_arns                        = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnet_group                       = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnet_group_name                  = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnets                            = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnets_cidr_blocks                = [\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.5.0/24\",\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.6.0/24\",\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m database_subnets_ipv6_cidr_blocks           = []\r\n  \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id                      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m default_route_table_id                      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m default_security_group_id                   = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_route_table_association_ids     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_route_table_ids                 = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_subnet_arns                     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_subnets                         = []\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_subnets_cidr_blocks             = []\r\n  \u001b[32m+\u001b[0m\u001b[0m elasticache_subnets_ipv6_cidr_blocks        = []\r\n  \u001b[32m+\u001b[0m\u001b[0m igw_arn                                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m igw_id                                      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_route_table_association_ids           = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_route_table_ids                       = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_subnet_arns                           = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_subnets                               = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_subnets_cidr_blocks                   = []\r\n  \u001b[32m+\u001b[0m\u001b[0m intra_subnets_ipv6_cidr_blocks              = []\r\n  \u001b[32m+\u001b[0m\u001b[0m name                                        = \"terragrunt-ecs-blueprint-dev-vpc\""]
[126.690127, "o", "\r\n  \u001b[32m+\u001b[0m\u001b[0m nat_ids                                     = []\r\n  \u001b[32m+\u001b[0m\u001b[0m nat_public_ips                              = []\r\n  \u001b[32m+\u001b[0m\u001b[0m natgw_ids                                   = []\r\n  \u001b[32m+\u001b[0m\u001b[0m outpost_subnet_arns                         = []\r\n  \u001b[32m+\u001b[0m\u001b[0m outpost_subnets                             = []\r\n  \u001b[32m+\u001b[0m\u001b[0m outpost_subnets_cidr_blocks                 = []\r\n  \u001b[32m+\u001b[0m\u001b[0m outpost_subnets_ipv6_cidr_blocks            = []\r\n  \u001b[32m+\u001b[0m\u001b[0m private_ipv6_egress_route_ids               = []\r\n  \u001b[32m+\u001b[0m\u001b[0m private_nat_gateway_route_ids               = []\r\n  \u001b[32m+\u001b[0m\u001b[0m private_route_table_association_ids         = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_route_table_ids                     = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_subnet_arns                         = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_subnets                             = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_subnets_cidr_blocks                 = [\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.3.0/24\",\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.4.0/24\",\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m private_subnets_ipv6_cidr_blocks            = []\r\n  \u001b[32m+\u001b[0m\u001b[0m public_internet_gateway_route_id            = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m public_route_table_association_ids          = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_route_table_ids                      = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_subnet_arns                          = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_subnets                              = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_subnets_cidr_blocks                  = [\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.1.0/24\",\r\n      \u001b[32m+\u001b[0m\u001b[0m \"10.10.2.0/24\",\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m public_subnets_ipv6_cidr_blocks             = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_public_route_table_association_ids = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_route_table_association_ids        = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_route_table_ids                    = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_subnet_arns                        = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_subnets                            = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_subnets_cidr_blocks                = []\r\n  \u001b[32m+\u001b[0m\u001b[0m redshift_subnets_ipv6_cidr_blocks           = []\r\n  \u001b[32m+\u001b[0m\u001b[0m this_customer_gateway                       = {}\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_arn                                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_cidr_block                              = \"10.10.0.0/16\"\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_enable_dns_hostnames                    = true\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_enable_dns_support                      = true\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_flow_log_cloudwatch_iam_role_arn        = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_flow_log_destination_arn                = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_flow_log_destination_type               = \"cloud-watch-logs\"\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_flow_log_id                             = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_id                                      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_instance_tenancy                        = \"default\"\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_ipv6_association_id                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_ipv6_cidr_block                         = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_main_route_table_id                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_owner_id                                = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m vpc_secondary_cidr_blocks                   = []\r\n"]
[128.835979, "o", "\u001b[0m\u001b[1maws_resourcegroups_group.resource_group[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[129.100992, "o", "\u001b[0m\u001b[1mmodule.cluster.aws_cloudwatch_log_group.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[129.385563, "o", "\u001b[0m\u001b[1maws_iam_policy.vpc_flow_log_cloudwatch[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[129.385738, "o", "\u001b[0m\u001b[1maws_vpc.this[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_iam_role.vpc_flow_log_cloudwatch[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[129.871836, "o", "\u001b[0m\u001b[1mmodule.cluster.aws_cloudwatch_log_group.this[0]: Creation complete after 0s [id=/aws/ecs/dev-terragrunt-ecs-blueprint-ecs]\u001b[0m\r\n"]
[129.875106, "o", "\u001b[0m\u001b[1mmodule.cluster.aws_ecs_cluster.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[130.125119, "o", "\u001b[0m\u001b[1maws_resourcegroups_group.resource_group[0]: Creation complete after 2s [id=terragrunt-ecs-blueprint-dev]\u001b[0m\r\n"]
[130.179652, "o", "\u001b[0m\u001b[1maws_iam_policy.vpc_flow_log_cloudwatch[0]: Creation complete after 1s [id=arn:aws:iam::123456789012:policy/vpc-flow-log-to-cloudwatch-20230807154320841900000001]\u001b[0m\r\n"]
[130.301103, "o", "\u001b[0m\u001b[1maws_iam_role.vpc_flow_log_cloudwatch[0]: Creation complete after 1s [id=vpc-flow-log-role-20230807154320842200000002]\u001b[0m\r\n"]
[130.30292, "o", "\u001b[0m\u001b[1maws_iam_role_policy_attachment.vpc_flow_log_cloudwatch[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[130.562403, "o", "\u001b[0m\u001b[1maws_iam_role_policy_attachment.vpc_flow_log_cloudwatch[0]: Creation complete after 0s [id=vpc-flow-log-role-20230807154320842200000002-20230807154321912100000003]\u001b[0m\r\n"]
[131.440049, "o", "Releasing state lock. This may take a few moments...\r\n"]
[131.819495, "o", "\u001b[0m\u001b[1m\u001b[32m\r\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\r\n\u001b[0m\u001b[0m\u001b[1m\u001b[32m\r\nOutputs:\r\n\r\n\u001b[0mresource_group_arn = [\r\n  \"arn:aws:resource-groups:us-east-2:123456789012:group/terragrunt-ecs-blueprint-dev\",\r\n]\r\n"]
[139.386575, "o", "\u001b[0m\u001b[1maws_vpc.this[0]: Still creating... [10s elapsed]\u001b[0m\u001b[0m\r\n"]
[139.875525, "o", "\u001b[0m\u001b[1mmodule.cluster.aws_ecs_cluster.this[0]: Still creating... [10s elapsed]\u001b[0m\u001b[0m\r\n"]
[141.290976, "o", "\u001b[0m\u001b[1mmodule.cluster.aws_ecs_cluster.this[0]: Creation complete after 12s [id=arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs]\u001b[0m\r\n"]
[141.293951, "o", "\u001b[0m\u001b[1mmodule.cluster.aws_ecs_cluster_capacity_providers.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[141.729007, "o", "\u001b[0m\u001b[1maws_vpc.this[0]: Creation complete after 12s [id=vpc-030fc4e3350f272b0]\u001b[0m\r\n"]
[141.732589, "o", "\u001b[0m\u001b[1maws_internet_gateway.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[141.733654, "o", "\u001b[0m\u001b[1maws_default_route_table.default[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_route_table.private[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[141.734639, "o", "\u001b[0m\u001b[1maws_default_security_group.this[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_subnet.private[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_subnet.database[1]: Creating...\u001b[0m\u001b[0m\r\n"]
[141.734793, "o", "\u001b[0m\u001b[1maws_subnet.private[1]: Creating...\u001b[0m\u001b[0m\r\n"]
[141.735017, "o", "\u001b[0m\u001b[1maws_subnet.public[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_subnet.database[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[141.737369, "o", "\u001b[0m\u001b[1maws_default_network_acl.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[142.507206, "o", "\u001b[0m\u001b[1maws_default_route_table.default[0]: Creation complete after 1s [id=rtb-02cd8af79a2237b94]\u001b[0m\r\n"]
[142.51098, "o", "\u001b[0m\u001b[1maws_subnet.public[1]: Creating...\u001b[0m\u001b[0m\r\n"]
[142.736921, "o", "\u001b[0m\u001b[1maws_internet_gateway.this[0]: Creation complete after 1s [id=igw-0a9c3880af1688176]\u001b[0m\r\n"]
[142.739289, "o", "\u001b[0m\u001b[1maws_route_table.public[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[142.754859, "o", "\u001b[0m\u001b[1maws_subnet.private[0]: Creation complete after 1s [id=subnet-0fcb1cc2267783607]\u001b[0m\r\n"]
[142.756744, "o", "\u001b[0m\u001b[1maws_cloudwatch_log_group.flow_log[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[142.785662, "o", "\u001b[0m\u001b[1maws_route_table.private[0]: Creation complete after 1s [id=rtb-0a467b6a8854d2a9d]\u001b[0m\r\n"]
[142.840615, "o", "\u001b[0m\u001b[1maws_subnet.private[1]: Creation complete after 1s [id=subnet-0d5a8df75ca238d16]\u001b[0m\r\n"]
[142.842627, "o", "\u001b[0m\u001b[1maws_route_table_association.private[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[142.842885, "o", "\u001b[0m\u001b[1maws_route_table_association.private[1]: Creating...\u001b[0m\u001b[0m\r\n"]
[142.852928, "o", "\u001b[0m\u001b[1maws_subnet.database[0]: Creation complete after 1s [id=subnet-00aa0bf08ac949a4b]\u001b[0m\r\n"]
[142.883617, "o", "\u001b[0m\u001b[1maws_subnet.database[1]: Creation complete after 1s [id=subnet-0b81e7b36ecf80560]\u001b[0m\r\n"]
[142.885687, "o", "\u001b[0m\u001b[1maws_route_table_association.database[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[142.886478, "o", "\u001b[0m\u001b[1maws_db_subnet_group.database[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[143.301176, "o", "\u001b[0m\u001b[1maws_route_table_association.private[1]: Creation complete after 1s [id=rtbassoc-0a36e5e24aaea9c7f]\u001b[0m\r\n"]
[143.303991, "o", "\u001b[0m\u001b[1maws_route_table_association.database[1]: Creating...\u001b[0m\u001b[0m\r\n"]
[143.344574, "o", "\u001b[0m\u001b[1maws_default_security_group.this[0]: Creation complete after 2s [id=sg-06c090779d45de155]\u001b[0m\r\n"]
[143.34614, "o", "\u001b[0m\u001b[1maws_route_table_association.database[0]: Creation complete after 1s [id=rtbassoc-07cbb1ef26fd10a1e]\u001b[0m\r\n"]
[143.381045, "o", "\u001b[0m\u001b[1maws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-0d3ccb0461b434d64]\u001b[0m\r\n"]
[143.421047, "o", "\u001b[0m\u001b[1maws_route_table.public[0]: Creation complete after 1s [id=rtb-0b320955a26bff270]\u001b[0m\r\n"]
[143.423409, "o", "\u001b[0m\u001b[1maws_route.public_internet_gateway[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[143.482941, "o", "\u001b[0m\u001b[1maws_cloudwatch_log_group.flow_log[0]: Creation complete after 1s [id=/aws/vpc-flow-log/vpc-030fc4e3350f272b0]\u001b[0m\r\n"]
[143.486399, "o", "\u001b[0m\u001b[1maws_flow_log.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[143.516622, "o", "\u001b[0m\u001b[1maws_default_network_acl.this[0]: Creation complete after 2s [id=acl-02cc0f723093c6ac4]\u001b[0m\r\n"]
[143.782972, "o", "\u001b[0m\u001b[1maws_route_table_association.database[1]: Creation complete after 0s [id=rtbassoc-088697bd198913f73]\u001b[0m\r\n"]
[143.901221, "o", "\u001b[0m\u001b[1maws_flow_log.this[0]: Creation complete after 0s [id=fl-011e0b2b5ce3a6596]\u001b[0m\r\n"]
[144.128476, "o", "\u001b[0m\u001b[1maws_route.public_internet_gateway[0]: Creation complete after 1s [id=r-rtb-0b320955a26bff2701080289494]\u001b[0m\r\n"]
[144.253038, "o", "\u001b[0m\u001b[1maws_db_subnet_group.database[0]: Creation complete after 2s [id=terragrunt-ecs-blueprint-dev-vpc]\u001b[0m\r\n"]
[151.295133, "o", "\u001b[0m\u001b[1mmodule.cluster.aws_ecs_cluster_capacity_providers.this[0]: Still creating... [10s elapsed]\u001b[0m\u001b[0m\r\n"]
[151.736742, "o", "\u001b[0m\u001b[1maws_subnet.public[0]: Still creating... [10s elapsed]\u001b[0m\u001b[0m\r\n"]
[152.148178, "o", "\u001b[0m\u001b[1mmodule.cluster.aws_ecs_cluster_capacity_providers.this[0]: Creation complete after 11s [id=dev-terragrunt-ecs-blueprint-ecs]\u001b[0m\r\n"]
[152.512212, "o", "\u001b[0m\u001b[1maws_subnet.public[1]: Still creating... [10s elapsed]\u001b[0m\u001b[0m\r\n"]
[153.070983, "o", "\u001b[0m\u001b[1maws_subnet.public[0]: Creation complete after 12s [id=subnet-032fc5852105a890c]\u001b[0m\r\n"]
[154.036904, "o", "\u001b[0m\u001b[1maws_subnet.public[1]: Creation complete after 11s [id=subnet-073eb7d9dfe5e5b3a]\u001b[0m\r\n"]
[154.03975, "o", "\u001b[0m\u001b[1maws_route_table_association.public[1]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_route_table_association.public[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[154.361704, "o", "Releasing state lock. This may take a few moments...\r\n"]
[154.522448, "o", "\u001b[0m\u001b[1maws_route_table_association.public[0]: Creation complete after 1s [id=rtbassoc-069884513276a9291]\u001b[0m\r\n"]
[154.530718, "o", "\u001b[0m\u001b[1maws_route_table_association.public[1]: Creation complete after 1s [id=rtbassoc-066b97103f7774f5f]\u001b[0m\r\n"]
[154.737412, "o", "\u001b[0m\u001b[1m\u001b[32m\r\nApply complete! Resources: 3 added, 0 changed, 0 destroyed.\r\n\u001b[0m\u001b[0m\u001b[1m\u001b[32m\r\nOutputs:\r\n\r\n\u001b[0m"]
[154.737744, "o", "autoscaling_capacity_providers = {}\r\ncloudwatch_log_group_arn = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\ncloudwatch_log_group_name = \"/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\ncluster_arn = \"arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs\"\r\ncluster_capacity_providers = {\r\n  \"dev-terragrunt-ecs-blueprint-ecs\" = {\r\n    \"capacity_providers\" = toset([\r\n      \"FARGATE\",\r\n      \"FARGATE_SPOT\",\r\n    ])\r\n    \"cluster_name\" = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n    \"default_capacity_provider_strategy\" = toset([\r\n      {\r\n        \"base\" = 0\r\n        \"capacity_provider\" = \"FARGATE\"\r\n        \"weight\" = 50\r\n      },\r\n      {\r\n        \"base\" = 0\r\n        \"capacity_provider\" = \"FARGATE_SPOT\"\r\n        \"weight\" = 50\r\n      },\r\n    ])\r\n    \"id\" = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n  }\r\n}\r\ncluster_id = \"arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs\"\r\ncluster_name = \"dev-terragrunt-ecs-blueprint-ecs\"\r\nservices = {}\r\n"]
[155.925229, "o", "Releasing state lock. This may take a few moments...\r\n"]
[156.308958, "o", "\u001b[0m\u001b[1m\u001b[32m\r\nApply complete! Resources: 26 added, 0 changed, 0 destroyed.\r\n\u001b[0m\u001b[0m\u001b[1m\u001b[32m\r\nOutputs:\r\n\r\n\u001b[0m"]
[156.309318, "o", "azs = tolist([\r\n  \"us-east-2a\",\r\n  \"us-east-2b\",\r\n])\r\ncgw_arns = []\r\ncgw_ids = []\r\ndatabase_nat_gateway_route_ids = []\r\ndatabase_route_table_association_ids = [\r\n  \"rtbassoc-07cbb1ef26fd10a1e\",\r\n  \"rtbassoc-088697bd198913f73\",\r\n]\r\ndatabase_route_table_ids = [\r\n  \"rtb-0a467b6a8854d2a9d\",\r\n]\r\ndatabase_subnet_arns = [\r\n  \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-00aa0bf08ac949a4b\",\r\n  \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0b81e7b36ecf80560\",\r\n]\r\ndatabase_subnet_group = \"terragrunt-ecs-blueprint-dev-vpc\"\r\ndatabase_subnet_group_name = \"terragrunt-ecs-blueprint-dev-vpc\"\r\ndatabase_subnets = [\r\n  \"subnet-00aa0bf08ac949a4b\",\r\n  \"subnet-0b81e7b36ecf80560\",\r\n]\r\ndatabase_subnets_cidr_blocks = tolist([\r\n  \"10.10.5.0/24\",\r\n  \"10.10.6.0/24\",\r\n])\r\ndatabase_subnets_ipv6_cidr_blocks = tolist([])\r\ndefault_network_acl_id = \"acl-02cc0f723093c6ac4\"\r\ndefault_route_table_id = \"rtb-02cd8af79a2237b94\"\r\ndefault_security_group_id = \"sg-06c090779d45de155\"\r\nelasticache_route_table_association_ids = []\r\nelasticache_route_table_ids = [\r\n  \"rtb-0a467b6a8854d2a9d\",\r\n]\r\nelasticache_subnet_arns = []\r\nelasticache_subnets = []\r\nelasticache_subnets_cidr_blocks = tolist([])\r\nelasticache_subnets_ipv6_cidr_blocks = tolist([])\r\nigw_arn = \"arn:aws:ec2:us-east-2:123456789012:internet-gateway/igw-0a9c3880af1688176\"\r\nigw_id = \"igw-0a9c3880af1688176\"\r\nintra_route_table_association_ids = []\r\nintra_route_table_ids = []\r\nintra_subnet_arns = []\r\nintra_subnets = []\r\nintra_subnets_cidr_blocks = tolist([])\r\nintra_subnets_ipv6_cidr_blocks = tolist([])\r\nname = \"terragrunt-ecs-blueprint-dev-vpc\"\r\nnat_ids = []\r\nnat_public_ips = tolist([])\r\nnatgw_ids = []\r\noutpost_subnet_arns = []\r\noutpost_subnets = []\r\noutpost_subnets_cidr_blocks = tolist([])\r\noutpost_subnets_ipv6_cidr_blocks = tolist([])\r\nprivate_ipv6_egress_route_ids = []\r\nprivate_nat_gateway_route_ids = []\r\nprivate_route_table_association_ids = [\r\n  \"rtbassoc-0d3ccb0461b434d64\",\r\n  \"rtbassoc-0a36e5e24aaea9c7f\",\r\n]\r\nprivate_route_table_ids = [\r\n  \"rtb-0a467b6a8854d2a9d\",\r\n"]
[156.309497, "o", "]\r\nprivate_subnet_arns = [\r\n  \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0fcb1cc2267783607\",\r\n  \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0d5a8df75ca238d16\",\r\n]\r\nprivate_subnets = [\r\n  \"subnet-0fcb1cc2267783607\",\r\n  \"subnet-0d5a8df75ca238d16\",\r\n]\r\nprivate_subnets_cidr_blocks = tolist([\r\n  \"10.10.3.0/24\",\r\n  \"10.10.4.0/24\",\r\n])\r\nprivate_subnets_ipv6_cidr_blocks = tolist([])\r\npublic_internet_gateway_route_id = \"r-rtb-0b320955a26bff2701080289494\"\r\npublic_route_table_association_ids = [\r\n  \"rtbassoc-069884513276a9291\",\r\n  \"rtbassoc-066b97103f7774f5f\",\r\n]\r\npublic_route_table_ids = [\r\n  \"rtb-0b320955a26bff270\",\r\n]\r\npublic_subnet_arns = [\r\n  \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-032fc5852105a890c\",\r\n  \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-073eb7d9dfe5e5b3a\",\r\n]\r\npublic_subnets = [\r\n  \"subnet-032fc5852105a890c\",\r\n  \"subnet-073eb7d9dfe5e5b3a\",\r\n]\r\npublic_subnets_cidr_blocks = tolist([\r\n  \"10.10.1.0/24\",\r\n  \"10.10.2.0/24\",\r\n])\r\npublic_subnets_ipv6_cidr_blocks = tolist([])\r\nredshift_public_route_table_association_ids = []\r\nredshift_route_table_association_ids = []\r\nredshift_route_table_ids = tolist([\r\n  \"rtb-0a467b6a8854d2a9d\",\r\n])\r\nredshift_subnet_arns = []\r\nredshift_subnets = []\r\nredshift_subnets_cidr_blocks = tolist([])\r\nredshift_subnets_ipv6_cidr_blocks = tolist([])\r\nthis_customer_gateway = {}\r\nvpc_arn = \"arn:aws:ec2:us-east-2:123456789012:vpc/vpc-030fc4e3350f272b0\"\r\nvpc_cidr_block = \"10.10.0.0/16\"\r\nvpc_enable_dns_hostnames = true\r\nvpc_enable_dns_support = true\r\nvpc_flow_log_cloudwatch_iam_role_arn = \"arn:aws:iam::123456789012:role/vpc-flow-log-role-20230807154320842200000002\"\r\nvpc_flow_log_destination_arn = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/vpc-flow-log/vpc-030fc4e3350f272b0\"\r\nvpc_flow_log_destination_type = \"cloud-watch-logs\"\r\nvpc_flow_log_id = \"fl-011e0b2b5ce3a6596\"\r\nvpc_id = \"vpc-030fc4e3350f272b0\"\r\nvpc_instance_tenancy = \"default\"\r\nvpc_ipv6_association_id = \"\"\r\nvpc_ipv6_cidr_block = \"\"\r\nvpc_main_route_table_id = \"rtb-02cd8af79a2237b94\"\r\nvpc_owner_id = \"123456789012\"\r\nvpc_secondary_cidr_blocks = tolist([])\r\n"]
[156.511227, "o", "\u001b[33mWARN\u001b[0m[0042] No double-slash (//) found in source URL /terraform-aws-modules/vpc/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC] \r\n"]
[159.827853, "o", "\u001b[33mWARN\u001b[0m[0045] No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB] \r\n"]
[167.886443, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # aws_security_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description            = \"Security group for service with HTTP ports open for ALB\"\r\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                   = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"10m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m delete = \"15m\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_security_group_rule.egress_with_cidr_blocks[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"egress_with_cidr_blocks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_blocks              = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Egress Rule\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 0\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 65535\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"egress\"\r\n    }\r\n"]
[167.886513, "o", "\r\n\u001b[1m  # aws_security_group_rule.ingress_with_cidr_blocks[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"ingress_with_cidr_blocks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_blocks              = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Service ports (ipv4). All\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"ingress\"\r\n    }\r\n\r\n\u001b[1m  # aws_security_group_rule.ingress_with_cidr_blocks[1]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"ingress_with_cidr_blocks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_blocks              = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Service ports (ipv4). All\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 443\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 443\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"ingress\"\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 4 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_arn         = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_description = \"Security group for service with HTTP ports open for ALB\"\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_id          = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_name        = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_owner_id    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_vpc_id      = \"vpc-030fc4e3350f272b0\"\r\n"]
[170.286533, "o", "\u001b[0m\u001b[1maws_security_group.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[172.723392, "o", "\u001b[0m\u001b[1maws_security_group.this[0]: Creation complete after 2s [id=sg-0c00905fa9df01274]\u001b[0m\r\n"]
[172.727988, "o", "\u001b[0m\u001b[1maws_security_group_rule.egress_with_cidr_blocks[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_security_group_rule.ingress_with_cidr_blocks[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_security_group_rule.ingress_with_cidr_blocks[1]: Creating...\u001b[0m\u001b[0m\r\n"]
[173.218242, "o", "\u001b[0m\u001b[1maws_security_group_rule.ingress_with_cidr_blocks[0]: Creation complete after 1s [id=sgrule-1328272845]\u001b[0m\r\n"]
[173.742881, "o", "\u001b[0m\u001b[1maws_security_group_rule.ingress_with_cidr_blocks[1]: Creation complete after 1s [id=sgrule-785293953]\u001b[0m\r\n"]
[174.266178, "o", "\u001b[0m\u001b[1maws_security_group_rule.egress_with_cidr_blocks[0]: Creation complete after 2s [id=sgrule-679664633]\u001b[0m\r\n"]
[175.718164, "o", "Releasing state lock. This may take a few moments...\r\n"]
[176.120846, "o", "\u001b[0m\u001b[1m\u001b[32m\r\nApply complete! Resources: 4 added, 0 changed, 0 destroyed.\r\n\u001b[0m\u001b[0m\u001b[1m\u001b[32m\r\nOutputs:\r\n\r\n\u001b[0msecurity_group_arn = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0c00905fa9df01274\"\r\nsecurity_group_description = \"Security group for service with HTTP ports open for ALB\"\r\nsecurity_group_id = \"sg-0c00905fa9df01274\"\r\nsecurity_group_name = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\nsecurity_group_owner_id = \"123456789012\"\r\nsecurity_group_vpc_id = \"vpc-030fc4e3350f272b0\"\r\n"]
[176.373237, "o", "\u001b[33mWARN\u001b[0m[0062] No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB] \r\n"]
[179.335334, "o", "\u001b[33mWARN\u001b[0m[0065] No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ECS/SampleService] \r\n"]
[179.33561, "o", "\u001b[33mWARN\u001b[0m[0065] No double-slash (//) found in source URL /terraform-aws-modules/alb/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB] \r\n"]
[182.585629, "o", "Acquiring state lock. This may take a few moments...\r\n"]
[187.077851, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n"]
[187.078273, "o", "\r\n\u001b[1m  # aws_security_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description            = \"Security group for service with HTTP ports open for ALB\"\r\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                   = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Networking\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"10m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m delete = \"15m\"\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_security_group_rule.egress_with_cidr_blocks[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"egress_with_cidr_blocks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cidr_blocks              = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Egress Rule\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 0\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 65535\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"egress\"\r\n    }\r\n\r\n\u001b[1m  # aws_security_group_rule.ingress_with_source_security_group_id[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group_rule\" \"ingress_with_source_security_group_id\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m description              = \"Security Groups for inbound traffic to service\"\r\n      \u001b[32m+\u001b[0m\u001b[0m from_port                = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids          = []\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                 = \"tcp\"\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_id        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m security_group_rule_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m self                     = false\r\n      \u001b[32m+\u001b[0m\u001b[0m source_security_group_id = \"sg-0c00905fa9df01274\"\r\n      \u001b[32m+\u001b[0m\u001b[0m to_port                  = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m type                     = \"ingress\"\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 3 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_arn         = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_description = \"Security group for service with HTTP ports open for ALB\"\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_id          = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_name        = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_owner_id    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_vpc_id      = \"vpc-030fc4e3350f272b0\"\r\n"]
[187.080902, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n"]
[187.08107, "o", "\r\n\u001b[1m  # aws_lb.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_lb\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn_suffix                                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m desync_mitigation_mode                      = \"defensive\"\r\n      \u001b[32m+\u001b[0m\u001b[0m dns_name                                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m drop_invalid_header_fields                  = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_deletion_protection                  = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_http2                                = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_tls_version_and_cipher_suite_headers = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_waf_fail_open                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_xff_client_port                      = true\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m idle_timeout                                = 60\r\n      \u001b[32m+\u001b[0m\u001b[0m internal                                    = false\r\n      \u001b[32m+\u001b[0m\u001b[0m ip_address_type                             = \"ipv4\"\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancer_type                          = \"application\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name                                        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n      \u001b[32m+\u001b[0m\u001b[0m preserve_host_header                        = false\r\n      \u001b[32m+\u001b[0m\u001b[0m security_groups                             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m subnets                                     = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"subnet-032fc5852105a890c\",\r\n          \u001b[32m+\u001b[0m\u001b[0m \"subnet-073eb7d9dfe5e5b3a\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                                        = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m xff_header_processing_mode                  = \"append\"\r\n      \u001b[32m+\u001b[0m\u001b[0m zone_id                                     = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {\r\n          \u001b[32m+\u001b[0m\u001b[0m create = \"10m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m delete = \"10m\"\r\n          \u001b[32m+\u001b[0m\u001b[0m update = \"10m\"\r\n        }\r\n    }\r\n"]
[187.081157, "o", "\r\n\u001b[1m  # aws_lb_listener.frontend_http_tcp[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_lb_listener\" \"frontend_http_tcp\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancer_arn = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m port              = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol          = \"HTTP\"\r\n      \u001b[32m+\u001b[0m\u001b[0m ssl_policy        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all          = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m default_action {\r\n          \u001b[32m+\u001b[0m\u001b[0m order            = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m target_group_arn = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m type             = \"forward\"\r\n        }\r\n    }\r\n"]
[187.081371, "o", "\r\n\u001b[1m  # aws_lb_target_group.main[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_lb_target_group\" \"main\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn_suffix                         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m connection_termination             = false\r\n      \u001b[32m+\u001b[0m\u001b[0m deregistration_delay               = \"10\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ip_address_type                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m lambda_multi_value_headers_enabled = false\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancing_algorithm_type      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancing_cross_zone_enabled  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix                        = \"demo-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m port                               = 80\r\n      \u001b[32m+\u001b[0m\u001b[0m preserve_client_ip                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol                           = \"HTTP\"\r\n      \u001b[32m+\u001b[0m\u001b[0m protocol_version                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m proxy_protocol_v2                  = false\r\n      \u001b[32m+\u001b[0m\u001b[0m slow_start                         = 0\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"demo-\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"demo-\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m target_type                        = \"ip\"\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                             = \"vpc-030fc4e3350f272b0\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m health_check {\r\n          \u001b[32m+\u001b[0m\u001b[0m enabled             = true\r\n          \u001b[32m+\u001b[0m\u001b[0m healthy_threshold   = 5\r\n          \u001b[32m+\u001b[0m\u001b[0m interval            = 30\r\n          \u001b[32m+\u001b[0m\u001b[0m matcher             = \"200-399\"\r\n          \u001b[32m+\u001b[0m\u001b[0m path                = \"/\"\r\n          \u001b[32m+\u001b[0m\u001b[0m port                = \"traffic-port\"\r\n          \u001b[32m+\u001b[0m\u001b[0m protocol            = \"HTTP\"\r\n          \u001b[32m+\u001b[0m\u001b[0m timeout             = 10\r\n          \u001b[32m+\u001b[0m\u001b[0m unhealthy_threshold = 5\r\n        }\r\n    }\r\n"]
[187.081532, "o", "\r\n\u001b[1m  # aws_security_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description            = \"Managed by Terraform\"\r\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = \"terragrunt-ecs-blueprint-dev-alb-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                   = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 4 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m http_tcp_listener_arns    = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m http_tcp_listener_ids     = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m https_listener_arns       = []\r\n  \u001b[32m+\u001b[0m\u001b[0m https_listener_ids        = []\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_arn                    = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_arn_suffix             = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_dns_name               = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_id                     = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m lb_zone_id                = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_arn        = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m security_group_id         = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m target_group_arn_suffixes = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m target_group_arns         = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n  \u001b[32m+\u001b[0m\u001b[0m target_group_attachments  = {}\r\n  \u001b[32m+\u001b[0m\u001b[0m target_group_names        = [\r\n      \u001b[32m+\u001b[0m\u001b[0m (known after apply),\r\n    ]\r\n"]
[188.892248, "o", "\u001b[0m\u001b[1maws_security_group.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[188.897199, "o", "\u001b[0m\u001b[1maws_security_group.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[188.897833, "o", "\u001b[0m\u001b[1maws_lb_target_group.main[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[190.661496, "o", "\u001b[0m\u001b[1maws_lb_target_group.main[0]: Creation complete after 2s [id=arn:aws:elasticloadbalancing:us-east-2:123456789012:targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6]\u001b[0m\r\n"]
[191.27447, "o", "\u001b[0m\u001b[1maws_security_group.this[0]: Creation complete after 3s [id=sg-0266f9b26938eb40e]\u001b[0m\r\n"]
[191.276745, "o", "\u001b[0m\u001b[1maws_security_group.this[0]: Creation complete after 3s [id=sg-0d2a569a862d880f0]\u001b[0m\r\n"]
[191.277478, "o", "\u001b[0m\u001b[1maws_security_group_rule.ingress_with_source_security_group_id[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_security_group_rule.egress_with_cidr_blocks[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[191.28107, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[191.756832, "o", "\u001b[0m\u001b[1maws_security_group_rule.egress_with_cidr_blocks[0]: Creation complete after 0s [id=sgrule-2110121950]\u001b[0m\r\n"]
[192.304794, "o", "\u001b[0m\u001b[1maws_security_group_rule.ingress_with_source_security_group_id[0]: Creation complete after 1s [id=sgrule-2350988964]\u001b[0m\r\n"]
[193.786692, "o", "Releasing state lock. This may take a few moments...\r\n"]
[194.154956, "o", "\u001b[0m\u001b[1m\u001b[32m\r\nApply complete! Resources: 3 added, 0 changed, 0 destroyed.\r\n\u001b[0m\u001b[0m\u001b[1m\u001b[32m\r\nOutputs:\r\n\r\n\u001b[0msecurity_group_arn = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0266f9b26938eb40e\"\r\nsecurity_group_description = \"Security group for service with HTTP ports open for ALB\"\r\nsecurity_group_id = \"sg-0266f9b26938eb40e\"\r\nsecurity_group_name = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\nsecurity_group_owner_id = \"123456789012\"\r\nsecurity_group_vpc_id = \"vpc-030fc4e3350f272b0\"\r\n"]
[201.281956, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [10s elapsed]\u001b[0m\u001b[0m\r\n"]
[211.282641, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [20s elapsed]\u001b[0m\u001b[0m\r\n"]
[221.28392, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [30s elapsed]\u001b[0m\u001b[0m\r\n"]
[231.284139, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [40s elapsed]\u001b[0m\u001b[0m\r\n"]
[241.284517, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [50s elapsed]\u001b[0m\u001b[0m\r\n"]
[251.284742, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [1m0s elapsed]\u001b[0m\u001b[0m\r\n"]
[261.285566, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [1m10s elapsed]\u001b[0m\u001b[0m\r\n"]
[271.286354, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [1m20s elapsed]\u001b[0m\u001b[0m\r\n"]
[281.286831, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [1m30s elapsed]\u001b[0m\u001b[0m\r\n"]
[291.287256, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [1m40s elapsed]\u001b[0m\u001b[0m\r\n"]
[301.287763, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [1m50s elapsed]\u001b[0m\u001b[0m\r\n"]
[311.288219, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Still creating... [2m0s elapsed]\u001b[0m\u001b[0m\r\n"]
[314.206517, "o", "\u001b[0m\u001b[1maws_lb.this[0]: Creation complete after 2m3s [id=arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6]\u001b[0m\r\n"]
[315.202537, "o", "\u001b[0m\u001b[1maws_lb_listener.frontend_http_tcp[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[315.646536, "o", "\u001b[0m\u001b[1maws_lb_listener.frontend_http_tcp[0]: Creation complete after 0s [id=arn:aws:elasticloadbalancing:us-east-2:123456789012:listener/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6/1023862c32bf8529]\u001b[0m\r\n"]
[316.935776, "o", "Releasing state lock. This may take a few moments...\r\n"]
[317.330049, "o", "\u001b[0m\u001b[1m\u001b[32m\r\nApply complete! Resources: 4 added, 0 changed, 0 destroyed.\r\n\u001b[0m\u001b[0m\u001b[1m\u001b[32m\r\nOutputs:\r\n\r\n\u001b[0mhttp_tcp_listener_arns = [\r\n  \"arn:aws:elasticloadbalancing:us-east-2:123456789012:listener/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6/1023862c32bf8529\",\r\n]\r\nhttp_tcp_listener_ids = [\r\n  \"arn:aws:elasticloadbalancing:us-east-2:123456789012:listener/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6/1023862c32bf8529\",\r\n]\r\nhttps_listener_arns = []\r\nhttps_listener_ids = []\r\nlb_arn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\nlb_arn_suffix = \"app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\nlb_dns_name = \"terragrunt-ecs-blueprint-dev-alb-2071452834.us-east-2.elb.amazonaws.com\"\r\nlb_id = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\nlb_zone_id = \"Z3AADJGX6KTTL2\"\r\nsecurity_group_arn = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0d2a569a862d880f0\"\r\nsecurity_group_id = \"sg-0d2a569a862d880f0\"\r\ntarget_group_arn_suffixes = [\r\n  \"targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\",\r\n]\r\ntarget_group_arns = [\r\n  \"arn:aws:elasticloadbalancing:us-east-2:123456789012:targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\",\r\n]\r\ntarget_group_attachments = {}\r\ntarget_group_names = [\r\n  \"demo-20230807154420354600000002\",\r\n]\r\n"]
[317.728101, "o", "\u001b[33mWARN\u001b[0m[0203] No double-slash (//) found in source URL /terraform-aws-modules/ecs/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster] \r\n"]
[317.73744, "o", "\u001b[33mWARN\u001b[0m[0203] No double-slash (//) found in source URL /terraform-aws-modules/alb/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB] \r\n"]
[329.106746, "o", "\u001b[0m\u001b[1mdata.aws_region.current: Reading...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1mdata.aws_caller_identity.current: Reading...\u001b[0m\u001b[0m\r\n"]
[329.10692, "o", "\u001b[0m\u001b[1mmodule.container_definition[\"ecs-sample\"].data.aws_region.current: Reading...\u001b[0m\u001b[0m\r\n"]
[329.107804, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.task_exec[0]: Reading...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1mdata.aws_partition.current: Reading...\u001b[0m\u001b[0m\r\n"]
[329.108065, "o", "\u001b[0m\u001b[1mdata.aws_region.current: Read complete after 0s [id=us-east-2]\u001b[0m\r\n\u001b[0m\u001b[1mmodule.container_definition[\"ecs-sample\"].data.aws_region.current: Read complete after 0s [id=us-east-2]\u001b[0m\r\n"]
[329.108607, "o", "\u001b[0m\u001b[1mdata.aws_partition.current: Read complete after 0s [id=aws]\u001b[0m\r\n"]
[329.110649, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.task_exec[0]: Read complete after 0s [id=1415633931]\u001b[0m\r\n"]
[329.110947, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.task_exec_assume[0]: Reading...\u001b[0m\u001b[0m\r\n"]
[329.111956, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.task_exec_assume[0]: Read complete after 0s [id=2291109037]\u001b[0m\r\n"]
[329.47199, "o", "\u001b[0m\u001b[1mdata.aws_caller_identity.current: Read complete after 0s [id=123456789012]\u001b[0m\r\n"]
[329.474268, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.tasks_assume[0]: Reading...\u001b[0m\u001b[0m\r\n"]
[329.475662, "o", "\u001b[0m\u001b[1mdata.aws_iam_policy_document.tasks_assume[0]: Read complete after 0s [id=2015757145]\u001b[0m\r\n"]
[329.551654, "o", "\r\nTerraform used the selected providers to generate the following execution\r\nplan. Resource actions are indicated with the following symbols:\r\n  \u001b[32m+\u001b[0m create\u001b[0m\r\n \u001b[36m<=\u001b[0m read (data resources)\u001b[0m\r\n\r\nTerraform will perform the following actions:\r\n\r\n\u001b[1m  # data.aws_ecs_task_definition.this[0]\u001b[0m will be read during apply\r\n  # (depends on a resource or a module with changes pending)\r\n\u001b[0m \u001b[36m<=\u001b[0m\u001b[0m data \"aws_ecs_task_definition\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn_without_revision = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m execution_role_arn   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m family               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m network_mode         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m revision             = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m status               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m task_definition      = \"sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m task_role_arn        = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_appautoscaling_policy.this[\"cpu\"]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_appautoscaling_policy\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m alarm_arns         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name               = \"cpu\"\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_type        = \"TargetTrackingScaling\"\r\n      \u001b[32m+\u001b[0m\u001b[0m resource_id        = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m scalable_dimension = \"ecs:service:DesiredCount\"\r\n      \u001b[32m+\u001b[0m\u001b[0m service_namespace  = \"ecs\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m target_tracking_scaling_policy_configuration {\r\n          \u001b[32m+\u001b[0m\u001b[0m disable_scale_in   = false\r\n          \u001b[32m+\u001b[0m\u001b[0m scale_in_cooldown  = 300\r\n          \u001b[32m+\u001b[0m\u001b[0m scale_out_cooldown = 60\r\n          \u001b[32m+\u001b[0m\u001b[0m target_value       = 75\r\n\r\n          \u001b[32m+\u001b[0m\u001b[0m predefined_metric_specification {\r\n              \u001b[32m+\u001b[0m\u001b[0m predefined_metric_type = \"ECSServiceAverageCPUUtilization\"\r\n            }\r\n        }\r\n    }\r\n"]
[329.551807, "o", "\r\n\u001b[1m  # aws_appautoscaling_policy.this[\"memory\"]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_appautoscaling_policy\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m alarm_arns         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name               = \"memory\"\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_type        = \"TargetTrackingScaling\"\r\n      \u001b[32m+\u001b[0m\u001b[0m resource_id        = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m scalable_dimension = \"ecs:service:DesiredCount\"\r\n      \u001b[32m+\u001b[0m\u001b[0m service_namespace  = \"ecs\"\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m target_tracking_scaling_policy_configuration {\r\n          \u001b[32m+\u001b[0m\u001b[0m disable_scale_in   = false\r\n          \u001b[32m+\u001b[0m\u001b[0m scale_in_cooldown  = 300\r\n          \u001b[32m+\u001b[0m\u001b[0m scale_out_cooldown = 60\r\n          \u001b[32m+\u001b[0m\u001b[0m target_value       = 75\r\n\r\n          \u001b[32m+\u001b[0m\u001b[0m predefined_metric_specification {\r\n              \u001b[32m+\u001b[0m\u001b[0m predefined_metric_type = \"ECSServiceAverageMemoryUtilization\"\r\n            }\r\n        }\r\n    }\r\n\r\n\u001b[1m  # aws_appautoscaling_target.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_appautoscaling_target\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_capacity       = 10\r\n      \u001b[32m+\u001b[0m\u001b[0m min_capacity       = 1\r\n      \u001b[32m+\u001b[0m\u001b[0m resource_id        = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m role_arn           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m scalable_dimension = \"ecs:service:DesiredCount\"\r\n      \u001b[32m+\u001b[0m\u001b[0m service_namespace  = \"ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\" = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"  = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"    = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n"]
[329.551949, "o", "\r\n\u001b[1m  # aws_ecs_service.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_ecs_service\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m cluster                            = \"arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs\"\r\n      \u001b[32m+\u001b[0m\u001b[0m deployment_maximum_percent         = 200\r\n      \u001b[32m+\u001b[0m\u001b[0m deployment_minimum_healthy_percent = 66\r\n      \u001b[32m+\u001b[0m\u001b[0m desired_count                      = 1\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_ecs_managed_tags            = true\r\n      \u001b[32m+\u001b[0m\u001b[0m enable_execute_command             = false\r\n      \u001b[32m+\u001b[0m\u001b[0m force_new_deployment               = true\r\n      \u001b[32m+\u001b[0m\u001b[0m iam_role                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m launch_type                        = \"FARGATE\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name                               = \"sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m platform_version                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m scheduling_strategy                = \"REPLICA\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                               = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                           = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m task_definition                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m triggers                           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m wait_for_steady_state              = false\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m load_balancer {\r\n          \u001b[32m+\u001b[0m\u001b[0m container_name   = \"ecs-sample\"\r\n          \u001b[32m+\u001b[0m\u001b[0m container_port   = 80\r\n          \u001b[32m+\u001b[0m\u001b[0m target_group_arn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\"\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m network_configuration {\r\n          \u001b[32m+\u001b[0m\u001b[0m assign_public_ip = true\r\n          \u001b[32m+\u001b[0m\u001b[0m subnets          = [\r\n              \u001b[32m+\u001b[0m\u001b[0m \"subnet-032fc5852105a890c\",\r\n              \u001b[32m+\u001b[0m\u001b[0m \"subnet-073eb7d9dfe5e5b3a\",\r\n            ]\r\n        }\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m timeouts {}\r\n    }\r\n"]
[329.552097, "o", "\r\n\u001b[1m  # aws_ecs_task_definition.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_ecs_task_definition\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                      = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m arn_without_revision     = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m container_definitions    = jsonencode(\r\n            [\r\n              \u001b[32m+\u001b[0m\u001b[0m {\r\n                  \u001b[32m+\u001b[0m\u001b[0m cpu                    = 256\r\n                  \u001b[32m+\u001b[0m\u001b[0m essential              = true\r\n                  \u001b[32m+\u001b[0m\u001b[0m image                  = \"public.ecr.aws/ecs-sample-image/amazon-ecs-sample:latest\"\r\n                  \u001b[32m+\u001b[0m\u001b[0m interactive            = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m logConfiguration       = {\r\n                      \u001b[32m+\u001b[0m\u001b[0m logDriver = \"awslogs\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m options   = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m awslogs-create-group  = \"true\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m awslogs-group         = \"amazon-ecs-sample\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m awslogs-region        = \"us-east-2\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m awslogs-stream-prefix = \"sample\"\r\n                        }\r\n                    }\r\n                  \u001b[32m+\u001b[0m\u001b[0m memory                 = 512\r\n                  \u001b[32m+\u001b[0m\u001b[0m name                   = \"ecs-sample\"\r\n                  \u001b[32m+\u001b[0m\u001b[0m portMappings           = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m {\r\n                          \u001b[32m+\u001b[0m\u001b[0m containerPort = 80\r\n                          \u001b[32m+\u001b[0m\u001b[0m name          = \"ecs-sample\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m protocol      = \"tcp\"\r\n                        },\r\n                    ]\r\n                  \u001b[32m+\u001b[0m\u001b[0m privileged             = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m pseudoTerminal         = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m readonlyRootFilesystem = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m startTimeout           = 30\r\n                  \u001b[32m+\u001b[0m\u001b[0m stopTimeout            = 120\r\n                },\r\n            ]\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m cpu                      = \"256\"\r\n      \u001b[32m+\u001b[0m\u001b[0m execution_role_arn       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m family                   = \"sample-dev\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id                       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m memory                   = \"512\"\r\n      \u001b[32m+\u001b[0m\u001b[0m network_mode             = \"awsvpc\"\r\n      \u001b[32m+\u001b[0m\u001b[0m requires_compatibilities = [\r\n          \u001b[32m+\u001b[0m\u001b[0m \"FARGATE\",\r\n        ]\r\n      \u001b[32m+\u001b[0m\u001b[0m revision                 = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m skip_destroy             = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                     = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                 = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m task_role_arn            = (known after apply)\r\n\r\n      \u001b[32m+\u001b[0m\u001b[0m runtime_platform {\r\n          \u001b[32m+\u001b[0m\u001b[0m cpu_architecture        = \"X86_64\"\r\n          \u001b[32m+\u001b[0m\u001b[0m operating_system_family = \"LINUX\"\r\n        }\r\n    }\r\n"]
[329.552261, "o", "\r\n\u001b[1m  # aws_iam_policy.task_exec[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_policy\" \"task_exec\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description = \"Task execution role IAM policy\"\r\n      \u001b[32m+\u001b[0m\u001b[0m id          = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name        = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix = \"dev-terragrunt-ecs-blueprint-ecs-role-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path        = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m policy      = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = [\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:PutLogEvents\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"logs:CreateLogStream\",\r\n                        ]\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"Logs\"\r\n                    },\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = [\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"ecr:GetDownloadUrlForLayer\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"ecr:GetAuthorizationToken\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"ecr:BatchGetImage\",\r\n                          \u001b[32m+\u001b[0m\u001b[0m \"ecr:BatchCheckLayerAvailability\",\r\n                        ]\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"ECR\"\r\n                    },\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = \"ssm:GetParameters\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"arn:aws:ssm:*:*:parameter/*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"GetSSMParams\"\r\n                    },\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action   = \"secretsmanager:GetSecretValue\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect   = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Resource = \"arn:aws:secretsmanager:*:*:secret:*\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid      = \"GetSecrets\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_id   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m tags        = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n"]
[329.552396, "o", "\r\n\u001b[1m  # aws_iam_role.task_exec[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role\" \"task_exec\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assume_role_policy    = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action    = \"sts:AssumeRole\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect    = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Principal = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m Service = \"ecs-tasks.amazonaws.com\"\r\n                        }\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid       = \"ECSTaskExecutionAssumeRole\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m create_date           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m description           = \"Task execution role for dev-terragrunt-ecs-blueprint-ecs-role\"\r\n      \u001b[32m+\u001b[0m\u001b[0m force_detach_policies = true\r\n      \u001b[32m+\u001b[0m\u001b[0m id                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m managed_policy_arns   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_session_duration  = 3600\r\n      \u001b[32m+\u001b[0m\u001b[0m name                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix           = \"dev-terragrunt-ecs-blueprint-ecs-role-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path                  = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                  = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m unique_id             = (known after apply)\r\n    }\r\n"]
[329.552537, "o", "\r\n\u001b[1m  # aws_iam_role.tasks[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role\" \"tasks\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn                   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m assume_role_policy    = jsonencode(\r\n            {\r\n              \u001b[32m+\u001b[0m\u001b[0m Statement = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m Action    = \"sts:AssumeRole\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Condition = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m ArnLike      = {\r\n                              \u001b[32m+\u001b[0m\u001b[0m \"aws:SourceArn\" = \"arn:aws:ecs:us-east-2:123456789012:*\"\r\n                            }\r\n                          \u001b[32m+\u001b[0m\u001b[0m StringEquals = {\r\n                              \u001b[32m+\u001b[0m\u001b[0m \"aws:SourceAccount\" = \"123456789012\"\r\n                            }\r\n                        }\r\n                      \u001b[32m+\u001b[0m\u001b[0m Effect    = \"Allow\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m Principal = {\r\n                          \u001b[32m+\u001b[0m\u001b[0m Service = \"ecs-tasks.amazonaws.com\"\r\n                        }\r\n                      \u001b[32m+\u001b[0m\u001b[0m Sid       = \"ECSTasksAssumeRole\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m Version   = \"2012-10-17\"\r\n            }\r\n        )\r\n      \u001b[32m+\u001b[0m\u001b[0m create_date           = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m force_detach_policies = true\r\n      \u001b[32m+\u001b[0m\u001b[0m id                    = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m managed_policy_arns   = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m max_session_duration  = 3600\r\n      \u001b[32m+\u001b[0m\u001b[0m name                  = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix           = \"sample-dev-\"\r\n      \u001b[32m+\u001b[0m\u001b[0m path                  = \"/\"\r\n      \u001b[32m+\u001b[0m\u001b[0m tags                  = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m unique_id             = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # aws_iam_role_policy_attachment.task_exec[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role_policy_attachment\" \"task_exec\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_arn = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m role       = (known after apply)\r\n    }\r\n"]
[329.552619, "o", "\r\n\u001b[1m  # aws_iam_role_policy_attachment.task_exec_additional[\"logs_full\"]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_iam_role_policy_attachment\" \"task_exec_additional\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m id         = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m policy_arn = \"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\"\r\n      \u001b[32m+\u001b[0m\u001b[0m role       = (known after apply)\r\n    }\r\n\r\n\u001b[1m  # module.container_definition[\"ecs-sample\"].aws_cloudwatch_log_group.this[0]\u001b[0m will be created\r\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_cloudwatch_log_group\" \"this\" {\r\n      \u001b[32m+\u001b[0m\u001b[0m arn               = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m id                = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m name              = \"/aws/ecs/sample-dev/ecs-sample\"\r\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix       = (known after apply)\r\n      \u001b[32m+\u001b[0m\u001b[0m retention_in_days = 14\r\n      \u001b[32m+\u001b[0m\u001b[0m skip_destroy      = false\r\n      \u001b[32m+\u001b[0m\u001b[0m tags              = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m tags_all          = {\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Initiative\"  = \"BlogsAmbassador\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Layer\"       = \"Application\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"ManagedBy\"   = \"Terragrunt\"\r\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        }\r\n    }\r\n\r\n\u001b[1mPlan:\u001b[0m 11 to add, 0 to change, 0 to destroy.\r\n\u001b[0m\r\nChanges to Outputs:\r\n  \u001b[32m+\u001b[0m\u001b[0m autoscaling_policies          = {\r\n      \u001b[32m+\u001b[0m\u001b[0m cpu    = {\r\n          \u001b[32m+\u001b[0m\u001b[0m alarm_arns                                   = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m arn                                          = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m id                                           = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m name                                         = \"cpu\"\r\n          \u001b[32m+\u001b[0m\u001b[0m policy_type                                  = \"TargetTrackingScaling\"\r\n          \u001b[32m+\u001b[0m\u001b[0m resource_id                                  = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m scalable_dimension                           = \"ecs:service:DesiredCount\"\r\n          \u001b[32m+\u001b[0m\u001b[0m service_namespace                            = \"ecs\"\r\n          \u001b[32m+\u001b[0m\u001b[0m step_scaling_policy_configuration            = []\r\n          \u001b[32m+\u001b[0m\u001b[0m target_tracking_scaling_policy_configuration = [\r\n              \u001b[32m+\u001b[0m\u001b[0m {\r\n                  \u001b[32m+\u001b[0m\u001b[0m customized_metric_specification = []\r\n                  \u001b[32m+\u001b[0m\u001b[0m disable_scale_in                = false\r\n"]
[329.552685, "o", "                  \u001b[32m+\u001b[0m\u001b[0m predefined_metric_specification = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m {\r\n                          \u001b[32m+\u001b[0m\u001b[0m predefined_metric_type = \"ECSServiceAverageCPUUtilization\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m resource_label         = \u001b[90mnull\u001b[0m\u001b[0m\r\n                        },\r\n                    ]\r\n                  \u001b[32m+\u001b[0m\u001b[0m scale_in_cooldown               = 300\r\n                  \u001b[32m+\u001b[0m\u001b[0m scale_out_cooldown              = 60\r\n                  \u001b[32m+\u001b[0m\u001b[0m target_value                    = 75\r\n                },\r\n            ]\r\n        }\r\n      \u001b[32m+\u001b[0m\u001b[0m memory = {\r\n          \u001b[32m+\u001b[0m\u001b[0m alarm_arns                                   = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m arn                                          = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m id                                           = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m name                                         = \"memory\"\r\n          \u001b[32m+\u001b[0m\u001b[0m policy_type                                  = \"TargetTrackingScaling\"\r\n          \u001b[32m+\u001b[0m\u001b[0m resource_id                                  = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n          \u001b[32m+\u001b[0m\u001b[0m scalable_dimension                           = \"ecs:service:DesiredCount\"\r\n          \u001b[32m+\u001b[0m\u001b[0m service_namespace                            = \"ecs\"\r\n          \u001b[32m+\u001b[0m\u001b[0m step_scaling_policy_configuration            = []\r\n          \u001b[32m+\u001b[0m\u001b[0m target_tracking_scaling_policy_configuration = [\r\n              \u001b[32m+\u001b[0m\u001b[0m {\r\n                  \u001b[32m+\u001b[0m\u001b[0m customized_metric_specification = []\r\n                  \u001b[32m+\u001b[0m\u001b[0m disable_scale_in                = false\r\n                  \u001b[32m+\u001b[0m\u001b[0m predefined_metric_specification = [\r\n                      \u001b[32m+\u001b[0m\u001b[0m {\r\n                          \u001b[32m+\u001b[0m\u001b[0m predefined_metric_type = \"ECSServiceAverageMemoryUtilization\"\r\n                          \u001b[32m+\u001b[0m\u001b[0m resource_label         = \u001b[90mnull\u001b[0m\u001b[0m\r\n                        },\r\n                    ]\r\n                  \u001b[32m+\u001b[0m\u001b[0m scale_in_cooldown               = 300\r\n                  \u001b[32m+\u001b[0m\u001b[0m scale_out_cooldown              = 60\r\n                  \u001b[32m+\u001b[0m\u001b[0m target_value                    = 75\r\n                },\r\n            ]\r\n        }\r\n    }\r\n  \u001b[32m+\u001b[0m\u001b[0m autoscaling_scheduled_actions = {}\r\n  \u001b[32m+\u001b[0m\u001b[0m container_definitions         = {\r\n      \u001b[32m+\u001b[0m\u001b[0m ecs-sample = {\r\n          \u001b[32m+\u001b[0m\u001b[0m cloudwatch_log_group_arn  = (known after apply)\r\n          \u001b[32m+\u001b[0m\u001b[0m cloudwatch_log_group_name = \"/aws/ecs/sample-dev/ecs-sample\"\r\n          \u001b[32m+\u001b[0m\u001b[0m container_definition      = {\r\n              \u001b[32m+\u001b[0m\u001b[0m cpu                    = 256\r\n              \u001b[32m+\u001b[0m\u001b[0m essential              = true\r\n              \u001b[32m+\u001b[0m\u001b[0m image                  = \"public.ecr.aws/ecs-sample-image/amazon-ecs-sample:latest\"\r\n              \u001b[32m+\u001b[0m\u001b[0m interactive            = false\r\n              \u001b[32m+\u001b[0m\u001b[0m logConfiguration       = {\r\n                  \u001b[32m+\u001b[0m\u001b[0m logDriver = \"awslogs\"\r\n                  \u001b[32m+\u001b[0m\u001b[0m options   = {\r\n                      \u001b[32m+\u001b[0m\u001b[0m awslogs-create-group  = \"true\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m awslogs-group         = \"amazon-ecs-sample\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m awslogs-region        = \"us-east-2\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m awslogs-stream-prefix = \"sample\"\r\n                    }\r\n                }\r\n              \u001b[32m+\u001b[0m\u001b[0m memory                 = 512\r\n              \u001b[32m+\u001b[0m\u001b[0m name                   = \"ecs-sample\"\r\n              \u001b[32m+\u001b[0m\u001b[0m portMappings           = [\r\n                  \u001b[32m+\u001b[0m\u001b[0m {\r\n                      \u001b[32m+\u001b[0m\u001b[0m containerPort = 80\r\n                      \u001b[32m+\u001b[0m\u001b[0m name          = \"ecs-sample\"\r\n                      \u001b[32m+\u001b[0m\u001b[0m protocol      = \"tcp\"\r\n                    },\r\n                ]\r\n              \u001b[32m+\u001b[0m\u001b[0m privileged             = false\r\n              \u001b[32m+\u001b[0m\u001b[0m pseudoTerminal         = false\r\n              \u001b[32m+\u001b[0m\u001b"]
[329.552727, "o", "[0m readonlyRootFilesystem = false\r\n              \u001b[32m+\u001b[0m\u001b[0m startTimeout           = 30\r\n              \u001b[32m+\u001b[0m\u001b[0m stopTimeout            = 120\r\n            }\r\n        }\r\n    }\r\n  \u001b[32m+\u001b[0m\u001b[0m id                            = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m name                          = \"sample-dev\"\r\n  \u001b[32m+\u001b[0m\u001b[0m task_definition_arn           = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m task_definition_family        = \"sample-dev\"\r\n  \u001b[32m+\u001b[0m\u001b[0m task_definition_revision      = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m task_exec_iam_role_arn        = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m task_exec_iam_role_name       = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m task_exec_iam_role_unique_id  = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m tasks_iam_role_arn            = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m tasks_iam_role_name           = (known after apply)\r\n  \u001b[32m+\u001b[0m\u001b[0m tasks_iam_role_unique_id      = (known after apply)\r\n"]
[331.350418, "o", "\u001b[0m\u001b[1mmodule.container_definition[\"ecs-sample\"].aws_cloudwatch_log_group.this[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_iam_policy.task_exec[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_iam_role.task_exec[0]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_iam_role.tasks[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[332.257887, "o", "\u001b[0m\u001b[1maws_iam_policy.task_exec[0]: Creation complete after 1s [id=arn:aws:iam::123456789012:policy/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808500000003]\u001b[0m\r\n"]
[332.336974, "o", "\u001b[0m\u001b[1mmodule.container_definition[\"ecs-sample\"].aws_cloudwatch_log_group.this[0]: Creation complete after 1s [id=/aws/ecs/sample-dev/ecs-sample]\u001b[0m\r\n"]
[332.337156, "o", "\u001b[0m\u001b[1maws_iam_role.tasks[0]: Creation complete after 1s [id=sample-dev-20230807154642808400000002]\u001b[0m\r\n"]
[332.341663, "o", "\u001b[0m\u001b[1maws_iam_role.task_exec[0]: Creation complete after 1s [id=dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001]\u001b[0m\r\n"]
[332.343642, "o", "\u001b[0m\u001b[1maws_iam_role_policy_attachment.task_exec_additional[\"logs_full\"]: Creating...\u001b[0m\u001b[0m\r\n\u001b[0m\u001b[1maws_iam_role_policy_attachment.task_exec[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[332.348211, "o", "\u001b[0m\u001b[1maws_ecs_task_definition.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[332.553333, "o", "\u001b[0m\u001b[1maws_iam_role_policy_attachment.task_exec[0]: Creation complete after 0s [id=dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001-20230807154643916000000004]\u001b[0m\r\n"]
[332.574506, "o", "\u001b[0m\u001b[1maws_iam_role_policy_attachment.task_exec_additional[\"logs_full\"]: Creation complete after 0s [id=dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001-20230807154643937100000005]\u001b[0m\r\n"]
[333.057945, "o", "\u001b[0m\u001b[1maws_ecs_task_definition.this[0]: Creation complete after 1s [id=sample-dev]\u001b[0m\r\n"]
[333.059357, "o", "\u001b[0m\u001b[1mdata.aws_ecs_task_definition.this[0]: Reading...\u001b[0m\u001b[0m\r\n"]
[333.164022, "o", "\u001b[0m\u001b[1mdata.aws_ecs_task_definition.this[0]: Read complete after 0s [id=arn:aws:ecs:us-east-2:123456789012:task-definition/sample-dev:2]\u001b[0m\r\n"]
[333.170566, "o", "\u001b[0m\u001b[1maws_ecs_service.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[333.992903, "o", "\u001b[0m\u001b[1maws_ecs_service.this[0]: Creation complete after 0s [id=arn:aws:ecs:us-east-2:123456789012:service/dev-terragrunt-ecs-blueprint-ecs/sample-dev]\u001b[0m\r\n"]
[333.996785, "o", "\u001b[0m\u001b[1maws_appautoscaling_target.this[0]: Creating...\u001b[0m\u001b[0m\r\n"]
[334.921962, "o", "\u001b[0m\u001b[1maws_appautoscaling_target.this[0]: Creation complete after 1s [id=service/dev-terragrunt-ecs-blueprint-ecs/sample-dev]\u001b[0m\r\n"]
[334.925011, "o", "\u001b[0m\u001b[1maws_appautoscaling_policy.this[\"memory\"]: Creating...\u001b[0m\u001b[0m\r\n"]
[334.925129, "o", "\u001b[0m\u001b[1maws_appautoscaling_policy.this[\"cpu\"]: Creating...\u001b[0m\u001b[0m\r\n"]
[335.377775, "o", "\u001b[0m\u001b[1maws_appautoscaling_policy.this[\"memory\"]: Creation complete after 1s [id=memory]\u001b[0m\r\n"]
[335.715516, "o", "\u001b[0m\u001b[1maws_appautoscaling_policy.this[\"cpu\"]: Creation complete after 1s [id=cpu]\u001b[0m\r\n"]
[337.212623, "o", "Releasing state lock. This may take a few moments...\r\n"]
[337.597602, "o", "\u001b[0m\u001b[1m\u001b[32m\r\nApply complete! Resources: 11 added, 0 changed, 0 destroyed.\r\n\u001b[0m\u001b[0m\u001b[1m\u001b[32m\r\nOutputs:\r\n\r\n\u001b[0m"]
[337.59787, "o", "autoscaling_policies = {\r\n  \"cpu\" = {\r\n    \"alarm_arns\" = tolist([\r\n      \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmHigh-68e24e2b-88a9-414e-81ea-941a1a37f9e6\",\r\n      \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmLow-cb70e5f3-6a8b-4d65-957c-076f0bfe83e0\",\r\n    ])\r\n    \"arn\" = \"arn:aws:autoscaling:us-east-2:123456789012:scalingPolicy:ad5c1620-5b88-4198-a6e7-733e2543fb2a:resource/ecs/service/dev-terragrunt-ecs-blueprint-ecs/sample-dev:policyName/cpu\"\r\n    \"id\" = \"cpu\"\r\n    \"name\" = \"cpu\"\r\n    \"policy_type\" = \"TargetTrackingScaling\"\r\n    \"resource_id\" = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n    \"scalable_dimension\" = \"ecs:service:DesiredCount\"\r\n    \"service_namespace\" = \"ecs\"\r\n    \"step_scaling_policy_configuration\" = tolist([])\r\n    \"target_tracking_scaling_policy_configuration\" = tolist([\r\n      {\r\n        \"customized_metric_specification\" = tolist([])\r\n        \"disable_scale_in\" = false\r\n        \"predefined_metric_specification\" = tolist([\r\n          {\r\n            \"predefined_metric_type\" = \"ECSServiceAverageCPUUtilization\"\r\n            \"resource_label\" = \"\"\r\n          },\r\n        ])\r\n        \"scale_in_cooldown\" = 300\r\n        \"scale_out_cooldown\" = 60\r\n        \"target_value\" = 75\r\n      },\r\n    ])\r\n  }\r\n  \"memory\" = {\r\n    \"alarm_arns\" = tolist([\r\n      \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmHigh-c94a3c4e-9fcc-4920-85f8-0794d83642e7\",\r\n      \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmLow-835bd24f-97de-47b0-9835-b8603943456f\",\r\n    ])\r\n    \"arn\" = \"arn:aws:autoscaling:us-east-2:123456789012:scalingPolicy:ad5c1620-5b88-4198-a6e7-733e2543fb2a:resource/ecs/service/dev-terragrunt-ecs-blueprint-ecs/sample-dev:policyName/memory\"\r\n    \"id\" = \"memory\"\r\n    \"name\" = \"memory\"\r\n    \"policy_type\" = \"TargetTrackingScaling\"\r\n    \"resource_id\" = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n    \"scalable_dimension\" = \"ecs:service:DesiredCount\"\r\n    \"service_namespace\" = \"ecs\"\r\n    \"step_scaling_policy_configuration\" = tolist([])\r\n    \"target_tracking_scaling_policy_configuration\" = tolist([\r\n      {\r\n        \"customized_metric_specification\" = tolist([])\r\n        \"disable_scale_in\" = false\r\n        \"predefined_metric_specification\" = tolist([\r\n          {\r\n            \"predefined_metric_type\" = \"ECSServiceAverageMemoryUtilization\"\r\n            \"resource_label\" = \"\"\r\n          },\r\n        ])\r\n        \"scale_in_cooldown\" = 300\r\n        \"scale_out_cooldown\" = 60\r\n        \"target_value\" = 75\r\n      },\r\n    ])\r\n  }\r\n}\r\nautoscaling_scheduled_actions = {}\r\ncontainer_definitions = {\r\n  \"ecs-sample\" = {\r\n    \"cloudwatch_log_group_arn\" = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/ecs/sample-dev/ecs-sample\"\r\n    \"cloudwatch_log_group_name\" = \"/aws/ecs/sample-dev/ecs-sample\"\r\n    \"container_definition\" = {\r\n      \"cpu\" = 256\r\n      \"essential\" = true\r\n      \"image\" = \"public.ecr.aws/ecs-sample-image/amazon-ecs-sample:latest\"\r\n      \"interactive\" = false\r\n      \"logConfiguration\" = {\r\n        \"logDriver\" = \"awslogs\"\r\n        \"options\" = {\r\n          \"awslogs-create-group\" = \"true\"\r\n          \"awslogs-group\" = \"amazon-ecs-sample\"\r\n          \"awslogs-region\" = \"us-east-2\"\r\n          \"awslogs-stream-prefix\" = \"sample\"\r\n        }\r\n      }\r\n      \"memory\" = 512\r\n      \"name\" = \"ecs-sample\"\r\n      \"portMappings\" = tolist([\r\n        {\r\n          \"containerPort\" = 80\r\n          \"name\" = \"ecs-sample\"\r\n          \"protocol\" = \"tcp\"\r\n        },\r\n      ])\r\n      \"privileged\" = false\r\n      \"pseudoTerminal\" = false\r\n      \"readonlyRootFilesystem\" = false\r\n      \"startTimeout\" = 30\r\n      \"stopTimeout\" = 120\r\n    }\r\n  }\r\n}\r\nid = \"arn:aws:ecs:us-east-2:123456789012:service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\nname = \"sample-dev\"\r\ntask_definition_arn = \"arn:aws:ecs:us-east-2:123456789012:task-definition/sample-d"]
[337.597906, "o", "ev:2\"\r\ntask_definition_family = \"sample-dev\"\r\ntask_definition_revision = 2\r\ntask_exec_iam_role_arn = \"arn:aws:iam::123456789012:role/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\ntask_exec_iam_role_name = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\ntask_exec_iam_role_unique_id = \"AROAYKBUNPZN5AZU45E2C\"\r\ntasks_iam_role_arn = \"arn:aws:iam::123456789012:role/sample-dev-20230807154642808400000002\"\r\ntasks_iam_role_name = \"sample-dev-20230807154642808400000002\"\r\ntasks_iam_role_unique_id = \"AROAYKBUNPZN6JDDOEHM4\"\r\n"]
[337.607364, "o", "\u001b[?2004h\u001b]0;labvel@VelPro: ~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure\u0007\u001b[01;32mlabvel@VelPro\u001b[00m:\u001b[01;34m~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure\u001b[00m$ "]
[342.277449, "o", "te"]
[342.552416, "o", "r"]
[342.643627, "o", "r"]
[342.822351, "o", "a"]
[343.048394, "o", "g"]
[343.229387, "o", "r"]
[343.677745, "o", "\b\u001b[K"]
[343.812404, "o", "\b\u001b[K"]
[343.925765, "o", "\b\u001b[K"]
[344.083259, "o", "\b\u001b[K"]
[344.196491, "o", "\b\u001b[K"]
[344.307846, "o", "\b\u001b[K"]
[344.464838, "o", "\b\u001b[K"]
[345.321424, "o", "TF_VAR_env=dev terragrunt run-all apply "]
[346.804761, "o", "\b\u001b[K"]
[347.00805, "o", "\b\u001b[K"]
[347.142452, "o", "\b\u001b[K"]
[347.299564, "o", "\b\u001b[K"]
[347.435418, "o", "\b\u001b[K"]
[347.750044, "o", "\b\u001b[K"]
[347.997333, "o", "s"]
[348.132794, "o", "h"]
[348.31326, "o", "o"]
[348.425745, "o", "w"]
[349.213685, "o", " "]
[349.550334, "o", "\r\n"]
[349.550394, "o", "\u001b[?2004l\r"]
[349.799358, "o", "\u001b[36mINFO\u001b[0m[0000] The stack at /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure will be processed in the following order for command show:\r\nGroup 1\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Operations/ResourceGroup\r\n\r\nGroup 2\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB\r\n\r\nGroup 3\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ECS/SampleService\r\n\r\nGroup 4\r\n- Module /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSServices/SampleService\r\n \r\n"]
[349.939779, "o", "\u001b[33mWARN\u001b[0m[0000] No double-slash (//) found in source URL /terraform-aws-modules/ecs/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster] \r\n"]
[349.940465, "o", "\u001b[33mWARN\u001b[0m[0000] No double-slash (//) found in source URL /terraform-aws-modules/vpc/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC] \r\n"]
[349.940599, "o", "\u001b[33mWARN\u001b[0m[0000] No double-slash (//) found in source URL /home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/modules/Resource_Groups. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Operations/ResourceGroup] \r\n"]
[356.585594, "o", "# aws_resourcegroups_group.resource_group[0]:\r\n"]
[356.586528, "o", "resource \"aws_resourcegroups_group\" \"resource_group\" {\r\n    arn         = \"arn:aws:resource-groups:us-east-2:123456789012:group/terragrunt-ecs-blueprint-dev\"\r\n    description = \"Resource group for terragrunt-ecs-blueprint  Resources for dev\"\r\n    id          = \"terragrunt-ecs-blueprint-dev\"\r\n    name        = \"terragrunt-ecs-blueprint-dev\"\r\n    tags        = {\r\n        \"Contact\"     = \"Platform Architects\"\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Transversal\"\r\n        \"Owner\"       = \"Lead Platform\"\r\n        \"Protected\"   = \"true\"\r\n    }\r\n    tags_all    = {\r\n        \"Contact\"     = \"Platform Architects\"\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Transversal\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Owner\"       = \"Lead Platform\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n        \"Protected\"   = \"true\"\r\n    }\r\n\r\n    resource_query {\r\n        query = jsonencode(\r\n            {\r\n                ResourceTypeFilters = [\r\n                    \"AWS::AllSupported\",\r\n                ]\r\n                TagFilters          = [\r\n                    {\r\n                        Key    = \"Project\"\r\n                        Values = [\r\n                            \"terragrunt-ecs-blueprint\",\r\n                        ]\r\n                    },\r\n                ]\r\n            }\r\n        )\r\n        type  = \"TAG_FILTERS_1_0\"\r\n    }\r\n}\r\n\r\n\r\nOutputs:\r\n\r\nresource_group_arn = [\r\n    \"arn:aws:resource-groups:us-east-2:123456789012:group/terragrunt-ecs-blueprint-dev\",\r\n]\r\n"]
[356.677898, "o", "# data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]:\r\n"]
[356.678139, "o", "data \"aws_iam_policy_document\" \"flow_log_cloudwatch_assume_role\" {\r\n    id      = \"1021377347\"\r\n    json    = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action    = \"sts:AssumeRole\"\r\n                    Effect    = \"Allow\"\r\n                    Principal = {\r\n                        Service = \"vpc-flow-logs.amazonaws.com\"\r\n                    }\r\n                    Sid       = \"AWSVPCFlowLogsAssumeRole\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    version = \"2012-10-17\"\r\n\r\n    statement {\r\n        actions       = [\r\n            \"sts:AssumeRole\",\r\n        ]\r\n        effect        = \"Allow\"\r\n        not_actions   = []\r\n        not_resources = []\r\n        resources     = []\r\n        sid           = \"AWSVPCFlowLogsAssumeRole\"\r\n\r\n        principals {\r\n            identifiers = [\r\n                \"vpc-flow-logs.amazonaws.com\",\r\n            ]\r\n            type        = \"Service\"\r\n        }\r\n    }\r\n}\r\n\r\n# data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]:\r\ndata \"aws_iam_policy_document\" \"vpc_flow_log_cloudwatch\" {\r\n    id      = \"2053943846\"\r\n    json    = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action   = [\r\n                        \"logs:PutLogEvents\",\r\n                        \"logs:DescribeLogStreams\",\r\n                        \"logs:DescribeLogGroups\",\r\n                        \"logs:CreateLogStream\",\r\n                    ]\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"*\"\r\n                    Sid      = \"AWSVPCFlowLogsPushToCloudWatch\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    version = \"2012-10-17\"\r\n\r\n    statement {\r\n        actions       = [\r\n            \"logs:CreateLogStream\",\r\n            \"logs:DescribeLogGroups\",\r\n            \"logs:DescribeLogStreams\",\r\n            \"logs:PutLogEvents\",\r\n        ]\r\n        effect        = \"Allow\"\r\n        not_actions   = []\r\n        not_resources = []\r\n        resources     = [\r\n            \"*\",\r\n        ]\r\n        sid           = \"AWSVPCFlowLogsPushToCloudWatch\"\r\n    }\r\n}\r\n\r\n# aws_cloudwatch_log_group.flow_log[0]:\r\n"]
[356.678351, "o", "resource \"aws_cloudwatch_log_group\" \"flow_log\" {\r\n    arn               = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/vpc-flow-log/vpc-030fc4e3350f272b0\"\r\n    id                = \"/aws/vpc-flow-log/vpc-030fc4e3350f272b0\"\r\n    name              = \"/aws/vpc-flow-log/vpc-030fc4e3350f272b0\"\r\n    retention_in_days = 0\r\n    skip_destroy      = false\r\n    tags              = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n    }\r\n    tags_all          = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n}\r\n\r\n# aws_db_subnet_group.database[0]:\r\n"]
[356.678477, "o", "resource \"aws_db_subnet_group\" \"database\" {\r\n    arn                     = \"arn:aws:rds:us-east-2:123456789012:subgrp:terragrunt-ecs-blueprint-dev-vpc\"\r\n    description             = \"Database subnet group for terragrunt-ecs-blueprint-dev-vpc\"\r\n    id                      = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n    name                    = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n    subnet_ids              = [\r\n        \"subnet-00aa0bf08ac949a4b\",\r\n        \"subnet-0b81e7b36ecf80560\",\r\n    ]\r\n    supported_network_types = [\r\n        \"IPV4\",\r\n    ]\r\n    tags                    = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n    }\r\n    tags_all                = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                  = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_default_network_acl.this[0]:\r\n"]
[356.678689, "o", "resource \"aws_default_network_acl\" \"this\" {\r\n    arn                    = \"arn:aws:ec2:us-east-2:123456789012:network-acl/acl-02cc0f723093c6ac4\"\r\n    default_network_acl_id = \"acl-02cc0f723093c6ac4\"\r\n    id                     = \"acl-02cc0f723093c6ac4\"\r\n    owner_id               = \"123456789012\"\r\n    subnet_ids             = [\r\n        \"subnet-00aa0bf08ac949a4b\",\r\n        \"subnet-032fc5852105a890c\",\r\n        \"subnet-073eb7d9dfe5e5b3a\",\r\n        \"subnet-0b81e7b36ecf80560\",\r\n        \"subnet-0d5a8df75ca238d16\",\r\n        \"subnet-0fcb1cc2267783607\",\r\n    ]\r\n    tags                   = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n    }\r\n    tags_all               = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n\r\n    egress {\r\n        action          = \"allow\"\r\n        from_port       = 0\r\n        ipv6_cidr_block = \"::/0\"\r\n        protocol        = \"-1\"\r\n        rule_no         = 101\r\n        to_port         = 0\r\n    }\r\n    egress {\r\n        action     = \"allow\"\r\n        cidr_block = \"0.0.0.0/0\"\r\n        from_port  = 0\r\n        protocol   = \"-1\"\r\n        rule_no    = 100\r\n        to_port    = 0\r\n    }\r\n\r\n    ingress {\r\n        action          = \"allow\"\r\n        from_port       = 0\r\n        ipv6_cidr_block = \"::/0\"\r\n        protocol        = \"-1\"\r\n        rule_no         = 101\r\n        to_port         = 0\r\n    }\r\n    ingress {\r\n        action     = \"allow\"\r\n        cidr_block = \"0.0.0.0/0\"\r\n        from_port  = 0\r\n        protocol   = \"-1\"\r\n        rule_no    = 100\r\n        to_port    = 0\r\n    }\r\n}\r\n\r\n# aws_default_route_table.default[0]:\r\n"]
[356.678777, "o", "resource \"aws_default_route_table\" \"default\" {\r\n    arn                    = \"arn:aws:ec2:us-east-2:123456789012:route-table/rtb-02cd8af79a2237b94\"\r\n    default_route_table_id = \"rtb-02cd8af79a2237b94\"\r\n    id                     = \"rtb-02cd8af79a2237b94\"\r\n    owner_id               = \"123456789012\"\r\n    route                  = []\r\n    tags                   = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n    }\r\n    tags_all               = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n\r\n    timeouts {\r\n        create = \"5m\"\r\n        update = \"5m\"\r\n    }\r\n}\r\n\r\n# aws_default_security_group.this[0]:\r\n"]
[356.679127, "o", "resource \"aws_default_security_group\" \"this\" {\r\n    arn                    = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-06c090779d45de155\"\r\n    description            = \"default VPC security group\"\r\n    egress                 = []\r\n    id                     = \"sg-06c090779d45de155\"\r\n    ingress                = []\r\n    name                   = \"default\"\r\n    owner_id               = \"123456789012\"\r\n    revoke_rules_on_delete = false\r\n    tags                   = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n    }\r\n    tags_all               = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-default\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_flow_log.this[0]:\r\nresource \"aws_flow_log\" \"this\" {\r\n    arn                      = \"arn:aws:ec2:us-east-2:123456789012:vpc-flow-log/fl-011e0b2b5ce3a6596\"\r\n    iam_role_arn             = \"arn:aws:iam::123456789012:role/vpc-flow-log-role-20230807154320842200000002\"\r\n    id                       = \"fl-011e0b2b5ce3a6596\"\r\n    log_destination          = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/vpc-flow-log/vpc-030fc4e3350f272b0\"\r\n    log_destination_type     = \"cloud-watch-logs\"\r\n    log_format               = \"${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}\"\r\n    log_group_name           = \"/aws/vpc-flow-log/vpc-030fc4e3350f272b0\"\r\n    max_aggregation_interval = 600\r\n    tags                     = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n    }\r\n    tags_all                 = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    traffic_type             = \"ALL\"\r\n    vpc_id                   = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_iam_policy.vpc_flow_log_cloudwatch[0]:\r\nresource \"aws_iam_policy\" \"vpc_flow_log_cloudwatch\" {\r\n    arn         = \"arn:aws:iam::123456789012:policy/vpc-flow-log-to-cloudwatch-20230807154320841900000001\"\r\n    id          = \"arn:aws:iam::123456789012:policy/vpc-flow-log-to-cloudwatch-20230807154320841900000001\"\r\n    name        = \"vpc-flow-log-to-cloudwatch-20230807154320841900000001\"\r\n    name_prefix = \"vpc-flow-log-to-cloudwatch-\"\r\n    path        = \"/\"\r\n    policy      = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action   = [\r\n                        \"logs:PutLogEvents\",\r\n                        \"logs:DescribeLogStreams\",\r\n                        \"logs:DescribeLogGroups\",\r\n                        \"logs:CreateLogStream\",\r\n                    ]\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"*\"\r\n                    Sid      = \"AWSVPCFlowLogsPushToCloudWatch\"\r\n                },\r\n"]
[356.67925, "o", "            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    policy_id   = \"ANPAYKBUNPZN4WKDI667O\"\r\n    tags        = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n    }\r\n    tags_all    = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n}\r\n\r\n# aws_iam_role.vpc_flow_log_cloudwatch[0]:\r\n"]
[356.679338, "o", "resource \"aws_iam_role\" \"vpc_flow_log_cloudwatch\" {\r\n    arn                   = \"arn:aws:iam::123456789012:role/vpc-flow-log-role-20230807154320842200000002\"\r\n    assume_role_policy    = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action    = \"sts:AssumeRole\"\r\n                    Effect    = \"Allow\"\r\n                    Principal = {\r\n                        Service = \"vpc-flow-logs.amazonaws.com\"\r\n                    }\r\n                    Sid       = \"AWSVPCFlowLogsAssumeRole\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    create_date           = \"2023-08-07T15:43:20Z\"\r\n    force_detach_policies = false\r\n    id                    = \"vpc-flow-log-role-20230807154320842200000002\"\r\n    managed_policy_arns   = []\r\n    max_session_duration  = 3600\r\n    name                  = \"vpc-flow-log-role-20230807154320842200000002\"\r\n    name_prefix           = \"vpc-flow-log-role-\"\r\n    path                  = \"/\"\r\n    tags                  = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n    }\r\n    tags_all              = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    unique_id             = \"AROAYKBUNPZNUJKYUEBLD\"\r\n}\r\n\r\n# aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch[0]:\r\n"]
[356.679445, "o", "resource \"aws_iam_role_policy_attachment\" \"vpc_flow_log_cloudwatch\" {\r\n    id         = \"vpc-flow-log-role-20230807154320842200000002-20230807154321912100000003\"\r\n    policy_arn = \"arn:aws:iam::123456789012:policy/vpc-flow-log-to-cloudwatch-20230807154320841900000001\"\r\n    role       = \"vpc-flow-log-role-20230807154320842200000002\"\r\n}\r\n\r\n# aws_internet_gateway.this[0]:\r\n"]
[356.679497, "o", "resource \"aws_internet_gateway\" \"this\" {\r\n    arn      = \"arn:aws:ec2:us-east-2:123456789012:internet-gateway/igw-0a9c3880af1688176\"\r\n    id       = \"igw-0a9c3880af1688176\"\r\n    owner_id = \"123456789012\"\r\n    tags     = {\r\n"]
[356.679561, "o", "        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n    }\r\n    tags_all = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n"]
[356.679651, "o", "    vpc_id   = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_route.public_internet_gateway[0]:\r\n"]
[356.679737, "o", "resource \"aws_route\" \"public_internet_gateway\" {\r\n    destination_cidr_block = \"0.0.0.0/0\"\r\n    gateway_id             = \"igw-0a9c3880af1688176\"\r\n    id                     = \"r-rtb-0b320955a26bff2701080289494\"\r\n    origin                 = \"CreateRoute\"\r\n    route_table_id         = \"rtb-0b320955a26bff270\"\r\n    state                  = \"active\"\r\n\r\n    timeouts {\r\n        create = \"5m\"\r\n    }\r\n}\r\n\r\n# aws_route_table.private[0]:\r\n"]
[356.680033, "o", "resource \"aws_route_table\" \"private\" {\r\n    arn              = \"arn:aws:ec2:us-east-2:123456789012:route-table/rtb-0a467b6a8854d2a9d\"\r\n    id               = \"rtb-0a467b6a8854d2a9d\"\r\n    owner_id         = \"123456789012\"\r\n    propagating_vgws = []\r\n    route            = []\r\n    tags             = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private\"\r\n    }\r\n    tags_all         = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id           = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_route_table.public[0]:\r\nresource \"aws_route_table\" \"public\" {\r\n    arn              = \"arn:aws:ec2:us-east-2:123456789012:route-table/rtb-0b320955a26bff270\"\r\n    id               = \"rtb-0b320955a26bff270\"\r\n    owner_id         = \"123456789012\"\r\n    propagating_vgws = []\r\n    route            = []\r\n    tags             = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public\"\r\n    }\r\n    tags_all         = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id           = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_route_table_association.database[0]:\r\nresource \"aws_route_table_association\" \"database\" {\r\n    id             = \"rtbassoc-07cbb1ef26fd10a1e\"\r\n    route_table_id = \"rtb-0a467b6a8854d2a9d\"\r\n    subnet_id      = \"subnet-00aa0bf08ac949a4b\"\r\n}\r\n\r\n# aws_route_table_association.database[1]:\r\n"]
[356.680168, "o", "resource \"aws_route_table_association\" \"database\" {\r\n    id             = \"rtbassoc-088697bd198913f73\"\r\n    route_table_id = \"rtb-0a467b6a8854d2a9d\"\r\n    subnet_id      = \"subnet-0b81e7b36ecf80560\"\r\n}\r\n\r\n# aws_route_table_association.private[0]:\r\n"]
[356.680238, "o", "resource \"aws_route_table_association\" \"private\" {\r\n    id             = \"rtbassoc-0d3ccb0461b434d64\"\r\n    route_table_id = \"rtb-0a467b6a8854d2a9d\"\r\n    subnet_id      = \"subnet-0fcb1cc2267783607\"\r\n}\r\n\r\n# aws_route_table_association.private[1]:\r\nresource \"aws_route_table_association\" \"private\" {\r\n    id             = \"rtbassoc-0a36e5e24aaea9c7f\"\r\n    route_table_id = \"rtb-0a467b6a8854d2a9d\"\r\n    subnet_id      = \"subnet-0d5a8df75ca238d16\"\r\n}\r\n\r\n# aws_route_table_association.public[0]:\r\n"]
[356.680293, "o", "resource \"aws_route_table_association\" \"public\" {\r\n    id             = \"rtbassoc-069884513276a9291\"\r\n    route_table_id = \"rtb-0b320955a26bff270\"\r\n    subnet_id      = \"subnet-032fc5852105a890c\"\r\n}\r\n\r\n# aws_route_table_association.public[1]:\r\n"]
[356.680362, "o", "resource \"aws_route_table_association\" \"public\" {\r\n    id             = \"rtbassoc-066b97103f7774f5f\"\r\n    route_table_id = \"rtb-0b320955a26bff270\"\r\n    subnet_id      = \"subnet-073eb7d9dfe5e5b3a\"\r\n}\r\n\r\n# aws_subnet.database[0]:\r\n"]
[356.680495, "o", "resource \"aws_subnet\" \"database\" {\r\n    arn                                            = \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-00aa0bf08ac949a4b\"\r\n    assign_ipv6_address_on_creation                = false\r\n    availability_zone                              = \"us-east-2a\"\r\n    availability_zone_id                           = \"use2-az1\"\r\n    cidr_block                                     = \"10.10.5.0/24\"\r\n    enable_dns64                                   = false\r\n    enable_lni_at_device_index                     = 0\r\n    enable_resource_name_dns_a_record_on_launch    = false\r\n    enable_resource_name_dns_aaaa_record_on_launch = false\r\n    id                                             = \"subnet-00aa0bf08ac949a4b\"\r\n    ipv6_native                                    = false\r\n    map_customer_owned_ip_on_launch                = false\r\n    map_public_ip_on_launch                        = false\r\n    owner_id                                       = \"123456789012\"\r\n    private_dns_hostname_type_on_launch            = \"ip-name\"\r\n    tags                                           = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2a\"\r\n    }\r\n    tags_all                                       = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2a\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                                         = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_subnet.database[1]:\r\n"]
[356.680663, "o", "resource \"aws_subnet\" \"database\" {\r\n    arn                                            = \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0b81e7b36ecf80560\"\r\n    assign_ipv6_address_on_creation                = false\r\n    availability_zone                              = \"us-east-2b\"\r\n    availability_zone_id                           = \"use2-az2\"\r\n    cidr_block                                     = \"10.10.6.0/24\"\r\n    enable_dns64                                   = false\r\n    enable_lni_at_device_index                     = 0\r\n    enable_resource_name_dns_a_record_on_launch    = false\r\n    enable_resource_name_dns_aaaa_record_on_launch = false\r\n    id                                             = \"subnet-0b81e7b36ecf80560\"\r\n    ipv6_native                                    = false\r\n    map_customer_owned_ip_on_launch                = false\r\n    map_public_ip_on_launch                        = false\r\n    owner_id                                       = \"123456789012\"\r\n    private_dns_hostname_type_on_launch            = \"ip-name\"\r\n    tags                                           = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2b\"\r\n    }\r\n    tags_all                                       = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-db-us-east-2b\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                                         = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_subnet.private[0]:\r\n"]
[356.680827, "o", "resource \"aws_subnet\" \"private\" {\r\n    arn                                            = \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0fcb1cc2267783607\"\r\n    assign_ipv6_address_on_creation                = false\r\n    availability_zone                              = \"us-east-2a\"\r\n    availability_zone_id                           = \"use2-az1\"\r\n    cidr_block                                     = \"10.10.3.0/24\"\r\n    enable_dns64                                   = false\r\n    enable_lni_at_device_index                     = 0\r\n    enable_resource_name_dns_a_record_on_launch    = false\r\n    enable_resource_name_dns_aaaa_record_on_launch = false\r\n    id                                             = \"subnet-0fcb1cc2267783607\"\r\n    ipv6_native                                    = false\r\n    map_customer_owned_ip_on_launch                = false\r\n    map_public_ip_on_launch                        = false\r\n    owner_id                                       = \"123456789012\"\r\n    private_dns_hostname_type_on_launch            = \"ip-name\"\r\n    tags                                           = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2a\"\r\n    }\r\n    tags_all                                       = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2a\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                                         = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_subnet.private[1]:\r\n"]
[356.680999, "o", "resource \"aws_subnet\" \"private\" {\r\n    arn                                            = \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0d5a8df75ca238d16\"\r\n    assign_ipv6_address_on_creation                = false\r\n    availability_zone                              = \"us-east-2b\"\r\n    availability_zone_id                           = \"use2-az2\"\r\n    cidr_block                                     = \"10.10.4.0/24\"\r\n    enable_dns64                                   = false\r\n    enable_lni_at_device_index                     = 0\r\n    enable_resource_name_dns_a_record_on_launch    = false\r\n    enable_resource_name_dns_aaaa_record_on_launch = false\r\n    id                                             = \"subnet-0d5a8df75ca238d16\"\r\n    ipv6_native                                    = false\r\n    map_customer_owned_ip_on_launch                = false\r\n    map_public_ip_on_launch                        = false\r\n    owner_id                                       = \"123456789012\"\r\n    private_dns_hostname_type_on_launch            = \"ip-name\"\r\n    tags                                           = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2b\"\r\n    }\r\n    tags_all                                       = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-private-us-east-2b\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                                         = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_subnet.public[0]:\r\n"]
[356.68113, "o", "resource \"aws_subnet\" \"public\" {\r\n    arn                                            = \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-032fc5852105a890c\"\r\n    assign_ipv6_address_on_creation                = false\r\n    availability_zone                              = \"us-east-2a\"\r\n    availability_zone_id                           = \"use2-az1\"\r\n    cidr_block                                     = \"10.10.1.0/24\"\r\n    enable_dns64                                   = false\r\n    enable_lni_at_device_index                     = 0\r\n    enable_resource_name_dns_a_record_on_launch    = false\r\n    enable_resource_name_dns_aaaa_record_on_launch = false\r\n    id                                             = \"subnet-032fc5852105a890c\"\r\n    ipv6_native                                    = false\r\n    map_customer_owned_ip_on_launch                = false\r\n    map_public_ip_on_launch                        = true\r\n    owner_id                                       = \"123456789012\"\r\n    private_dns_hostname_type_on_launch            = \"ip-name\"\r\n    tags                                           = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2a\"\r\n    }\r\n    tags_all                                       = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2a\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                                         = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_subnet.public[1]:\r\n"]
[356.681283, "o", "resource \"aws_subnet\" \"public\" {\r\n    arn                                            = \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-073eb7d9dfe5e5b3a\"\r\n    assign_ipv6_address_on_creation                = false\r\n    availability_zone                              = \"us-east-2b\"\r\n    availability_zone_id                           = \"use2-az2\"\r\n    cidr_block                                     = \"10.10.2.0/24\"\r\n    enable_dns64                                   = false\r\n    enable_lni_at_device_index                     = 0\r\n    enable_resource_name_dns_a_record_on_launch    = false\r\n    enable_resource_name_dns_aaaa_record_on_launch = false\r\n    id                                             = \"subnet-073eb7d9dfe5e5b3a\"\r\n    ipv6_native                                    = false\r\n    map_customer_owned_ip_on_launch                = false\r\n    map_public_ip_on_launch                        = true\r\n    owner_id                                       = \"123456789012\"\r\n    private_dns_hostname_type_on_launch            = \"ip-name\"\r\n    tags                                           = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2b\"\r\n    }\r\n    tags_all                                       = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc-public-us-east-2b\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                                         = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n# aws_vpc.this[0]:\r\n"]
[356.681424, "o", "resource \"aws_vpc\" \"this\" {\r\n    arn                                  = \"arn:aws:ec2:us-east-2:123456789012:vpc/vpc-030fc4e3350f272b0\"\r\n    assign_generated_ipv6_cidr_block     = false\r\n    cidr_block                           = \"10.10.0.0/16\"\r\n    default_network_acl_id               = \"acl-02cc0f723093c6ac4\"\r\n    default_route_table_id               = \"rtb-02cd8af79a2237b94\"\r\n    default_security_group_id            = \"sg-06c090779d45de155\"\r\n    dhcp_options_id                      = \"dopt-025b23922f9030ab2\"\r\n    enable_dns_hostnames                 = true\r\n    enable_dns_support                   = true\r\n    enable_network_address_usage_metrics = false\r\n    id                                   = \"vpc-030fc4e3350f272b0\"\r\n    instance_tenancy                     = \"default\"\r\n    ipv6_netmask_length                  = 0\r\n    main_route_table_id                  = \"rtb-02cd8af79a2237b94\"\r\n    owner_id                             = \"123456789012\"\r\n    tags                                 = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n    }\r\n    tags_all                             = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-vpc\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n}\r\n\r\n\r\nOutputs:\r\n\r\nazs = [\r\n    \"us-east-2a\",\r\n    \"us-east-2b\",\r\n]\r\ncgw_arns = []\r\ncgw_ids = []\r\ndatabase_nat_gateway_route_ids = []\r\ndatabase_route_table_association_ids = [\r\n    \"rtbassoc-07cbb1ef26fd10a1e\",\r\n    \"rtbassoc-088697bd198913f73\",\r\n]\r\ndatabase_route_table_ids = [\r\n    \"rtb-0a467b6a8854d2a9d\",\r\n]\r\n"]
[356.681501, "o", "database_subnet_arns = [\r\n    \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-00aa0bf08ac949a4b\",\r\n    \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0b81e7b36ecf80560\",\r\n]\r\ndatabase_subnet_group = \"terragrunt-ecs-blueprint-dev-vpc\"\r\ndatabase_subnet_group_name = \"terragrunt-ecs-blueprint-dev-vpc\"\r\ndatabase_subnets = [\r\n    \"subnet-00aa0bf08ac949a4b\",\r\n    \"subnet-0b81e7b36ecf80560\",\r\n]\r\ndatabase_subnets_cidr_blocks = [\r\n    \"10.10.5.0/24\",\r\n    \"10.10.6.0/24\",\r\n]\r\ndatabase_subnets_ipv6_cidr_blocks = []\r\ndefault_network_acl_id = \"acl-02cc0f723093c6ac4\"\r\ndefault_route_table_id = \"rtb-02cd8af79a2237b94\"\r\ndefault_security_group_id = \"sg-06c090779d45de155\"\r\nelasticache_route_table_association_ids = []\r\n"]
[356.681583, "o", "elasticache_route_table_ids = [\r\n    \"rtb-0a467b6a8854d2a9d\",\r\n]\r\nelasticache_subnet_arns = []\r\nelasticache_subnets = []\r\nelasticache_subnets_cidr_blocks = []\r\nelasticache_subnets_ipv6_cidr_blocks = []\r\nigw_arn = \"arn:aws:ec2:us-east-2:123456789012:internet-gateway/igw-0a9c3880af1688176\"\r\nigw_id = \"igw-0a9c3880af1688176\"\r\nintra_route_table_association_ids = []\r\nintra_route_table_ids = []\r\nintra_subnet_arns = []\r\nintra_subnets = []\r\nintra_subnets_cidr_blocks = []\r\nintra_subnets_ipv6_cidr_blocks = []\r\nname = \"terragrunt-ecs-blueprint-dev-vpc\"\r\nnat_ids = []\r\nnat_public_ips = []\r\nnatgw_ids = []\r\noutpost_subnet_arns = []\r\n"]
[356.681653, "o", "outpost_subnets = []\r\noutpost_subnets_cidr_blocks = []\r\noutpost_subnets_ipv6_cidr_blocks = []\r\nprivate_ipv6_egress_route_ids = []\r\nprivate_nat_gateway_route_ids = []\r\nprivate_route_table_association_ids = [\r\n    \"rtbassoc-0d3ccb0461b434d64\",\r\n    \"rtbassoc-0a36e5e24aaea9c7f\",\r\n]\r\nprivate_route_table_ids = [\r\n    \"rtb-0a467b6a8854d2a9d\",\r\n]\r\nprivate_subnet_arns = [\r\n    \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0fcb1cc2267783607\",\r\n    \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-0d5a8df75ca238d16\",\r\n]\r\n"]
[356.681725, "o", "private_subnets = [\r\n    \"subnet-0fcb1cc2267783607\",\r\n    \"subnet-0d5a8df75ca238d16\",\r\n]\r\nprivate_subnets_cidr_blocks = [\r\n    \"10.10.3.0/24\",\r\n    \"10.10.4.0/24\",\r\n]\r\nprivate_subnets_ipv6_cidr_blocks = []\r\npublic_internet_gateway_route_id = \"r-rtb-0b320955a26bff2701080289494\"\r\npublic_route_table_association_ids = [\r\n    \"rtbassoc-069884513276a9291\",\r\n    \"rtbassoc-066b97103f7774f5f\",\r\n]\r\npublic_route_table_ids = [\r\n    \"rtb-0b320955a26bff270\",\r\n]\r\n"]
[356.68179, "o", "public_subnet_arns = [\r\n    \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-032fc5852105a890c\",\r\n    \"arn:aws:ec2:us-east-2:123456789012:subnet/subnet-073eb7d9dfe5e5b3a\",\r\n]\r\npublic_subnets = [\r\n    \"subnet-032fc5852105a890c\",\r\n    \"subnet-073eb7d9dfe5e5b3a\",\r\n]\r\n"]
[356.681812, "o", "public_subnets_cidr_blocks = [\r\n    \"10.10.1.0/24\",\r\n    \"10.10.2.0/24\",\r\n]\r\npublic_subnets_ipv6_cidr_blocks = []\r\nredshift_public_route_table_association_ids = []\r\nredshift_route_table_association_ids = []\r\nredshift_route_table_ids = [\r\n    \"rtb-0a467b6a8854d2a9d\",\r\n]\r\nredshift_subnet_arns = []\r\nredshift_subnets = []\r\nredshift_subnets_cidr_blocks = []\r\n"]
[356.681877, "o", "redshift_subnets_ipv6_cidr_blocks = []\r\n"]
[356.681986, "o", "this_customer_gateway = {}\r\nvpc_arn = \"arn:aws:ec2:us-east-2:123456789012:vpc/vpc-030fc4e3350f272b0\"\r\nvpc_cidr_block = \"10.10.0.0/16\"\r\nvpc_enable_dns_hostnames = true\r\nvpc_enable_dns_support = true\r\nvpc_flow_log_cloudwatch_iam_role_arn = \"arn:aws:iam::123456789012:role/vpc-flow-log-role-20230807154320842200000002\"\r\nvpc_flow_log_destination_arn = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/vpc-flow-log/vpc-030fc4e3350f272b0\"\r\nvpc_flow_log_destination_type = \"cloud-watch-logs\"\r\nvpc_flow_log_id = \"fl-011e0b2b5ce3a6596\"\r\nvpc_id = \"vpc-030fc4e3350f272b0\"\r\nvpc_instance_tenancy = \"default\"\r\nvpc_ipv6_association_id = \"\"\r\nvpc_ipv6_cidr_block = \"\"\r\nvpc_main_route_table_id = \"rtb-02cd8af79a2237b94\"\r\nvpc_owner_id = \"123456789012\"\r\nvpc_secondary_cidr_blocks = []\r\n"]
[356.735791, "o", "# module.cluster.data.aws_partition.current:\r\ndata \"aws_partition\" \"current\" {\r\n    dns_suffix         = \"amazonaws.com\"\r\n    id                 = \"aws\"\r\n    partition          = \"aws\"\r\n    reverse_dns_prefix = \"com.amazonaws\"\r\n}\r\n\r\n# module.cluster.aws_cloudwatch_log_group.this[0]:\r\nresource \"aws_cloudwatch_log_group\" \"this\" {\r\n    arn               = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\n    id                = \"/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\n    name              = \"/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\n    retention_in_days = 90\r\n    skip_destroy      = false\r\n    tags              = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all          = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n}\r\n\r\n# module.cluster.aws_ecs_cluster.this[0]:\r\n"]
[356.736481, "o", "resource \"aws_ecs_cluster\" \"this\" {\r\n    arn      = \"arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs\"\r\n    id       = \"arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs\"\r\n    name     = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n    tags     = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n\r\n    configuration {\r\n        execute_command_configuration {\r\n            logging = \"DEFAULT\"\r\n        }\r\n    }\r\n\r\n    setting {\r\n        name  = \"containerInsights\"\r\n        value = \"enabled\"\r\n    }\r\n}\r\n\r\n# module.cluster.aws_ecs_cluster_capacity_providers.this[0]:\r\n"]
[356.73973, "o", "resource \"aws_ecs_cluster_capacity_providers\" \"this\" {\r\n    capacity_providers = [\r\n        \"FARGATE\",\r\n        \"FARGATE_SPOT\",\r\n    ]\r\n    cluster_name       = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n    id                 = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n\r\n    default_capacity_provider_strategy {\r\n        base              = 0\r\n        capacity_provider = \"FARGATE\"\r\n        weight            = 50\r\n    }\r\n    default_capacity_provider_strategy {\r\n        base              = 0\r\n        capacity_provider = \"FARGATE_SPOT\"\r\n        weight            = 50\r\n    }\r\n}\r\n\r\n\r\nOutputs:\r\n\r\nautoscaling_capacity_providers = {}\r\ncloudwatch_log_group_arn = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\ncloudwatch_log_group_name = \"/aws/ecs/dev-terragrunt-ecs-blueprint-ecs\"\r\ncluster_arn = \"arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs\"\r\ncluster_capacity_providers = {\r\n    dev-terragrunt-ecs-blueprint-ecs = {\r\n        capacity_providers                 = [\r\n            \"FARGATE\",\r\n            \"FARGATE_SPOT\",\r\n        ]\r\n        cluster_name                       = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n        default_capacity_provider_strategy = [\r\n            {\r\n                base              = 0\r\n                capacity_provider = \"FARGATE\"\r\n                weight            = 50\r\n            },\r\n            {\r\n                base              = 0\r\n                capacity_provider = \"FARGATE_SPOT\"\r\n                weight            = 50\r\n            },\r\n        ]\r\n        id                                 = \"dev-terragrunt-ecs-blueprint-ecs\"\r\n    }\r\n}\r\ncluster_id = \"arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs\"\r\ncluster_name = \"dev-terragrunt-ecs-blueprint-ecs\"\r\nservices = {}\r\n"]
[356.89567, "o", "\u001b[33mWARN\u001b[0m[0007] No double-slash (//) found in source URL /terraform-aws-modules/vpc/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/VPC] \r\n"]
[359.923737, "o", "\u001b[33mWARN\u001b[0m[0010] No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB] \r\n"]
[364.969152, "o", "# aws_security_group.this[0]:\r\n"]
[364.96941, "o", "resource \"aws_security_group\" \"this\" {\r\n    arn                    = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0c00905fa9df01274\"\r\n    description            = \"Security group for service with HTTP ports open for ALB\"\r\n    egress                 = []\r\n    id                     = \"sg-0c00905fa9df01274\"\r\n    ingress                = []\r\n    name                   = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n    owner_id               = \"123456789012\"\r\n    revoke_rules_on_delete = false\r\n    tags                   = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n    }\r\n    tags_all               = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n\r\n    timeouts {\r\n        create = \"10m\"\r\n        delete = \"15m\"\r\n    }\r\n}\r\n\r\n# aws_security_group_rule.egress_with_cidr_blocks[0]:\r\nresource \"aws_security_group_rule\" \"egress_with_cidr_blocks\" {\r\n    cidr_blocks            = [\r\n        \"0.0.0.0/0\",\r\n    ]\r\n    description            = \"Egress Rule\"\r\n    from_port              = 0\r\n    id                     = \"sgrule-679664633\"\r\n    prefix_list_ids        = []\r\n    protocol               = \"tcp\"\r\n    security_group_id      = \"sg-0c00905fa9df01274\"\r\n    security_group_rule_id = \"sgr-041f42c6e418d322f\"\r\n    self                   = false\r\n    to_port                = 65535\r\n    type                   = \"egress\"\r\n}\r\n\r\n# aws_security_group_rule.ingress_with_cidr_blocks[0]:\r\nresource \"aws_security_group_rule\" \"ingress_with_cidr_blocks\" {\r\n    cidr_blocks            = [\r\n        \"0.0.0.0/0\",\r\n    ]\r\n    description            = \"Service ports (ipv4). All\"\r\n    from_port              = 80\r\n    id                     = \"sgrule-1328272845\"\r\n    prefix_list_ids        = []\r\n    protocol               = \"tcp\"\r\n    security_group_id      = \"sg-0c00905fa9df01274\"\r\n    security_group_rule_id = \"sgr-0d480688ce8cd447e\"\r\n    self                   = false\r\n    to_port                = 80\r\n    type                   = \"ingress\"\r\n}\r\n\r\n# aws_security_group_rule.ingress_with_cidr_blocks[1]:\r\n"]
[364.969497, "o", "resource \"aws_security_group_rule\" \"ingress_with_cidr_blocks\" {\r\n    cidr_blocks            = [\r\n        \"0.0.0.0/0\",\r\n    ]\r\n    description            = \"Service ports (ipv4). All\"\r\n    from_port              = 443\r\n    id                     = \"sgrule-785293953\"\r\n    prefix_list_ids        = []\r\n    protocol               = \"tcp\"\r\n    security_group_id      = \"sg-0c00905fa9df01274\"\r\n    security_group_rule_id = \"sgr-0d8fcb1db24bfb5ef\"\r\n    self                   = false\r\n    to_port                = 443\r\n    type                   = \"ingress\"\r\n}\r\n\r\n\r\nOutputs:\r\n\r\nsecurity_group_arn = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0c00905fa9df01274\"\r\nsecurity_group_description = \"Security group for service with HTTP ports open for ALB\"\r\nsecurity_group_id = \"sg-0c00905fa9df01274\"\r\nsecurity_group_name = \"dev-terragrunt-ecs-blueprint-alb-sg\"\r\nsecurity_group_owner_id = \"123456789012\"\r\nsecurity_group_vpc_id = \"vpc-030fc4e3350f272b0\"\r\n"]
[365.215657, "o", "\u001b[33mWARN\u001b[0m[0015] No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ALB] \r\n"]
[368.290257, "o", "\u001b[33mWARN\u001b[0m[0018] No double-slash (//) found in source URL /terraform-aws-modules/security-group/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Network/SecurityGroups/ECS/SampleService] \r\n"]
[368.292554, "o", "\u001b[33mWARN\u001b[0m[0018] No double-slash (//) found in source URL /terraform-aws-modules/alb/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB] \r\n"]
[373.589727, "o", "# aws_security_group.this[0]:\r\n"]
[373.590098, "o", "resource \"aws_security_group\" \"this\" {\r\n    arn                    = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0266f9b26938eb40e\"\r\n    description            = \"Security group for service with HTTP ports open for ALB\"\r\n    egress                 = []\r\n    id                     = \"sg-0266f9b26938eb40e\"\r\n    ingress                = []\r\n    name                   = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n    owner_id               = \"123456789012\"\r\n    revoke_rules_on_delete = false\r\n    tags                   = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n    }\r\n    tags_all               = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Networking\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n\r\n    timeouts {\r\n        create = \"10m\"\r\n        delete = \"15m\"\r\n    }\r\n}\r\n\r\n# aws_security_group_rule.egress_with_cidr_blocks[0]:\r\nresource \"aws_security_group_rule\" \"egress_with_cidr_blocks\" {\r\n    cidr_blocks            = [\r\n        \"0.0.0.0/0\",\r\n    ]\r\n    description            = \"Egress Rule\"\r\n    from_port              = 0\r\n    id                     = \"sgrule-2110121950\"\r\n    prefix_list_ids        = []\r\n    protocol               = \"tcp\"\r\n    security_group_id      = \"sg-0266f9b26938eb40e\"\r\n    security_group_rule_id = \"sgr-022f7438c9013bb3a\"\r\n    self                   = false\r\n    to_port                = 65535\r\n    type                   = \"egress\"\r\n}\r\n\r\n# aws_security_group_rule.ingress_with_source_security_group_id[0]:\r\nresource \"aws_security_group_rule\" \"ingress_with_source_security_group_id\" {\r\n    description              = \"Security Groups for inbound traffic to service\"\r\n    from_port                = 80\r\n    id                       = \"sgrule-2350988964\"\r\n    prefix_list_ids          = []\r\n    protocol                 = \"tcp\"\r\n    security_group_id        = \"sg-0266f9b26938eb40e\"\r\n    security_group_rule_id   = \"sgr-0e2b69f0683eba909\"\r\n    self                     = false\r\n    source_security_group_id = \"sg-0c00905fa9df01274\"\r\n    to_port                  = 80\r\n    type                     = \"ingress\"\r\n}\r\n\r\n\r\nOutputs:\r\n\r\nsecurity_group_arn = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0266f9b26938eb40e\"\r\nsecurity_group_description = \"Security group for service with HTTP ports open for ALB\"\r\nsecurity_group_id = \"sg-0266f9b26938eb40e\"\r\nsecurity_group_name = \"terragrunt-ecs-blueprint-dev-ecs-sg\"\r\nsecurity_group_owner_id = \"123456789012\""]
[373.590176, "o", "\r\nsecurity_group_vpc_id = \"vpc-030fc4e3350f272b0\"\r\n"]
[373.610464, "o", "# aws_lb.this[0]:\r\n"]
[373.610746, "o", "resource \"aws_lb\" \"this\" {\r\n    arn                                         = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\n    arn_suffix                                  = \"app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\n    desync_mitigation_mode                      = \"defensive\"\r\n    dns_name                                    = \"terragrunt-ecs-blueprint-dev-alb-2071452834.us-east-2.elb.amazonaws.com\"\r\n    drop_invalid_header_fields                  = true\r\n    enable_cross_zone_load_balancing            = true\r\n    enable_deletion_protection                  = false\r\n    enable_http2                                = true\r\n    enable_tls_version_and_cipher_suite_headers = false\r\n    enable_waf_fail_open                        = false\r\n    enable_xff_client_port                      = true\r\n    id                                          = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\n    idle_timeout                                = 60\r\n    internal                                    = false\r\n    ip_address_type                             = \"ipv4\"\r\n    load_balancer_type                          = \"application\"\r\n    name                                        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n    preserve_host_header                        = false\r\n    security_groups                             = [\r\n        \"sg-0c00905fa9df01274\",\r\n        \"sg-0d2a569a862d880f0\",\r\n    ]\r\n    subnets                                     = [\r\n        \"subnet-032fc5852105a890c\",\r\n        \"subnet-073eb7d9dfe5e5b3a\",\r\n    ]\r\n    tags                                        = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n    }\r\n    tags_all                                    = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                                      = \"vpc-030fc4e3350f272b0\"\r\n    xff_header_processing_mode                  = \"append\"\r\n    zone_id                                     = \"Z3AADJGX6KTTL2\"\r\n\r\n    access_logs {\r\n        enabled = false\r\n    }\r\n\r\n    subnet_mapping {\r\n        subnet_id = \"subnet-032fc5852105a890c\"\r\n    }\r\n    subnet_mapping {\r\n        subnet_id = \"subnet-073eb7d9dfe5e5b3a\"\r\n    }\r\n\r\n    timeouts {\r\n        create = \"10m\"\r\n        delete = \"10m\"\r\n        update = \"10m\"\r\n    }\r\n}\r\n\r\n# aws_lb_listener.frontend_http_tcp[0]:\r\nresource \"aws_lb_listener\" \"frontend_http_tcp\" {\r\n    arn               = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:listener/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6/1023862c32bf8529\"\r\n    id                = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:listener/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6/1023862c32bf8529\"\r\n    load_balancer_arn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\n    port              = 80\r\n    protocol          = \"HTTP\"\r\n    tags              = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all          = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n\r\n    default_action {\r\n        order            = 1\r\n        target_group_arn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\"\r\n        type             = \"forward\"\r\n    }\r\n}\r\n\r\n# aws_lb_target_group.main[0]:\r\n"]
[373.610968, "o", "resource \"aws_lb_target_group\" \"main\" {\r\n    arn                                = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\"\r\n    arn_suffix                         = \"targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\"\r\n    connection_termination             = false\r\n    deregistration_delay               = \"10\"\r\n    id                                 = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\"\r\n    ip_address_type                    = \"ipv4\"\r\n    lambda_multi_value_headers_enabled = false\r\n    load_balancing_algorithm_type      = \"round_robin\"\r\n    load_balancing_cross_zone_enabled  = \"use_load_balancer_configuration\"\r\n    name                               = \"demo-20230807154420354600000002\"\r\n    name_prefix                        = \"demo-\"\r\n    port                               = 80\r\n    protocol                           = \"HTTP\"\r\n    protocol_version                   = \"HTTP1\"\r\n    proxy_protocol_v2                  = false\r\n    slow_start                         = 0\r\n    tags                               = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n        \"Name\"        = \"demo-\"\r\n    }\r\n    tags_all                           = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"demo-\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    target_type                        = \"ip\"\r\n    vpc_id                             = \"vpc-030fc4e3350f272b0\"\r\n\r\n    health_check {\r\n        enabled             = true\r\n        healthy_threshold   = 5\r\n        interval            = 30\r\n        matcher             = \"200-399\"\r\n        path                = \"/\"\r\n        port                = \"traffic-port\"\r\n        protocol            = \"HTTP\"\r\n        timeout             = 10\r\n        unhealthy_threshold = 5\r\n    }\r\n\r\n    stickiness {\r\n        cookie_duration = 86400\r\n        enabled         = false\r\n        type            = \"lb_cookie\"\r\n    }\r\n\r\n    target_failover {}\r\n}\r\n\r\n# aws_security_group.this[0]:\r\n"]
[373.611206, "o", "resource \"aws_security_group\" \"this\" {\r\n    arn                    = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0d2a569a862d880f0\"\r\n    description            = \"Managed by Terraform\"\r\n    egress                 = []\r\n    id                     = \"sg-0d2a569a862d880f0\"\r\n    ingress                = []\r\n    name                   = \"terragrunt-ecs-blueprint-dev-alb-20230807154420353500000001\"\r\n    name_prefix            = \"terragrunt-ecs-blueprint-dev-alb-\"\r\n    owner_id               = \"123456789012\"\r\n    revoke_rules_on_delete = false\r\n    tags                   = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n    }\r\n    tags_all               = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Name\"        = \"terragrunt-ecs-blueprint-dev-alb\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    vpc_id                 = \"vpc-030fc4e3350f272b0\"\r\n}\r\n\r\n\r\nOutputs:\r\n\r\nhttp_tcp_listener_arns = [\r\n    \"arn:aws:elasticloadbalancing:us-east-2:123456789012:listener/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6/1023862c32bf8529\",\r\n]\r\nhttp_tcp_listener_ids = [\r\n    \"arn:aws:elasticloadbalancing:us-east-2:123456789012:listener/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6/1023862c32bf8529\",\r\n]\r\nhttps_listener_arns = []\r\nhttps_listener_ids = []\r\nlb_arn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\nlb_arn_suffix = \"app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\nlb_dns_name = \"terragrunt-ecs-blueprint-dev-alb-2071452834.us-east-2.elb.amazonaws.com\"\r\nlb_id = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/terragrunt-ecs-blueprint-dev-alb/9903fd0b458688f6\"\r\nlb_zone_id = \"Z3AADJGX6KTTL2\"\r\nsecurity_group_arn = \"arn:aws:ec2:us-east-2:123456789012:security-group/sg-0d2a569a862d880f0\"\r\nsecurity_group_id = \"sg-0d2a569a862d880f0\"\r\ntarget_group_arn_suffixes = [\r\n    \"targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\",\r\n]\r\ntarget_group_arns = [\r\n    \"arn:aws:elasticloadbalancing:us-east-2:123456789012:targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\",\r\n]\r\ntarget_group_attachments = {}\r\ntarget_group_names = [\r\n    \"demo-20230807154420354600000002\",\r\n]\r\n"]
[373.894495, "o", "\u001b[33mWARN\u001b[0m[0024] No double-slash (//) found in source URL /terraform-aws-modules/ecs/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Containers/ECSCluster] \r\n"]
[373.897487, "o", "\u001b[33mWARN\u001b[0m[0024] No double-slash (//) found in source URL /terraform-aws-modules/alb/aws. Relative paths in downloaded Terraform code may not work.  \u001b[33mprefix\u001b[0m=[/home/labvel/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure/Compute/ALB] \r\n"]
[383.117234, "o", "# data.aws_caller_identity.current:\r\ndata \"aws_caller_identity\" \"current\" {\r\n    account_id = \"123456789012\"\r\n    arn        = \"arn:aws:sts::123456789012:assumed-role/AWSReservedSSO_AWSAdministratorAccess_877fe9e4127a368d/DevSecOpsAdm\"\r\n    id         = \"123456789012\"\r\n    user_id    = \"AROAYKBUNPZNQHVTNNFB6:DevSecOpsAdm\"\r\n}\r\n\r\n# data.aws_ecs_task_definition.this[0]:\r\ndata \"aws_ecs_task_definition\" \"this\" {\r\n    arn                  = \"arn:aws:ecs:us-east-2:123456789012:task-definition/sample-dev:2\"\r\n    arn_without_revision = \"arn:aws:ecs:us-east-2:123456789012:task-definition/sample-dev\"\r\n    execution_role_arn   = \"arn:aws:iam::123456789012:role/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\n    family               = \"sample-dev\"\r\n    id                   = \"arn:aws:ecs:us-east-2:123456789012:task-definition/sample-dev:2\"\r\n    network_mode         = \"awsvpc\"\r\n    revision             = 2\r\n    status               = \"ACTIVE\"\r\n    task_definition      = \"sample-dev\"\r\n    task_role_arn        = \"arn:aws:iam::123456789012:role/sample-dev-20230807154642808400000002\"\r\n}\r\n\r\n# data.aws_iam_policy_document.task_exec[0]:\r\n"]
[383.117474, "o", "data \"aws_iam_policy_document\" \"task_exec\" {\r\n    id      = \"1415633931\"\r\n    json    = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action   = [\r\n                        \"logs:PutLogEvents\",\r\n                        \"logs:CreateLogStream\",\r\n                    ]\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"*\"\r\n                    Sid      = \"Logs\"\r\n                },\r\n                {\r\n                    Action   = [\r\n                        \"ecr:GetDownloadUrlForLayer\",\r\n                        \"ecr:GetAuthorizationToken\",\r\n                        \"ecr:BatchGetImage\",\r\n                        \"ecr:BatchCheckLayerAvailability\",\r\n                    ]\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"*\"\r\n                    Sid      = \"ECR\"\r\n                },\r\n                {\r\n                    Action   = \"ssm:GetParameters\"\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"arn:aws:ssm:*:*:parameter/*\"\r\n                    Sid      = \"GetSSMParams\"\r\n                },\r\n                {\r\n                    Action   = \"secretsmanager:GetSecretValue\"\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"arn:aws:secretsmanager:*:*:secret:*\"\r\n                    Sid      = \"GetSecrets\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    version = \"2012-10-17\"\r\n\r\n    statement {\r\n        actions       = [\r\n            \"logs:CreateLogStream\",\r\n            \"logs:PutLogEvents\",\r\n        ]\r\n        effect        = \"Allow\"\r\n        not_actions   = []\r\n        not_resources = []\r\n        resources     = [\r\n            \"*\",\r\n        ]\r\n        sid           = \"Logs\"\r\n    }\r\n    statement {\r\n        actions       = [\r\n            \"ecr:BatchCheckLayerAvailability\",\r\n            \"ecr:BatchGetImage\",\r\n            \"ecr:GetAuthorizationToken\",\r\n            \"ecr:GetDownloadUrlForLayer\",\r\n        ]\r\n        effect        = \"Allow\"\r\n        not_actions   = []\r\n        not_resources = []\r\n        resources     = [\r\n            \"*\",\r\n        ]\r\n        sid           = \"ECR\"\r\n    }\r\n    statement {\r\n        actions       = [\r\n            \"ssm:GetParameters\",\r\n        ]\r\n        effect        = \"Allow\"\r\n        not_actions   = []\r\n        not_resources = []\r\n        resources     = [\r\n            \"arn:aws:ssm:*:*:parameter/*\",\r\n        ]\r\n        sid           = \"GetSSMParams\"\r\n    }\r\n    statement {\r\n        actions       = [\r\n            \"secretsmanager:GetSecretValue\",\r\n        ]\r\n        effect        = \"Allow\"\r\n        not_actions   = []\r\n        not_resources = []\r\n        resources     = [\r\n            \"arn:aws:secretsmanager:*:*:secret:*\",\r\n        ]\r\n        sid           = \"GetSecrets\"\r\n    }\r\n}\r\n\r\n# data.aws_iam_policy_document.task_exec_assume[0]:\r\n"]
[383.11773, "o", "data \"aws_iam_policy_document\" \"task_exec_assume\" {\r\n    id      = \"2291109037\"\r\n    json    = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action    = \"sts:AssumeRole\"\r\n                    Effect    = \"Allow\"\r\n                    Principal = {\r\n                        Service = \"ecs-tasks.amazonaws.com\"\r\n                    }\r\n                    Sid       = \"ECSTaskExecutionAssumeRole\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    version = \"2012-10-17\"\r\n\r\n    statement {\r\n        actions       = [\r\n            \"sts:AssumeRole\",\r\n        ]\r\n        effect        = \"Allow\"\r\n        not_actions   = []\r\n        not_resources = []\r\n        resources     = []\r\n        sid           = \"ECSTaskExecutionAssumeRole\"\r\n\r\n        principals {\r\n            identifiers = [\r\n                \"ecs-tasks.amazonaws.com\",\r\n            ]\r\n            type        = \"Service\"\r\n        }\r\n    }\r\n}\r\n\r\n# data.aws_iam_policy_document.tasks_assume[0]:\r\n"]
[383.117973, "o", "data \"aws_iam_policy_document\" \"tasks_assume\" {\r\n    id      = \"2015757145\"\r\n    json    = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action    = \"sts:AssumeRole\"\r\n                    Condition = {\r\n                        ArnLike      = {\r\n                            \"aws:SourceArn\" = \"arn:aws:ecs:us-east-2:123456789012:*\"\r\n                        }\r\n                        StringEquals = {\r\n                            \"aws:SourceAccount\" = \"123456789012\"\r\n                        }\r\n                    }\r\n                    Effect    = \"Allow\"\r\n                    Principal = {\r\n                        Service = \"ecs-tasks.amazonaws.com\"\r\n                    }\r\n                    Sid       = \"ECSTasksAssumeRole\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    version = \"2012-10-17\"\r\n\r\n    statement {\r\n        actions       = [\r\n            \"sts:AssumeRole\",\r\n        ]\r\n        effect        = \"Allow\"\r\n        not_actions   = []\r\n        not_resources = []\r\n        resources     = []\r\n        sid           = \"ECSTasksAssumeRole\"\r\n\r\n        condition {\r\n            test     = \"ArnLike\"\r\n            values   = [\r\n                \"arn:aws:ecs:us-east-2:123456789012:*\",\r\n            ]\r\n            variable = \"aws:SourceArn\"\r\n        }\r\n        condition {\r\n            test     = \"StringEquals\"\r\n            values   = [\r\n                \"123456789012\",\r\n            ]\r\n            variable = \"aws:SourceAccount\"\r\n        }\r\n\r\n        principals {\r\n            identifiers = [\r\n                \"ecs-tasks.amazonaws.com\",\r\n            ]\r\n            type        = \"Service\"\r\n        }\r\n    }\r\n}\r\n\r\n# data.aws_partition.current:\r\ndata \"aws_partition\" \"current\" {\r\n    dns_suffix         = \"amazonaws.com\"\r\n    id                 = \"aws\"\r\n    partition          = \"aws\"\r\n    reverse_dns_prefix = \"com.amazonaws\"\r\n}\r\n\r\n# data.aws_region.current:\r\ndata \"aws_region\" \"current\" {\r\n    description = \"US East (Ohio)\"\r\n    endpoint    = \"ec2.us-east-2.amazonaws.com\"\r\n    id          = \"us-east-2\"\r\n    name        = \"us-east-2\"\r\n}\r\n\r\n# aws_appautoscaling_policy.this[\"cpu\"]:\r\n"]
[383.118087, "o", "resource \"aws_appautoscaling_policy\" \"this\" {\r\n    alarm_arns         = [\r\n        \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmHigh-68e24e2b-88a9-414e-81ea-941a1a37f9e6\",\r\n        \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmLow-cb70e5f3-6a8b-4d65-957c-076f0bfe83e0\",\r\n    ]\r\n    arn                = \"arn:aws:autoscaling:us-east-2:123456789012:scalingPolicy:ad5c1620-5b88-4198-a6e7-733e2543fb2a:resource/ecs/service/dev-terragrunt-ecs-blueprint-ecs/sample-dev:policyName/cpu\"\r\n    id                 = \"cpu\"\r\n    name               = \"cpu\"\r\n    policy_type        = \"TargetTrackingScaling\"\r\n    resource_id        = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n    scalable_dimension = \"ecs:service:DesiredCount\"\r\n    service_namespace  = \"ecs\"\r\n\r\n    target_tracking_scaling_policy_configuration {\r\n        disable_scale_in   = false\r\n        scale_in_cooldown  = 300\r\n        scale_out_cooldown = 60\r\n        target_value       = 75\r\n\r\n        predefined_metric_specification {\r\n            predefined_metric_type = \"ECSServiceAverageCPUUtilization\"\r\n        }\r\n    }\r\n}\r\n\r\n# aws_appautoscaling_policy.this[\"memory\"]:\r\n"]
[383.118163, "o", "resource \"aws_appautoscaling_policy\" \"this\" {\r\n    alarm_arns         = [\r\n        \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmHigh-c94a3c4e-9fcc-4920-85f8-0794d83642e7\",\r\n        \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmLow-835bd24f-97de-47b0-9835-b8603943456f\",\r\n    ]\r\n    arn                = \"arn:aws:autoscaling:us-east-2:123456789012:scalingPolicy:ad5c1620-5b88-4198-a6e7-733e2543fb2a:resource/ecs/service/dev-terragrunt-ecs-blueprint-ecs/sample-dev:policyName/memory\"\r\n    id                 = \"memory\"\r\n    name               = \"memory\"\r\n    policy_type        = \"TargetTrackingScaling\"\r\n    resource_id        = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n    scalable_dimension = \"ecs:service:DesiredCount\"\r\n    service_namespace  = \"ecs\"\r\n\r\n    target_tracking_scaling_policy_configuration {\r\n        disable_scale_in   = false\r\n        scale_in_cooldown  = 300\r\n        scale_out_cooldown = 60\r\n        target_value       = 75\r\n\r\n        predefined_metric_specification {\r\n            predefined_metric_type = \"ECSServiceAverageMemoryUtilization\"\r\n        }\r\n    }\r\n}\r\n\r\n# aws_appautoscaling_target.this[0]:\r\n"]
[383.118249, "o", "resource \"aws_appautoscaling_target\" \"this\" {\r\n    arn                = \"arn:aws:application-autoscaling:us-east-2:123456789012:scalable-target/0ec5ad5c16205b884198a6e7733e2543fb2a\"\r\n    id                 = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n    max_capacity       = 10\r\n    min_capacity       = 1\r\n    resource_id        = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n    role_arn           = \"arn:aws:iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService\"\r\n    scalable_dimension = \"ecs:service:DesiredCount\"\r\n    service_namespace  = \"ecs\"\r\n    tags_all           = {\r\n        \"Initiative\" = \"BlogsAmbassador\"\r\n        \"ManagedBy\"  = \"Terragrunt\"\r\n        \"Project\"    = \"terragrunt-ecs-blueprint\"\r\n    }\r\n}\r\n\r\n# aws_ecs_service.this[0]:\r\n"]
[383.118529, "o", "resource \"aws_ecs_service\" \"this\" {\r\n    cluster                            = \"arn:aws:ecs:us-east-2:123456789012:cluster/dev-terragrunt-ecs-blueprint-ecs\"\r\n    deployment_maximum_percent         = 200\r\n    deployment_minimum_healthy_percent = 66\r\n    desired_count                      = 1\r\n    enable_ecs_managed_tags            = true\r\n    enable_execute_command             = false\r\n    force_new_deployment               = true\r\n    health_check_grace_period_seconds  = 0\r\n    iam_role                           = \"/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS\"\r\n    id                                 = \"arn:aws:ecs:us-east-2:123456789012:service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n    launch_type                        = \"FARGATE\"\r\n    name                               = \"sample-dev\"\r\n    platform_version                   = \"LATEST\"\r\n    propagate_tags                     = \"NONE\"\r\n    scheduling_strategy                = \"REPLICA\"\r\n    tags                               = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all                           = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    task_definition                    = \"sample-dev:2\"\r\n    triggers                           = {}\r\n    wait_for_steady_state              = false\r\n\r\n    deployment_circuit_breaker {\r\n        enable   = false\r\n        rollback = false\r\n    }\r\n\r\n    deployment_controller {\r\n        type = \"ECS\"\r\n    }\r\n\r\n    load_balancer {\r\n        container_name   = \"ecs-sample\"\r\n        container_port   = 80\r\n        target_group_arn = \"arn:aws:elasticloadbalancing:us-east-2:123456789012:targetgroup/demo-20230807154420354600000002/7d74ed055e437bc6\"\r\n    }\r\n\r\n    network_configuration {\r\n        assign_public_ip = true\r\n        subnets          = [\r\n            \"subnet-032fc5852105a890c\",\r\n            \"subnet-073eb7d9dfe5e5b3a\",\r\n        ]\r\n    }\r\n\r\n    timeouts {}\r\n}\r\n\r\n# aws_ecs_task_definition.this[0]:\r\n"]
[383.118783, "o", "resource \"aws_ecs_task_definition\" \"this\" {\r\n    arn                      = \"arn:aws:ecs:us-east-2:123456789012:task-definition/sample-dev:2\"\r\n    arn_without_revision     = \"arn:aws:ecs:us-east-2:123456789012:task-definition/sample-dev\"\r\n    container_definitions    = jsonencode(\r\n        [\r\n            {\r\n                cpu                    = 256\r\n                environment            = []\r\n                essential              = true\r\n                image                  = \"public.ecr.aws/ecs-sample-image/amazon-ecs-sample:latest\"\r\n                interactive            = false\r\n                logConfiguration       = {\r\n                    logDriver = \"awslogs\"\r\n                    options   = {\r\n                        awslogs-create-group  = \"true\"\r\n                        awslogs-group         = \"amazon-ecs-sample\"\r\n                        awslogs-region        = \"us-east-2\"\r\n                        awslogs-stream-prefix = \"sample\"\r\n                    }\r\n                }\r\n                memory                 = 512\r\n                mountPoints            = []\r\n                name                   = \"ecs-sample\"\r\n                portMappings           = [\r\n                    {\r\n                        containerPort = 80\r\n                        hostPort      = 80\r\n                        name          = \"ecs-sample\"\r\n                        protocol      = \"tcp\"\r\n                    },\r\n                ]\r\n                privileged             = false\r\n                pseudoTerminal         = false\r\n                readonlyRootFilesystem = false\r\n                startTimeout           = 30\r\n                stopTimeout            = 120\r\n                volumesFrom            = []\r\n            },\r\n        ]\r\n    )\r\n    cpu                      = \"256\"\r\n    execution_role_arn       = \"arn:aws:iam::123456789012:role/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\n    family                   = \"sample-dev\"\r\n    id                       = \"sample-dev\"\r\n    memory                   = \"512\"\r\n    network_mode             = \"awsvpc\"\r\n    requires_compatibilities = [\r\n        \"FARGATE\",\r\n    ]\r\n    revision                 = 2\r\n    skip_destroy             = false\r\n    tags                     = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all                 = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\""]
[383.118818, "o", "\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    task_role_arn            = \"arn:aws:iam::123456789012:role/sample-dev-20230807154642808400000002\"\r\n\r\n    runtime_platform {\r\n        cpu_architecture        = \"X86_64\"\r\n        operating_system_family = \"LINUX\"\r\n    }\r\n}\r\n\r\n# aws_iam_policy.task_exec[0]:\r\n"]
[383.119064, "o", "resource \"aws_iam_policy\" \"task_exec\" {\r\n    arn         = \"arn:aws:iam::123456789012:policy/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808500000003\"\r\n    description = \"Task execution role IAM policy\"\r\n    id          = \"arn:aws:iam::123456789012:policy/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808500000003\"\r\n    name        = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808500000003\"\r\n    name_prefix = \"dev-terragrunt-ecs-blueprint-ecs-role-\"\r\n    path        = \"/\"\r\n    policy      = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action   = [\r\n                        \"logs:PutLogEvents\",\r\n                        \"logs:CreateLogStream\",\r\n                    ]\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"*\"\r\n                    Sid      = \"Logs\"\r\n                },\r\n                {\r\n                    Action   = [\r\n                        \"ecr:GetDownloadUrlForLayer\",\r\n                        \"ecr:GetAuthorizationToken\",\r\n                        \"ecr:BatchGetImage\",\r\n                        \"ecr:BatchCheckLayerAvailability\",\r\n                    ]\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"*\"\r\n                    Sid      = \"ECR\"\r\n                },\r\n                {\r\n                    Action   = \"ssm:GetParameters\"\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"arn:aws:ssm:*:*:parameter/*\"\r\n                    Sid      = \"GetSSMParams\"\r\n                },\r\n                {\r\n                    Action   = \"secretsmanager:GetSecretValue\"\r\n                    Effect   = \"Allow\"\r\n                    Resource = \"arn:aws:secretsmanager:*:*:secret:*\"\r\n                    Sid      = \"GetSecrets\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    policy_id   = \"ANPAYKBUNPZNS24EF2QTF\"\r\n    tags        = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all    = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n}\r\n\r\n# aws_iam_role.task_exec[0]:\r\n"]
[383.11929, "o", "resource \"aws_iam_role\" \"task_exec\" {\r\n    arn                   = \"arn:aws:iam::123456789012:role/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\n    assume_role_policy    = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action    = \"sts:AssumeRole\"\r\n                    Effect    = \"Allow\"\r\n                    Principal = {\r\n                        Service = \"ecs-tasks.amazonaws.com\"\r\n                    }\r\n                    Sid       = \"ECSTaskExecutionAssumeRole\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    create_date           = \"2023-08-07T15:46:42Z\"\r\n    description           = \"Task execution role for dev-terragrunt-ecs-blueprint-ecs-role\"\r\n    force_detach_policies = true\r\n    id                    = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\n    managed_policy_arns   = []\r\n    max_session_duration  = 3600\r\n    name                  = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\n    name_prefix           = \"dev-terragrunt-ecs-blueprint-ecs-role-\"\r\n    path                  = \"/\"\r\n    tags                  = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all              = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    unique_id             = \"AROAYKBUNPZN5AZU45E2C\"\r\n}\r\n\r\n# aws_iam_role.tasks[0]:\r\n"]
[383.119547, "o", "resource \"aws_iam_role\" \"tasks\" {\r\n    arn                   = \"arn:aws:iam::123456789012:role/sample-dev-20230807154642808400000002\"\r\n    assume_role_policy    = jsonencode(\r\n        {\r\n            Statement = [\r\n                {\r\n                    Action    = \"sts:AssumeRole\"\r\n                    Condition = {\r\n                        ArnLike      = {\r\n                            \"aws:SourceArn\" = \"arn:aws:ecs:us-east-2:123456789012:*\"\r\n                        }\r\n                        StringEquals = {\r\n                            \"aws:SourceAccount\" = \"123456789012\"\r\n                        }\r\n                    }\r\n                    Effect    = \"Allow\"\r\n                    Principal = {\r\n                        Service = \"ecs-tasks.amazonaws.com\"\r\n                    }\r\n                    Sid       = \"ECSTasksAssumeRole\"\r\n                },\r\n            ]\r\n            Version   = \"2012-10-17\"\r\n        }\r\n    )\r\n    create_date           = \"2023-08-07T15:46:42Z\"\r\n    force_detach_policies = true\r\n    id                    = \"sample-dev-20230807154642808400000002\"\r\n    managed_policy_arns   = []\r\n    max_session_duration  = 3600\r\n    name                  = \"sample-dev-20230807154642808400000002\"\r\n    name_prefix           = \"sample-dev-\"\r\n    path                  = \"/\"\r\n    tags                  = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all              = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n    unique_id             = \"AROAYKBUNPZN6JDDOEHM4\"\r\n}\r\n\r\n# aws_iam_role_policy_attachment.task_exec[0]:\r\nresource \"aws_iam_role_policy_attachment\" \"task_exec\" {\r\n    id         = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001-20230807154643916000000004\"\r\n    policy_arn = \"arn:aws:iam::123456789012:policy/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808500000003\"\r\n    role       = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\n}\r\n\r\n# aws_iam_role_policy_attachment.task_exec_additional[\"logs_full\"]:\r\n"]
[383.119669, "o", "resource \"aws_iam_role_policy_attachment\" \"task_exec_additional\" {\r\n    id         = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001-20230807154643937100000005\"\r\n    policy_arn = \"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\"\r\n    role       = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\n}\r\n\r\n\r\n# module.container_definition[\"ecs-sample\"].data.aws_region.current:\r\ndata \"aws_region\" \"current\" {\r\n    description = \"US East (Ohio)\"\r\n    endpoint    = \"ec2.us-east-2.amazonaws.com\"\r\n    id          = \"us-east-2\"\r\n    name        = \"us-east-2\"\r\n}\r\n\r\n# module.container_definition[\"ecs-sample\"].aws_cloudwatch_log_group.this[0]:\r\n"]
[383.11976, "o", "resource \"aws_cloudwatch_log_group\" \"this\" {\r\n    arn               = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/ecs/sample-dev/ecs-sample\"\r\n    id                = \"/aws/ecs/sample-dev/ecs-sample\"\r\n    name              = \"/aws/ecs/sample-dev/ecs-sample\"\r\n    retention_in_days = 14\r\n    skip_destroy      = false\r\n    tags              = {\r\n        \"Environment\" = \"dev\"\r\n        \"Layer\"       = \"Application\"\r\n    }\r\n    tags_all          = {\r\n        \"Environment\" = \"dev\"\r\n        \"Initiative\"  = \"BlogsAmbassador\"\r\n        \"Layer\"       = \"Application\"\r\n        \"ManagedBy\"   = \"Terragrunt\"\r\n        \"Project\"     = \"terragrunt-ecs-blueprint\"\r\n    }\r\n}\r\n\r\n\r\nOutputs:\r\n\r\n"]
[383.120316, "o", "autoscaling_policies = {\r\n    cpu    = {\r\n        alarm_arns                                   = [\r\n            \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmHigh-68e24e2b-88a9-414e-81ea-941a1a37f9e6\",\r\n            \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmLow-cb70e5f3-6a8b-4d65-957c-076f0bfe83e0\",\r\n        ]\r\n        arn                                          = \"arn:aws:autoscaling:us-east-2:123456789012:scalingPolicy:ad5c1620-5b88-4198-a6e7-733e2543fb2a:resource/ecs/service/dev-terragrunt-ecs-blueprint-ecs/sample-dev:policyName/cpu\"\r\n        id                                           = \"cpu\"\r\n        name                                         = \"cpu\"\r\n        policy_type                                  = \"TargetTrackingScaling\"\r\n        resource_id                                  = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n        scalable_dimension                           = \"ecs:service:DesiredCount\"\r\n        service_namespace                            = \"ecs\"\r\n        step_scaling_policy_configuration            = []\r\n        target_tracking_scaling_policy_configuration = [\r\n            {\r\n                customized_metric_specification = []\r\n                disable_scale_in                = false\r\n                predefined_metric_specification = [\r\n                    {\r\n                        predefined_metric_type = \"ECSServiceAverageCPUUtilization\"\r\n                        resource_label         = \"\"\r\n                    },\r\n                ]\r\n                scale_in_cooldown               = 300\r\n                scale_out_cooldown              = 60\r\n                target_value                    = 75\r\n            },\r\n        ]\r\n    }\r\n    memory = {\r\n        alarm_arns                                   = [\r\n            \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmHigh-c94a3c4e-9fcc-4920-85f8-0794d83642e7\",\r\n            \"arn:aws:cloudwatch:us-east-2:123456789012:alarm:TargetTracking-service/dev-terragrunt-ecs-blueprint-ecs/sample-dev-AlarmLow-835bd24f-97de-47b0-9835-b8603943456f\",\r\n        ]\r\n        arn                                          = \"arn:aws:autoscaling:us-east-2:123456789012:scalingPolicy:ad5c1620-5b88-4198-a6e7-733e2543fb2a:resource/ecs/service/dev-terragrunt-ecs-blueprint-ecs/sample-dev:policyName/memory\"\r\n        id                                           = \"memory\"\r\n        name                                         = \"memory\"\r\n        policy_type                                  = \"TargetTrackingScaling\"\r\n        resource_id                                  = \"service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\n        scalable_dimension                           = \"ecs:service:DesiredCount\"\r\n        service_namespace                            = \"ecs\"\r\n        step_scaling_policy_configuration            = []\r\n        target_tracking_scaling_policy_configuration = [\r\n            {\r\n                customized_metric_specification = []\r\n                disable_scale_in                = false\r\n                predefined_metric_specification = [\r\n                    {\r\n                        predefined_metric_type = \"ECSServiceAverageMemoryUtilization\"\r\n                        resource_label         = \"\"\r\n                    },\r\n                ]\r\n                scale_in_cooldown               = 300\r\n                scale_out_cooldown              = 60\r\n                target_value                    = 75\r\n            },\r\n        ]\r\n    }\r\n}\r\nautoscaling_scheduled_actions = {}\r\n"]
[383.120447, "o", "container_definitions = {\r\n    ecs-sample = {\r\n        cloudwatch_log_group_arn  = \"arn:aws:logs:us-east-2:123456789012:log-group:/aws/ecs/sample-dev/ecs-sample\"\r\n        cloudwatch_log_group_name = \"/aws/ecs/sample-dev/ecs-sample\"\r\n        container_definition      = {\r\n            cpu                    = 256\r\n            essential              = true\r\n            image                  = \"public.ecr.aws/ecs-sample-image/amazon-ecs-sample:latest\"\r\n            interactive            = false\r\n            logConfiguration       = {\r\n                logDriver = \"awslogs\"\r\n                options   = {\r\n                    awslogs-create-group  = \"true\"\r\n                    awslogs-group         = \"amazon-ecs-sample\"\r\n                    awslogs-region        = \"us-east-2\"\r\n                    awslogs-stream-prefix = \"sample\"\r\n                }\r\n            }\r\n            memory                 = 512\r\n            name                   = \"ecs-sample\"\r\n            portMappings           = [\r\n                {\r\n                    containerPort = 80\r\n                    name          = \"ecs-sample\"\r\n                    protocol      = \"tcp\"\r\n                },\r\n            ]\r\n            privileged             = false\r\n            pseudoTerminal         = false\r\n            readonlyRootFilesystem = false\r\n            startTimeout           = 30\r\n            stopTimeout            = 120\r\n        }\r\n    }\r\n}\r\nid = \"arn:aws:ecs:us-east-2:123456789012:service/dev-terragrunt-ecs-blueprint-ecs/sample-dev\"\r\nname = \"sample-dev\"\r\ntask_definition_arn = \"arn:aws:ecs:us-east-2:123456789012:task-definition/sample-dev:2\"\r\ntask_definition_family = \"sample-dev\"\r\ntask_definition_revision = 2\r\ntask_exec_iam_role_arn = \"arn:aws:iam::123456789012:role/dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\ntask_exec_iam_role_name = \"dev-terragrunt-ecs-blueprint-ecs-role-20230807154642808300000001\"\r\ntask_exec_iam_role_unique_id = \"AROAYKBUNPZN5AZU45E2C\"\r\ntasks_iam_role_arn = \"arn:aws:iam::123456789012:role/sample-dev-20230807154642808400000002\"\r\ntasks_iam_role_name = \"sample-dev-20230807154642808400000002\"\r\ntasks_iam_role_unique_id = \"AROAYKBUNPZN6JDDOEHM4\"\r\n"]
[383.12546, "o", "\u001b[?2004h\u001b]0;labvel@VelPro: ~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure\u0007\u001b[01;32mlabvel@VelPro\u001b[00m:\u001b[01;34m~/projects/blogs/iac-at-scale-aws/terragrunt_ecs_blueprint/infrastructure\u001b[00m$ "]
[385.501096, "o", "e"]
[385.686335, "o", "x"]
[385.82129, "o", "i"]
[386.001407, "o", "t"]
[386.16031, "o", " "]
[387.374609, "o", "\r\n"]
[387.374672, "o", "\u001b[?2004l\r"]
[387.374873, "o", "exit\r\n"]
